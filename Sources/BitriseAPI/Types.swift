// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Get list of available Bitrise addons
    ///
    /// List all the available Bitrise addons
    ///
    /// - Remark: HTTP `GET /addons`.
    /// - Remark: Generated from `#/paths//addons/get(addonsList)`.
    func addonsList(_ input: Operations.addonsList.Input) async throws -> Operations.addonsList.Output
    /// Get a specific Bitrise addon
    ///
    /// Show details of a specific Bitrise addon
    ///
    /// - Remark: HTTP `GET /addons/{addon-id}`.
    /// - Remark: Generated from `#/paths//addons/{addon-id}/get(addonsShow)`.
    func addonsShow(_ input: Operations.addonsShow.Input) async throws -> Operations.addonsShow.Output
    /// Get list of the apps
    ///
    /// List all the apps available for the authenticated account, including those that are owned by other users or Organizations.
    ///
    /// - Remark: HTTP `GET /apps`.
    /// - Remark: Generated from `#/paths//apps/get(appList)`.
    func appList(_ input: Operations.appList.Input) async throws -> Operations.appList.Output
    /// Add a new app
    ///
    /// Add a new app to Bitrise. This is the first step of the app registration process. To successfully set it up, you need to provide the required app parameters: the repository URL and the isPublic field. Read more about the app creation process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app).
    ///
    /// - Remark: HTTP `POST /apps/register`.
    /// - Remark: Generated from `#/paths//apps/register/post(appCreate)`.
    func appCreate(_ input: Operations.appCreate.Input) async throws -> Operations.appCreate.Output
    /// Get a specific app
    ///
    /// Get the details of a specific app by providing the app slug. You can get the app slug by calling the [/apps](https://api-docs.bitrise.io/#/application/app-list) endpoint or by opening the app on bitrise.io and copying the slug from the URL.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/get(appShow)`.
    func appShow(_ input: Operations.appShow.Input) async throws -> Operations.appShow.Output
    /// Updates an app
    ///
    /// Updates an app by slug. Only updates the fields specified in the body.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/patch(appUpdate)`.
    func appUpdate(_ input: Operations.appUpdate.Input) async throws -> Operations.appUpdate.Output
    /// Deletes an app
    ///
    /// Deletes an app by slug. Use with care, make sure you really want to delete the app. This action cannot be undone.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/delete(appDelete)`.
    func appDelete(_ input: Operations.appDelete.Input) async throws -> Operations.appDelete.Output
    /// Get list of the addons for apps
    ///
    /// List all the provisioned addons for the authorized apps
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/addons`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/addons/get(addonListByApp)`.
    func addonListByApp(_ input: Operations.addonListByApp.Input) async throws -> Operations.addonListByApp.Output
    /// Get a list of the android keystore files
    ///
    /// List all the android keystore files that have been uploaded to a specific app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/android-keystore-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/get(androidKeystoreFileList)`.
    func androidKeystoreFileList(_ input: Operations.androidKeystoreFileList.Input) async throws -> Operations.androidKeystoreFileList.Output
    /// Create an Android keystore file
    ///
    /// Add a new Android keystore file to an app. `keystore_file_name` is required if there is already an existing keystore file for the app. It will determine the environment variable key to be used to refer to the keystore file in builds. E.g. `BITRISE_ANDROID_KEYSTORE_<keystore_file_name>_URL`. The `keystore_file_name` can only contain letters, numbers, and underscores.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/android-keystore-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/post(androidKeystoreFileCreate)`.
    func androidKeystoreFileCreate(_ input: Operations.androidKeystoreFileCreate.Input) async throws -> Operations.androidKeystoreFileCreate.Output
    /// Delete an android keystore file
    ///
    /// Delete an app's android keystore file. You can fetch an app's android keystore file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/android-keystore-files](https://api-docs.bitrise.io/#/android-keystore-file/android-keystore-file-list) endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-android-keystore-files.html) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/delete(androidKeystoreFileDelete)`.
    func androidKeystoreFileDelete(_ input: Operations.androidKeystoreFileDelete.Input) async throws -> Operations.androidKeystoreFileDelete.Output
    /// Confirm an android keystore file upload
    ///
    /// This is the last step of uploading an android keystore file to Bitrise. Confirm the android keystore file upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/post(androidKeystoreFileConfirm)`.
    func androidKeystoreFileConfirm(_ input: Operations.androidKeystoreFileConfirm.Input) async throws -> Operations.androidKeystoreFileConfirm.Output
    /// List 1000 archived builds of an app
    ///
    /// List the first 1000 archived builds of a specified Bitrise app. Set parameters to filter builds:
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/archived-builds`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/archived-builds/get(archivedBuildsList)`.
    func archivedBuildsList(_ input: Operations.archivedBuildsList.Input) async throws -> Operations.archivedBuildsList.Output
    /// Get bitrise.yml of a specific app
    ///
    /// Get the full `bitrise.yml` configuration of an application, by providing the app slug. It returns the current `bitrise.yml` that is stored on bitrise.io in full, including the trigger map, the different workflows and the Steps.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/bitrise.yml`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/get(appConfigDatastoreShow)`.
    func appConfigDatastoreShow(_ input: Operations.appConfigDatastoreShow.Input) async throws -> Operations.appConfigDatastoreShow.Output
    /// Upload a new bitrise.yml for your application.
    ///
    /// Upload a new bitrise.yml for your application.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/bitrise.yml`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/post(appConfigCreate)`.
    func appConfigCreate(_ input: Operations.appConfigCreate.Input) async throws -> Operations.appConfigCreate.Output
    /// Getting the location of the application's bitrise.yaml
    ///
    /// Getting the location of the application's bitrise.yaml. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/bitrise.yml/config`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/get(appSetupBitriseYmlConfigGet)`.
    func appSetupBitriseYmlConfigGet(_ input: Operations.appSetupBitriseYmlConfigGet.Input) async throws -> Operations.appSetupBitriseYmlConfigGet.Output
    /// Changing the location of the application's bitrise.yaml
    ///
    /// Changing the location of the application's bitrise.yaml. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/bitrise.yml/config`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/put(appSetupBitriseYmlConfigUpdate)`.
    func appSetupBitriseYmlConfigUpdate(_ input: Operations.appSetupBitriseYmlConfigUpdate.Input) async throws -> Operations.appSetupBitriseYmlConfigUpdate.Output
    /// List the branches with existing builds of an app's repository
    ///
    /// Lists only those branches of a specified Bitrise app that have existing builds.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/branches`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/branches/get(branchList)`.
    func branchList(_ input: Operations.branchList.Input) async throws -> Operations.branchList.Output
    /// Get a list of the build certificates
    ///
    /// List all the build certificates that have been uploaded to a specific app. Read more in our [Listing the uploaded iOS code signing files of an app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-certificates`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/get(buildCertificateList)`.
    func buildCertificateList(_ input: Operations.buildCertificateList.Input) async throws -> Operations.buildCertificateList.Output
    /// Create a build certificate
    ///
    /// Create a temporary pre-signed upload URL for the build certificate and upload the file to AWS with a simple `curl` request. To complete the uploading process and view your files on the Code Signing tab of your app, continue with the [POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded](https://api-docs.bitrise.io/#/build-certificate/build-certificate-confirm) endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/build-certificates`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/post(buildCertificateCreate)`.
    func buildCertificateCreate(_ input: Operations.buildCertificateCreate.Input) async throws -> Operations.buildCertificateCreate.Output
    /// Get a specific build certificate
    ///
    /// Retrieve data of a specific build certificate. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint to list all available build certificates of an app. Read more in our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-certificates/{build-certificate-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/get(buildCertificateShow)`.
    func buildCertificateShow(_ input: Operations.buildCertificateShow.Input) async throws -> Operations.buildCertificateShow.Output
    /// Update a build certificate
    ///
    /// Update an uploaded build certificate's attributes. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/build-certificates/{build-certificate-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/patch(buildCertificateUpdate)`.
    func buildCertificateUpdate(_ input: Operations.buildCertificateUpdate.Input) async throws -> Operations.buildCertificateUpdate.Output
    /// Delete a build certificate
    ///
    /// Delete an app's build certificate. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint to list all available build certificates of an app. Read more in our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/delete(buildCertificateDelete)`.
    func buildCertificateDelete(_ input: Operations.buildCertificateDelete.Input) async throws -> Operations.buildCertificateDelete.Output
    /// Confirm a build certificate upload
    ///
    /// This is the last step of uploading a build certificate to Bitrise. Confirm the build certificate upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the iOS code signing file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/post(buildCertificateConfirm)`.
    func buildCertificateConfirm(_ input: Operations.buildCertificateConfirm.Input) async throws -> Operations.buildCertificateConfirm.Output
    /// List the open build requests for an app
    ///
    /// List the existing open build requests of a specified Bitrise app
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-requests`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/get(buildRequestList)`.
    func buildRequestList(_ input: Operations.buildRequestList.Input) async throws -> Operations.buildRequestList.Output
    /// Update a build request
    ///
    /// Update a specific build request of a specific app
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/build-requests/{build-request-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/{build-request-slug}/patch(buildRequestUpdate)`.
    func buildRequestUpdate(_ input: Operations.buildRequestUpdate.Input) async throws -> Operations.buildRequestUpdate.Output
    /// List the workflows of an app
    ///
    /// List the workflows that were triggered at any time for a given Bitrise app. Note that it might list workflows that are currently not defined in the app's `bitrise.yml` configuration - and conversely, workflows that were never triggered will not be listed even if they are defined in the `bitrise.yml` file.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-workflows`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-workflows/get(buildWorkflowList)`.
    func buildWorkflowList(_ input: Operations.buildWorkflowList.Input) async throws -> Operations.buildWorkflowList.Output
    /// List all builds of an app
    ///
    /// List all the builds of a specified Bitrise app. Set parameters to filter builds: for example, you can search for builds run with a given workflow or all builds that were triggered by Pull Requests. It returns all the relevant data of the build.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/get(buildList)`.
    func buildList(_ input: Operations.buildList.Input) async throws -> Operations.buildList.Output
    /// Trigger a new build/pipeline
    ///
    /// Trigger a new build/pipeline. Specify an app slug and at least one parameter out of three: a git tag or git commit hash, a branch, or a workflow/pipeline ID. You can also set specific parameters for Pull Request builds/pipelines and define additional environment variables for your build/pipeline. [Check out our detailed guide](https://devcenter.bitrise.io/api/build-trigger/).
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/builds`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/post(buildTrigger)`.
    func buildTrigger(_ input: Operations.buildTrigger.Input) async throws -> Operations.buildTrigger.Output
    /// Get a build of a given app
    ///
    /// Get the specified build of a given Bitrise app. You need to provide both an app slug and a build slug. You can get the build slug either by calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list) endpoint or by clicking on the build on bitrise.io and copying the slug from the URL. The endpoint returns all the relevant data of the build.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/get(buildShow)`.
    func buildShow(_ input: Operations.buildShow.Input) async throws -> Operations.buildShow.Output
    /// Abort a specific build
    ///
    /// Abort a specific build. Set an abort reason with the `abort_reason` parameter. Use the `abort_with_success` parameter to abort a build but still count it as a successful one.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/builds/{build-slug}/abort`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/abort/post(buildAbort)`.
    func buildAbort(_ input: Operations.buildAbort.Input) async throws -> Operations.buildAbort.Output
    /// Get a list of all build artifacts
    ///
    /// List all build artifacts that have been generated for an app's build. This endpoint can retrieve artifacts from the archive as well. You can use the created build artifact slugs from the response output to retrieve data of a specific build artifact with the [GET/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-show) endpoint or update a build artifact with the [PATCH/apps](https://api-docs.bitrise.io/#/build-artifact/artifact-update) endpoint.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/artifacts`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/get(artifactList)`.
    func artifactList(_ input: Operations.artifactList.Input) async throws -> Operations.artifactList.Output
    /// Get a specific build artifact
    ///
    /// Retrieve data of a specific build artifact. The endpoint can retrieve archived artifacts as well. The response output contains a time-limited download url (expires in 10 minutes) and a public install-page URL. You can view the build artifact with both URLs, but the public install-page url will not work unless you [enable it](https://devcenter.bitrise.io/tutorials/deploy/bitrise-app-deployment/#enabling-public-page-for-the-app).
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/get(artifactShow)`.
    func artifactShow(_ input: Operations.artifactShow.Input) async throws -> Operations.artifactShow.Output
    /// Update a build artifact
    ///
    /// Update the `is_public_page_enabled` attribute of your app's build. The required parameters are app slug, build slug and artifact slug. You can fetch the build artifact slug if you first list all build artifacts of an app with the [GET /apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list) endpoint.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/patch(artifactUpdate)`.
    func artifactUpdate(_ input: Operations.artifactUpdate.Input) async throws -> Operations.artifactUpdate.Output
    /// Delete a build artifact
    ///
    /// Delete a build artifact of an app's build. The required parameters are app slug, build slug and artifact slug. You can fetch the build artifact slug if you first list all build artifacts of an app with the [/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list) endpoint.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/delete(artifactDelete)`.
    func artifactDelete(_ input: Operations.artifactDelete.Input) async throws -> Operations.artifactDelete.Output
    /// Get the bitrise.yml of a build
    ///
    /// Get the bitrise.yml file of one of the builds of a given app. This will return the `bitrise.yml` configuration with which the build ran. You can compare it to [the current bitrise.yml configuration](https://api-docs.bitrise.io/#/application/app-config-datastore-show) of the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/bitrise.yml`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/bitrise.yml/get(buildBitriseYmlShow)`.
    func buildBitriseYmlShow(_ input: Operations.buildBitriseYmlShow.Input) async throws -> Operations.buildBitriseYmlShow.Output
    /// Get the build log of a build
    ///
    /// Get the build log of a specified build of a Bitrise app. You can get the build slug either by calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list) endpoint or by clicking on the build on bitrise.io and copying the slug from the URL. Preview of the log is returned in `log_chunks` field in JSON format. You can download the full raw log in txt by using the signed url returned in `expiring_raw_log_url`. Be aware that this url is expiring in 10 minutes!
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/log`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/log/get(buildLog)`.
    func buildLog(_ input: Operations.buildLog.Input) async throws -> Operations.buildLog.Output
    /// List the key-value cache items belonging to an app
    ///
    /// List all the available cache items that the builds of the app created via the save-cache step.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/cache-items`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/get(cacheList)`.
    func cacheList(_ input: Operations.cacheList.Input) async throws -> Operations.cacheList.Output
    /// Deletes all key-value cache items belonging to an app
    ///
    /// Deletes all key-value cache items created by the builds of an app. Deleted cache items are no longer accessible and cannot be restored.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/cache-items`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/delete(cacheItemDeleteAll)`.
    func cacheItemDeleteAll(_ input: Operations.cacheItemDeleteAll.Input) async throws -> Operations.cacheItemDeleteAll.Output
    /// Deletes a key-value cache item
    ///
    /// Deletes a key-value cache item. Deleted cache items are no longer accessible and cannot be restored.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/cache-items/{cache-item-id}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/delete(cacheItemDelete)`.
    func cacheItemDelete(_ input: Operations.cacheItemDelete.Input) async throws -> Operations.cacheItemDelete.Output
    /// Gets the download URL of a key-value cache item
    ///
    /// Gets a download URL of a cache item.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/cache-items/{cache-item-id}/download`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/download/get(cacheItemDownload)`.
    func cacheItemDownload(_ input: Operations.cacheItemDownload.Input) async throws -> Operations.cacheItemDownload.Output
    /// Save the application at the end of the app registration process
    ///
    /// Save the application after registering it on Bitrise and registering an SSH key (and, optionally, adding a webhook). With this endpoint you can define the initial configuration, define application-level environment variables, determine the project type, and set an Organization to be the owner of the app. Read more about the app registration process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app).
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/finish`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/finish/post(appFinish)`.
    func appFinish(_ input: Operations.appFinish.Input) async throws -> Operations.appFinish.Output
    /// Get a list of the generic project files
    ///
    /// List all the generic project files that have been uploaded to a specific app. Read more in our [Listing the uploaded files of an app](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#listing-the-uploaded-files-of-an-app) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/generic-project-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/get(genericProjectFileList)`.
    func genericProjectFileList(_ input: Operations.genericProjectFileList.Input) async throws -> Operations.genericProjectFileList.Output
    /// Create a generic project file
    ///
    /// Create a temporary pre-signed upload URL (expires in 10 minutes) for the generic project file and upload it to AWS with a simple `curl` request. To complete the uploading process and view your files on the Code Signing tab of your app, continue with the [POST /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-confirm) endpoint. Read more in our [Creating and uploading files to Generic File Storage](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#creating-and-uploading-files-to-generic-file-storage) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/generic-project-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/post(genericProjectFilesCreate)`.
    func genericProjectFilesCreate(_ input: Operations.genericProjectFilesCreate.Input) async throws -> Operations.genericProjectFilesCreate.Output
    /// Get a specific generic project file
    ///
    /// Retrieve data of a specific generic project file to check its attributes and optionally modify them with the [PATCH /apps/](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-update) endpoint. Read more in our [Retrieving a specific file's data](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#retrieving-a-specific-files-data) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/get(genericProjectFileShow)`.
    func genericProjectFileShow(_ input: Operations.genericProjectFileShow.Input) async throws -> Operations.genericProjectFileShow.Output
    /// Update a generic project file
    ///
    /// Update a generic project file's attributes. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Updating an uploaded file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#updating-an-uploaded-file) guide.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/generic-project-files/{generic-project-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/patch(genericProjectFileUpdate)`.
    func genericProjectFileUpdate(_ input: Operations.genericProjectFileUpdate.Input) async throws -> Operations.genericProjectFileUpdate.Output
    /// Delete a generic project file
    ///
    /// Delete an app's generic project file. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#deleting-a-file) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/generic-project-files/{generic-project-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/delete(genericProjectFileDelete)`.
    func genericProjectFileDelete(_ input: Operations.genericProjectFileDelete.Input) async throws -> Operations.genericProjectFileDelete.Output
    /// Confirm a generic project file upload
    ///
    /// This is the last step of uploading a generic project file to Bitrise. Confirm the generic project file upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/post(genericProjectFileConfirm)`.
    func genericProjectFileConfirm(_ input: Operations.genericProjectFileConfirm.Input) async throws -> Operations.genericProjectFileConfirm.Output
    /// List the outgoing webhooks of an app
    ///
    /// List all the outgoing webhooks registered for a specified Bitrise app. This returns all the relevant data of the webhook, including the slug of the webhook and its URL.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/outgoing-webhooks`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/get(outgoingWebhookList)`.
    func outgoingWebhookList(_ input: Operations.outgoingWebhookList.Input) async throws -> Operations.outgoingWebhookList.Output
    /// Create an outgoing webhook for an app
    ///
    /// Create an outgoing webhook for a specified Bitrise app: this can be used to send build events to a specified URL with custom headers. Currently, only build events can trigger outgoing webhooks.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/outgoing-webhooks`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/post(outgoingWebhookCreate)`.
    func outgoingWebhookCreate(_ input: Operations.outgoingWebhookCreate.Input) async throws -> Operations.outgoingWebhookCreate.Output
    /// Update an outgoing webhook of an app
    ///
    /// Update an existing outgoing webhook (URL, events, secrets and headers) for a specified Bitrise app. Even if you do not want to change one of the parameters, you still have to provide that parameter as well: simply use its existing value.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/put(outgoingWebhookUpdate)`.
    func outgoingWebhookUpdate(_ input: Operations.outgoingWebhookUpdate.Input) async throws -> Operations.outgoingWebhookUpdate.Output
    /// Delete an outgoing webhook of an app
    ///
    /// Delete an existing outgoing webhook for a specified Bitrise app.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delete(outgoingWebhookDelete)`.
    func outgoingWebhookDelete(_ input: Operations.outgoingWebhookDelete.Input) async throws -> Operations.outgoingWebhookDelete.Output
    /// List the webhook delivery items of an app
    ///
    /// List all the delivery items of an outgoing webhook of a Bitrise application
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/get(webhookDeliveryItemList)`.
    func webhookDeliveryItemList(_ input: Operations.webhookDeliveryItemList.Input) async throws -> Operations.webhookDeliveryItemList.Output
    /// Get a specific delivery item of a webhook
    ///
    /// Get the specified delivery item of an outgoing webhook of a Bitrise application
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/get(webhookDeliveryItemShow)`.
    func webhookDeliveryItemShow(_ input: Operations.webhookDeliveryItemShow.Input) async throws -> Operations.webhookDeliveryItemShow.Output
    /// Re-deliver the webhook delivery items of an app
    ///
    /// Re-deliver the delivery item of a specified webhook of a Bitrise application
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/post(webhookDeliveryItemRedeliver)`.
    func webhookDeliveryItemRedeliver(_ input: Operations.webhookDeliveryItemRedeliver.Input) async throws -> Operations.webhookDeliveryItemRedeliver.Output
    /// List all pipelines and standalone builds of an app
    ///
    /// List all the pipelines and standalone builds of a specified Bitrise app. Set parameters to filter pipelines: for example, you can search for pipelines/standalone builds run with a given workflow name or all pipelines/standalone builds that were triggered by Pull Requests. It returns all the relevant data of the pipelines/standalone builds.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/pipelines`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/get(pipelineList)`.
    func pipelineList(_ input: Operations.pipelineList.Input) async throws -> Operations.pipelineList.Output
    /// Get a pipeline of a given app
    ///
    /// Get the specified pipeline of a given Bitrise app. You need to provide both an app slug and a pipeline id. You can get the pipeline id either by calling the [/pipelines](https://api-docs.bitrise.io/#/pipelines/pipeline-list) endpoint or by clicking on the pipeline on bitrise.io and copying the id from the URL. The endpoint returns all the relevant data of the pipeline.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/pipelines/{pipeline-id}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/get(pipelineShow)`.
    func pipelineShow(_ input: Operations.pipelineShow.Input) async throws -> Operations.pipelineShow.Output
    /// Aborts a pipeline
    ///
    /// Aborts a pipeline. You need to provide the app slug and the id of the pipeline. You can add an abort reason, choose to skip notifications and make the abort with success state.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/pipelines/{pipeline-id}/abort`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/abort/post(pipelineAbort)`.
    func pipelineAbort(_ input: Operations.pipelineAbort.Input) async throws -> Operations.pipelineAbort.Output
    /// Rebuilds a pipeline
    ///
    /// Rebuilds a pipeline. You can rebuild the whole pipeline or only the unsuccessful and subsequent workflows by setting the partial flag to true.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/pipelines/{pipeline-id}/rebuild`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/rebuild/post(pipelineRebuild)`.
    func pipelineRebuild(_ input: Operations.pipelineRebuild.Input) async throws -> Operations.pipelineRebuild.Output
    /// Get a list of the provisioning profiles
    ///
    /// List all the provisioning profiles that have been uploaded to a specific app. Read more in our [Listing the uploaded iOS code signing files of an app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/provisioning-profiles`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/get(provisioningProfileList)`.
    func provisioningProfileList(_ input: Operations.provisioningProfileList.Input) async throws -> Operations.provisioningProfileList.Output
    /// Create a provisioning profile
    ///
    /// Create a temporary pre-signed upload URL (expires in 10 minutes) for the provisioning profile and upload it to AWS with a simple `curl` request. To complete the upload process, continue with the [POST /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-confirm) endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/provisioning-profiles`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/post(provisioningProfileCreate)`.
    func provisioningProfileCreate(_ input: Operations.provisioningProfileCreate.Input) async throws -> Operations.provisioningProfileCreate.Output
    /// Get a specific provisioning profile
    ///
    /// Retrieve data of a specific provisioning profile. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/get(provisioningProfileShow)`.
    func provisioningProfileShow(_ input: Operations.provisioningProfileShow.Input) async throws -> Operations.provisioningProfileShow.Output
    /// Update a provisioning profile
    ///
    /// Update an uploaded provisioning profile's attributes. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/patch(provisioningProfileUpdate)`.
    func provisioningProfileUpdate(_ input: Operations.provisioningProfileUpdate.Input) async throws -> Operations.provisioningProfileUpdate.Output
    /// Delete a provisioning profile
    ///
    /// Delete an app's provisioning profile. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/delete(provisioningProfileDelete)`.
    func provisioningProfileDelete(_ input: Operations.provisioningProfileDelete.Input) async throws -> Operations.provisioningProfileDelete.Output
    /// Confirm a provisioning profile upload
    ///
    /// This is the last step of the upload process. Confirm the provisioning profile upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the iOS code signing file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/post(provisioningProfileConfirm)`.
    func provisioningProfileConfirm(_ input: Operations.provisioningProfileConfirm.Input) async throws -> Operations.provisioningProfileConfirm.Output
    /// Add an SSH-key to a specific app
    ///
    /// Add an SSH-key to a specific app. After creating an app, you need to register the SSH key so that Bitrise will be able to access and clone your repository during the build process. This requires the app slug of your newly created app.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/register-ssh-key`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/register-ssh-key/post(sshKeyCreate)`.
    func sshKeyCreate(_ input: Operations.sshKeyCreate.Input) async throws -> Operations.sshKeyCreate.Output
    /// Register an incoming webhook for a specific application
    ///
    /// [Register an incoming webhook](https://devcenter.bitrise.io/api/incoming-and-outgoing-webhooks/#incoming-webhooks) for a specific application. You can do this during the app registration process or at any other time in an app's life. When calling this endpoint, a webhook is registered at your git provider: this is necessary to automatically trigger builds on Bitrise.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/register-webhook`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/register-webhook/post(appWebhookCreate)`.
    func appWebhookCreate(_ input: Operations.appWebhookCreate.Input) async throws -> Operations.appWebhookCreate.Output
    /// Create a new Apple App Store release for the app.
    ///
    /// Create a new iOS release for the specified app. If the release candidate parameters (`release_branch` and `workflow`) are specified then the latest successful build is automatically picked up as release candidate and if `automatic_testflight_upload` is also turned on, then an upload to TestFlight is started immediately. You can use this endpoint to set up a fully automated release flow.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/releases/app-store`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/app-store/post(releaseCreateAppStore)`.
    func releaseCreateAppStore(_ input: Operations.releaseCreateAppStore.Input) async throws -> Operations.releaseCreateAppStore.Output
    /// Create a new Google Play Store release for the app.
    ///
    /// Create a new android release for the specified app. If the release candidate parameters (`release_branch` and `workflow`) are specified then the latest successful build is automatically picked up as release candidate and if `automatic_play_console_upload` is also turned on, then an upload to Google Play Console is started immediately. You can use this endpoint to set up a fully automated release flow.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/releases/google-play`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/google-play/post(releaseCreateGooglePlay)`.
    func releaseCreateGooglePlay(_ input: Operations.releaseCreateGooglePlay.Input) async throws -> Operations.releaseCreateGooglePlay.Output
    /// Lists group roles for an app
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/roles/{role-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/get(appRolesQuery)`.
    func appRolesQuery(_ input: Operations.appRolesQuery.Input) async throws -> Operations.appRolesQuery.Output
    /// Replaces group roles for an app
    ///
    /// Replaces the groups for a given role on an app. Only the given groups will be present for a role on the app after this call.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/roles/{role-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/put(appRolesUpdate)`.
    func appRolesUpdate(_ input: Operations.appRolesUpdate.Input) async throws -> Operations.appRolesUpdate.Output
    /// List the application secrets (with no values)
    ///
    /// List the application secrets (with no values). Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/secrets`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/get(secretList)`.
    func secretList(_ input: Operations.secretList.Input) async throws -> Operations.secretList.Output
    /// Upsert an application secret
    ///
    /// Upsert an application secret. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/put(secretUpsert)`.
    func secretUpsert(_ input: Operations.secretUpsert.Input) async throws -> Operations.secretUpsert.Output
    /// Delete an application secret
    ///
    /// Delete an application secret. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/delete(secretDelete)`.
    func secretDelete(_ input: Operations.secretDelete.Input) async throws -> Operations.secretDelete.Output
    /// Get the value of an (unprotected) application secrets
    ///
    /// Get the value of an (unprotected) application secrets. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/secrets/{secret-name}/value`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/value/get(secretValueGet)`.
    func secretValueGet(_ input: Operations.secretValueGet.Input) async throws -> Operations.secretValueGet.Output
    /// List the test devices for an app
    ///
    /// List registered test devices of all members of a specified Bitrise app
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/test-devices`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/test-devices/get(testDeviceList)`.
    func testDeviceList(_ input: Operations.testDeviceList.Input) async throws -> Operations.testDeviceList.Output
    /// Updates the app's notification settings
    ///
    /// Updates the app's email notification settings with parameters
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/update-email-notifications`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/update-email-notifications/patch(appNotifications)`.
    func appNotifications(_ input: Operations.appNotifications.Input) async throws -> Operations.appNotifications.Output
    /// List all builds
    ///
    /// List all the Bitrise builds that can be accessed with the authenticated account. Filter builds based on their owner, using the owner slug, or the status of the build.
    ///
    /// - Remark: HTTP `GET /builds`.
    /// - Remark: Generated from `#/paths//builds/get(buildListAll)`.
    func buildListAll(_ input: Operations.buildListAll.Input) async throws -> Operations.buildListAll.Output
    /// Add a member to a group
    ///
    /// Add a member to a group
    ///
    /// - Remark: HTTP `POST /groups/{group-slug}/add_member`.
    /// - Remark: Generated from `#/paths//groups/{group-slug}/add_member/post(groupMemberAdd)`.
    func groupMemberAdd(_ input: Operations.groupMemberAdd.Input) async throws -> Operations.groupMemberAdd.Output
    /// Get your profile info
    ///
    /// Shows the authenticated users profile info
    ///
    /// - Remark: HTTP `GET /me`.
    /// - Remark: Generated from `#/paths//me/get(userProfile)`.
    func userProfile(_ input: Operations.userProfile.Input) async throws -> Operations.userProfile.Output
    /// Get list of Bitrise activity events
    ///
    /// List all the Bitrise activity events
    ///
    /// - Remark: HTTP `GET /me/activities`.
    /// - Remark: Generated from `#/paths//me/activities/get(activityList)`.
    func activityList(_ input: Operations.activityList.Input) async throws -> Operations.activityList.Output
    /// The subscription plan of the user
    ///
    /// Get the subscription of the user: the current plan, any pending plans, and the duration of a trial period if applicable
    ///
    /// - Remark: HTTP `GET /me/plan`.
    /// - Remark: Generated from `#/paths//me/plan/get(userPlan)`.
    func userPlan(_ input: Operations.userPlan.Input) async throws -> Operations.userPlan.Output
    /// List the organizations that the user is part of
    ///
    /// List all Bitrise organizations that the user is part of
    ///
    /// - Remark: HTTP `GET /organizations`.
    /// - Remark: Generated from `#/paths//organizations/get(orgList)`.
    func orgList(_ input: Operations.orgList.Input) async throws -> Operations.orgList.Output
    /// Get a specified organization.
    ///
    /// Get a specified Bitrise organization that the user is part of.
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/get(orgShow)`.
    func orgShow(_ input: Operations.orgShow.Input) async throws -> Operations.orgShow.Output
    /// Get list of the apps for an organization
    ///
    /// List all the available apps owned by a given organization. [Find the organization URL](https://devcenter.bitrise.io/team-management/organizations/org-url/) of the organisations you are part of; be aware that the endpoint will not return any apps if the authenticated account is not a member of the given organisation.
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/apps`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/get(appListByOrganization)`.
    func appListByOrganization(_ input: Operations.appListByOrganization.Input) async throws -> Operations.appListByOrganization.Output
    /// Migrate machine types
    ///
    /// Migrates all apps' machine types of an organization from one machine type to another
    ///
    /// - Remark: HTTP `PATCH /organizations/{org-slug}/apps/machine_types`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/machine_types/patch(organizationMachineTypeUpdate)`.
    func organizationMachineTypeUpdate(_ input: Operations.organizationMachineTypeUpdate.Input) async throws -> Operations.organizationMachineTypeUpdate.Output
    /// List organizations groups
    ///
    /// Lists the groups of an organization
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/groups`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/get(organizationGroupList)`.
    func organizationGroupList(_ input: Operations.organizationGroupList.Input) async throws -> Operations.organizationGroupList.Output
    /// Adds a group to the organization
    ///
    /// Adds a group to the organization
    ///
    /// - Remark: HTTP `POST /organizations/{org-slug}/groups`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/post(organizationGroupAdd)`.
    func organizationGroupAdd(_ input: Operations.organizationGroupAdd.Input) async throws -> Operations.organizationGroupAdd.Output
    /// List the members of the organization
    ///
    /// List the members of the organization
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/members`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/get(memberList)`.
    func memberList(_ input: Operations.memberList.Input) async throws -> Operations.memberList.Output
    /// Adds a member to the organization
    ///
    /// Adds a member to the organization
    ///
    /// - Remark: HTTP `POST /organizations/{org-slug}/members`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/post(memberAdd)`.
    func memberAdd(_ input: Operations.memberAdd.Input) async throws -> Operations.memberAdd.Output
    /// Get the secrets of an organization
    ///
    /// Get the secrets of an organization
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/secrets`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/get(secretsList)`.
    func secretsList(_ input: Operations.secretsList.Input) async throws -> Operations.secretsList.Output
    /// Create a new secret
    ///
    /// Create a new secret
    ///
    /// - Remark: HTTP `POST /organizations/{org-slug}/secrets`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/post(secretCreate)`.
    func secretCreate(_ input: Operations.secretCreate.Input) async throws -> Operations.secretCreate.Output
    /// Get a single secret by name
    ///
    /// Get a single secret by name, including the value if not protected
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/get(secretsShow)`.
    func secretsShow(_ input: Operations.secretsShow.Input) async throws -> Operations.secretsShow.Output
    /// Update an existing secret
    ///
    /// Update an existing secret. If the secret is protected, only its value can be overridden.
    ///
    /// - Remark: HTTP `PATCH /organizations/{org-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/patch(secretUpdate)`.
    func secretUpdate(_ input: Operations.secretUpdate.Input) async throws -> Operations.secretUpdate.Output
    /// Delete a secret by name
    ///
    /// Delete a secret by name
    ///
    /// - Remark: HTTP `DELETE /organizations/{org-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/delete(secretDeletemixin0)`.
    func secretDeletemixin0(_ input: Operations.secretDeletemixin0.Input) async throws -> Operations.secretDeletemixin0.Output
    /// Get list of the addons for organization
    ///
    /// List all the provisioned addons for organization
    ///
    /// - Remark: HTTP `GET /organizations/{organization-slug}/addons`.
    /// - Remark: Generated from `#/paths//organizations/{organization-slug}/addons/get(addonListByOrganization)`.
    func addonListByOrganization(_ input: Operations.addonListByOrganization.Input) async throws -> Operations.addonListByOrganization.Output
    /// List all pipelines/standalone builds
    ///
    /// List all the Bitrise pipelines/standalone builds that can be accessed with the authenticated account. Filter pipelines/standalone builds based on their owner, using the owner slug, or the status of the pipeline/standalone build.
    ///
    /// - Remark: HTTP `GET /pipelines`.
    /// - Remark: Generated from `#/paths//pipelines/get(pipelineListAll)`.
    func pipelineListAll(_ input: Operations.pipelineListAll.Input) async throws -> Operations.pipelineListAll.Output
    /// Migrate machine types
    ///
    /// Migrates all apps' machine types of a user from one machine type to another
    ///
    /// - Remark: HTTP `PATCH /user/{user-slug}/apps/machine_types`.
    /// - Remark: Generated from `#/paths//user/{user-slug}/apps/machine_types/patch(userMachineTypeUpdate)`.
    func userMachineTypeUpdate(_ input: Operations.userMachineTypeUpdate.Input) async throws -> Operations.userMachineTypeUpdate.Output
    /// Get a specific user
    ///
    /// Show information about a specific user
    ///
    /// - Remark: HTTP `GET /users/{user-slug}`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/get(userShow)`.
    func userShow(_ input: Operations.userShow.Input) async throws -> Operations.userShow.Output
    /// Get list of the addons for user
    ///
    /// List all the provisioned addons for the authenticated user
    ///
    /// - Remark: HTTP `GET /users/{user-slug}/addons`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/addons/get(addonListByUser)`.
    func addonListByUser(_ input: Operations.addonListByUser.Input) async throws -> Operations.addonListByUser.Output
    /// List Apple API credentials for a specific user
    ///
    /// List Apple API credentials for a specific Bitrise user
    ///
    /// - Remark: HTTP `GET /users/{user-slug}/apple-api-credentials`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/apple-api-credentials/get(appleApiCredentialList)`.
    func appleApiCredentialList(_ input: Operations.appleApiCredentialList.Input) async throws -> Operations.appleApiCredentialList.Output
    /// Get list of the apps for a user
    ///
    /// List all the available apps for the given user.  It needs the user slug that you can get from the [GET /me](https://api-docs.bitrise.io/#/user/user-profile) endpoint.
    ///
    /// - Remark: HTTP `GET /users/{user-slug}/apps`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/apps/get(appListByUser)`.
    func appListByUser(_ input: Operations.appListByUser.Input) async throws -> Operations.appListByUser.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Get list of available Bitrise addons
    ///
    /// List all the available Bitrise addons
    ///
    /// - Remark: HTTP `GET /addons`.
    /// - Remark: Generated from `#/paths//addons/get(addonsList)`.
    public func addonsList(headers: Operations.addonsList.Input.Headers = .init()) async throws -> Operations.addonsList.Output {
        try await addonsList(Operations.addonsList.Input(headers: headers))
    }
    /// Get a specific Bitrise addon
    ///
    /// Show details of a specific Bitrise addon
    ///
    /// - Remark: HTTP `GET /addons/{addon-id}`.
    /// - Remark: Generated from `#/paths//addons/{addon-id}/get(addonsShow)`.
    public func addonsShow(
        path: Operations.addonsShow.Input.Path,
        headers: Operations.addonsShow.Input.Headers = .init()
    ) async throws -> Operations.addonsShow.Output {
        try await addonsShow(Operations.addonsShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get list of the apps
    ///
    /// List all the apps available for the authenticated account, including those that are owned by other users or Organizations.
    ///
    /// - Remark: HTTP `GET /apps`.
    /// - Remark: Generated from `#/paths//apps/get(appList)`.
    public func appList(
        query: Operations.appList.Input.Query = .init(),
        headers: Operations.appList.Input.Headers = .init()
    ) async throws -> Operations.appList.Output {
        try await appList(Operations.appList.Input(
            query: query,
            headers: headers
        ))
    }
    /// Add a new app
    ///
    /// Add a new app to Bitrise. This is the first step of the app registration process. To successfully set it up, you need to provide the required app parameters: the repository URL and the isPublic field. Read more about the app creation process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app).
    ///
    /// - Remark: HTTP `POST /apps/register`.
    /// - Remark: Generated from `#/paths//apps/register/post(appCreate)`.
    public func appCreate(
        headers: Operations.appCreate.Input.Headers = .init(),
        body: Operations.appCreate.Input.Body
    ) async throws -> Operations.appCreate.Output {
        try await appCreate(Operations.appCreate.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a specific app
    ///
    /// Get the details of a specific app by providing the app slug. You can get the app slug by calling the [/apps](https://api-docs.bitrise.io/#/application/app-list) endpoint or by opening the app on bitrise.io and copying the slug from the URL.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/get(appShow)`.
    public func appShow(
        path: Operations.appShow.Input.Path,
        headers: Operations.appShow.Input.Headers = .init()
    ) async throws -> Operations.appShow.Output {
        try await appShow(Operations.appShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Updates an app
    ///
    /// Updates an app by slug. Only updates the fields specified in the body.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/patch(appUpdate)`.
    public func appUpdate(
        path: Operations.appUpdate.Input.Path,
        headers: Operations.appUpdate.Input.Headers = .init(),
        body: Operations.appUpdate.Input.Body
    ) async throws -> Operations.appUpdate.Output {
        try await appUpdate(Operations.appUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Deletes an app
    ///
    /// Deletes an app by slug. Use with care, make sure you really want to delete the app. This action cannot be undone.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/delete(appDelete)`.
    public func appDelete(
        path: Operations.appDelete.Input.Path,
        headers: Operations.appDelete.Input.Headers = .init()
    ) async throws -> Operations.appDelete.Output {
        try await appDelete(Operations.appDelete.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get list of the addons for apps
    ///
    /// List all the provisioned addons for the authorized apps
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/addons`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/addons/get(addonListByApp)`.
    public func addonListByApp(
        path: Operations.addonListByApp.Input.Path,
        headers: Operations.addonListByApp.Input.Headers = .init()
    ) async throws -> Operations.addonListByApp.Output {
        try await addonListByApp(Operations.addonListByApp.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get a list of the android keystore files
    ///
    /// List all the android keystore files that have been uploaded to a specific app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/android-keystore-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/get(androidKeystoreFileList)`.
    public func androidKeystoreFileList(
        path: Operations.androidKeystoreFileList.Input.Path,
        query: Operations.androidKeystoreFileList.Input.Query = .init(),
        headers: Operations.androidKeystoreFileList.Input.Headers = .init()
    ) async throws -> Operations.androidKeystoreFileList.Output {
        try await androidKeystoreFileList(Operations.androidKeystoreFileList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Create an Android keystore file
    ///
    /// Add a new Android keystore file to an app. `keystore_file_name` is required if there is already an existing keystore file for the app. It will determine the environment variable key to be used to refer to the keystore file in builds. E.g. `BITRISE_ANDROID_KEYSTORE_<keystore_file_name>_URL`. The `keystore_file_name` can only contain letters, numbers, and underscores.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/android-keystore-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/post(androidKeystoreFileCreate)`.
    public func androidKeystoreFileCreate(
        path: Operations.androidKeystoreFileCreate.Input.Path,
        headers: Operations.androidKeystoreFileCreate.Input.Headers = .init(),
        body: Operations.androidKeystoreFileCreate.Input.Body
    ) async throws -> Operations.androidKeystoreFileCreate.Output {
        try await androidKeystoreFileCreate(Operations.androidKeystoreFileCreate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete an android keystore file
    ///
    /// Delete an app's android keystore file. You can fetch an app's android keystore file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/android-keystore-files](https://api-docs.bitrise.io/#/android-keystore-file/android-keystore-file-list) endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-android-keystore-files.html) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/delete(androidKeystoreFileDelete)`.
    public func androidKeystoreFileDelete(
        path: Operations.androidKeystoreFileDelete.Input.Path,
        headers: Operations.androidKeystoreFileDelete.Input.Headers = .init()
    ) async throws -> Operations.androidKeystoreFileDelete.Output {
        try await androidKeystoreFileDelete(Operations.androidKeystoreFileDelete.Input(
            path: path,
            headers: headers
        ))
    }
    /// Confirm an android keystore file upload
    ///
    /// This is the last step of uploading an android keystore file to Bitrise. Confirm the android keystore file upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/post(androidKeystoreFileConfirm)`.
    public func androidKeystoreFileConfirm(
        path: Operations.androidKeystoreFileConfirm.Input.Path,
        headers: Operations.androidKeystoreFileConfirm.Input.Headers = .init()
    ) async throws -> Operations.androidKeystoreFileConfirm.Output {
        try await androidKeystoreFileConfirm(Operations.androidKeystoreFileConfirm.Input(
            path: path,
            headers: headers
        ))
    }
    /// List 1000 archived builds of an app
    ///
    /// List the first 1000 archived builds of a specified Bitrise app. Set parameters to filter builds:
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/archived-builds`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/archived-builds/get(archivedBuildsList)`.
    public func archivedBuildsList(
        path: Operations.archivedBuildsList.Input.Path,
        query: Operations.archivedBuildsList.Input.Query,
        headers: Operations.archivedBuildsList.Input.Headers = .init()
    ) async throws -> Operations.archivedBuildsList.Output {
        try await archivedBuildsList(Operations.archivedBuildsList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get bitrise.yml of a specific app
    ///
    /// Get the full `bitrise.yml` configuration of an application, by providing the app slug. It returns the current `bitrise.yml` that is stored on bitrise.io in full, including the trigger map, the different workflows and the Steps.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/bitrise.yml`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/get(appConfigDatastoreShow)`.
    public func appConfigDatastoreShow(
        path: Operations.appConfigDatastoreShow.Input.Path,
        headers: Operations.appConfigDatastoreShow.Input.Headers = .init()
    ) async throws -> Operations.appConfigDatastoreShow.Output {
        try await appConfigDatastoreShow(Operations.appConfigDatastoreShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Upload a new bitrise.yml for your application.
    ///
    /// Upload a new bitrise.yml for your application.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/bitrise.yml`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/post(appConfigCreate)`.
    public func appConfigCreate(
        path: Operations.appConfigCreate.Input.Path,
        headers: Operations.appConfigCreate.Input.Headers = .init(),
        body: Operations.appConfigCreate.Input.Body
    ) async throws -> Operations.appConfigCreate.Output {
        try await appConfigCreate(Operations.appConfigCreate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Getting the location of the application's bitrise.yaml
    ///
    /// Getting the location of the application's bitrise.yaml. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/bitrise.yml/config`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/get(appSetupBitriseYmlConfigGet)`.
    public func appSetupBitriseYmlConfigGet(
        path: Operations.appSetupBitriseYmlConfigGet.Input.Path,
        headers: Operations.appSetupBitriseYmlConfigGet.Input.Headers = .init()
    ) async throws -> Operations.appSetupBitriseYmlConfigGet.Output {
        try await appSetupBitriseYmlConfigGet(Operations.appSetupBitriseYmlConfigGet.Input(
            path: path,
            headers: headers
        ))
    }
    /// Changing the location of the application's bitrise.yaml
    ///
    /// Changing the location of the application's bitrise.yaml. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/bitrise.yml/config`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/put(appSetupBitriseYmlConfigUpdate)`.
    public func appSetupBitriseYmlConfigUpdate(
        path: Operations.appSetupBitriseYmlConfigUpdate.Input.Path,
        headers: Operations.appSetupBitriseYmlConfigUpdate.Input.Headers = .init(),
        body: Operations.appSetupBitriseYmlConfigUpdate.Input.Body
    ) async throws -> Operations.appSetupBitriseYmlConfigUpdate.Output {
        try await appSetupBitriseYmlConfigUpdate(Operations.appSetupBitriseYmlConfigUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List the branches with existing builds of an app's repository
    ///
    /// Lists only those branches of a specified Bitrise app that have existing builds.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/branches`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/branches/get(branchList)`.
    public func branchList(
        path: Operations.branchList.Input.Path,
        headers: Operations.branchList.Input.Headers = .init()
    ) async throws -> Operations.branchList.Output {
        try await branchList(Operations.branchList.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get a list of the build certificates
    ///
    /// List all the build certificates that have been uploaded to a specific app. Read more in our [Listing the uploaded iOS code signing files of an app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-certificates`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/get(buildCertificateList)`.
    public func buildCertificateList(
        path: Operations.buildCertificateList.Input.Path,
        query: Operations.buildCertificateList.Input.Query = .init(),
        headers: Operations.buildCertificateList.Input.Headers = .init()
    ) async throws -> Operations.buildCertificateList.Output {
        try await buildCertificateList(Operations.buildCertificateList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Create a build certificate
    ///
    /// Create a temporary pre-signed upload URL for the build certificate and upload the file to AWS with a simple `curl` request. To complete the uploading process and view your files on the Code Signing tab of your app, continue with the [POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded](https://api-docs.bitrise.io/#/build-certificate/build-certificate-confirm) endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/build-certificates`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/post(buildCertificateCreate)`.
    public func buildCertificateCreate(
        path: Operations.buildCertificateCreate.Input.Path,
        headers: Operations.buildCertificateCreate.Input.Headers = .init(),
        body: Operations.buildCertificateCreate.Input.Body
    ) async throws -> Operations.buildCertificateCreate.Output {
        try await buildCertificateCreate(Operations.buildCertificateCreate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a specific build certificate
    ///
    /// Retrieve data of a specific build certificate. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint to list all available build certificates of an app. Read more in our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-certificates/{build-certificate-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/get(buildCertificateShow)`.
    public func buildCertificateShow(
        path: Operations.buildCertificateShow.Input.Path,
        headers: Operations.buildCertificateShow.Input.Headers = .init()
    ) async throws -> Operations.buildCertificateShow.Output {
        try await buildCertificateShow(Operations.buildCertificateShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a build certificate
    ///
    /// Update an uploaded build certificate's attributes. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/build-certificates/{build-certificate-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/patch(buildCertificateUpdate)`.
    public func buildCertificateUpdate(
        path: Operations.buildCertificateUpdate.Input.Path,
        headers: Operations.buildCertificateUpdate.Input.Headers = .init(),
        body: Operations.buildCertificateUpdate.Input.Body
    ) async throws -> Operations.buildCertificateUpdate.Output {
        try await buildCertificateUpdate(Operations.buildCertificateUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a build certificate
    ///
    /// Delete an app's build certificate. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint to list all available build certificates of an app. Read more in our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/delete(buildCertificateDelete)`.
    public func buildCertificateDelete(
        path: Operations.buildCertificateDelete.Input.Path,
        headers: Operations.buildCertificateDelete.Input.Headers = .init()
    ) async throws -> Operations.buildCertificateDelete.Output {
        try await buildCertificateDelete(Operations.buildCertificateDelete.Input(
            path: path,
            headers: headers
        ))
    }
    /// Confirm a build certificate upload
    ///
    /// This is the last step of uploading a build certificate to Bitrise. Confirm the build certificate upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the iOS code signing file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/post(buildCertificateConfirm)`.
    public func buildCertificateConfirm(
        path: Operations.buildCertificateConfirm.Input.Path,
        headers: Operations.buildCertificateConfirm.Input.Headers = .init()
    ) async throws -> Operations.buildCertificateConfirm.Output {
        try await buildCertificateConfirm(Operations.buildCertificateConfirm.Input(
            path: path,
            headers: headers
        ))
    }
    /// List the open build requests for an app
    ///
    /// List the existing open build requests of a specified Bitrise app
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-requests`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/get(buildRequestList)`.
    public func buildRequestList(
        path: Operations.buildRequestList.Input.Path,
        headers: Operations.buildRequestList.Input.Headers = .init()
    ) async throws -> Operations.buildRequestList.Output {
        try await buildRequestList(Operations.buildRequestList.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a build request
    ///
    /// Update a specific build request of a specific app
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/build-requests/{build-request-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/{build-request-slug}/patch(buildRequestUpdate)`.
    public func buildRequestUpdate(
        path: Operations.buildRequestUpdate.Input.Path,
        headers: Operations.buildRequestUpdate.Input.Headers = .init(),
        body: Operations.buildRequestUpdate.Input.Body
    ) async throws -> Operations.buildRequestUpdate.Output {
        try await buildRequestUpdate(Operations.buildRequestUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List the workflows of an app
    ///
    /// List the workflows that were triggered at any time for a given Bitrise app. Note that it might list workflows that are currently not defined in the app's `bitrise.yml` configuration - and conversely, workflows that were never triggered will not be listed even if they are defined in the `bitrise.yml` file.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-workflows`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-workflows/get(buildWorkflowList)`.
    public func buildWorkflowList(
        path: Operations.buildWorkflowList.Input.Path,
        headers: Operations.buildWorkflowList.Input.Headers = .init()
    ) async throws -> Operations.buildWorkflowList.Output {
        try await buildWorkflowList(Operations.buildWorkflowList.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all builds of an app
    ///
    /// List all the builds of a specified Bitrise app. Set parameters to filter builds: for example, you can search for builds run with a given workflow or all builds that were triggered by Pull Requests. It returns all the relevant data of the build.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/get(buildList)`.
    public func buildList(
        path: Operations.buildList.Input.Path,
        query: Operations.buildList.Input.Query = .init(),
        headers: Operations.buildList.Input.Headers = .init()
    ) async throws -> Operations.buildList.Output {
        try await buildList(Operations.buildList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Trigger a new build/pipeline
    ///
    /// Trigger a new build/pipeline. Specify an app slug and at least one parameter out of three: a git tag or git commit hash, a branch, or a workflow/pipeline ID. You can also set specific parameters for Pull Request builds/pipelines and define additional environment variables for your build/pipeline. [Check out our detailed guide](https://devcenter.bitrise.io/api/build-trigger/).
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/builds`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/post(buildTrigger)`.
    public func buildTrigger(
        path: Operations.buildTrigger.Input.Path,
        headers: Operations.buildTrigger.Input.Headers = .init(),
        body: Operations.buildTrigger.Input.Body
    ) async throws -> Operations.buildTrigger.Output {
        try await buildTrigger(Operations.buildTrigger.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a build of a given app
    ///
    /// Get the specified build of a given Bitrise app. You need to provide both an app slug and a build slug. You can get the build slug either by calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list) endpoint or by clicking on the build on bitrise.io and copying the slug from the URL. The endpoint returns all the relevant data of the build.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/get(buildShow)`.
    public func buildShow(
        path: Operations.buildShow.Input.Path,
        headers: Operations.buildShow.Input.Headers = .init()
    ) async throws -> Operations.buildShow.Output {
        try await buildShow(Operations.buildShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Abort a specific build
    ///
    /// Abort a specific build. Set an abort reason with the `abort_reason` parameter. Use the `abort_with_success` parameter to abort a build but still count it as a successful one.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/builds/{build-slug}/abort`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/abort/post(buildAbort)`.
    public func buildAbort(
        path: Operations.buildAbort.Input.Path,
        headers: Operations.buildAbort.Input.Headers = .init(),
        body: Operations.buildAbort.Input.Body
    ) async throws -> Operations.buildAbort.Output {
        try await buildAbort(Operations.buildAbort.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a list of all build artifacts
    ///
    /// List all build artifacts that have been generated for an app's build. This endpoint can retrieve artifacts from the archive as well. You can use the created build artifact slugs from the response output to retrieve data of a specific build artifact with the [GET/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-show) endpoint or update a build artifact with the [PATCH/apps](https://api-docs.bitrise.io/#/build-artifact/artifact-update) endpoint.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/artifacts`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/get(artifactList)`.
    public func artifactList(
        path: Operations.artifactList.Input.Path,
        query: Operations.artifactList.Input.Query = .init(),
        headers: Operations.artifactList.Input.Headers = .init()
    ) async throws -> Operations.artifactList.Output {
        try await artifactList(Operations.artifactList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get a specific build artifact
    ///
    /// Retrieve data of a specific build artifact. The endpoint can retrieve archived artifacts as well. The response output contains a time-limited download url (expires in 10 minutes) and a public install-page URL. You can view the build artifact with both URLs, but the public install-page url will not work unless you [enable it](https://devcenter.bitrise.io/tutorials/deploy/bitrise-app-deployment/#enabling-public-page-for-the-app).
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/get(artifactShow)`.
    public func artifactShow(
        path: Operations.artifactShow.Input.Path,
        query: Operations.artifactShow.Input.Query = .init(),
        headers: Operations.artifactShow.Input.Headers = .init()
    ) async throws -> Operations.artifactShow.Output {
        try await artifactShow(Operations.artifactShow.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Update a build artifact
    ///
    /// Update the `is_public_page_enabled` attribute of your app's build. The required parameters are app slug, build slug and artifact slug. You can fetch the build artifact slug if you first list all build artifacts of an app with the [GET /apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list) endpoint.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/patch(artifactUpdate)`.
    public func artifactUpdate(
        path: Operations.artifactUpdate.Input.Path,
        headers: Operations.artifactUpdate.Input.Headers = .init(),
        body: Operations.artifactUpdate.Input.Body
    ) async throws -> Operations.artifactUpdate.Output {
        try await artifactUpdate(Operations.artifactUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a build artifact
    ///
    /// Delete a build artifact of an app's build. The required parameters are app slug, build slug and artifact slug. You can fetch the build artifact slug if you first list all build artifacts of an app with the [/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list) endpoint.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/delete(artifactDelete)`.
    public func artifactDelete(
        path: Operations.artifactDelete.Input.Path,
        headers: Operations.artifactDelete.Input.Headers = .init()
    ) async throws -> Operations.artifactDelete.Output {
        try await artifactDelete(Operations.artifactDelete.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get the bitrise.yml of a build
    ///
    /// Get the bitrise.yml file of one of the builds of a given app. This will return the `bitrise.yml` configuration with which the build ran. You can compare it to [the current bitrise.yml configuration](https://api-docs.bitrise.io/#/application/app-config-datastore-show) of the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/bitrise.yml`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/bitrise.yml/get(buildBitriseYmlShow)`.
    public func buildBitriseYmlShow(
        path: Operations.buildBitriseYmlShow.Input.Path,
        headers: Operations.buildBitriseYmlShow.Input.Headers = .init()
    ) async throws -> Operations.buildBitriseYmlShow.Output {
        try await buildBitriseYmlShow(Operations.buildBitriseYmlShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get the build log of a build
    ///
    /// Get the build log of a specified build of a Bitrise app. You can get the build slug either by calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list) endpoint or by clicking on the build on bitrise.io and copying the slug from the URL. Preview of the log is returned in `log_chunks` field in JSON format. You can download the full raw log in txt by using the signed url returned in `expiring_raw_log_url`. Be aware that this url is expiring in 10 minutes!
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/log`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/log/get(buildLog)`.
    public func buildLog(
        path: Operations.buildLog.Input.Path,
        headers: Operations.buildLog.Input.Headers = .init()
    ) async throws -> Operations.buildLog.Output {
        try await buildLog(Operations.buildLog.Input(
            path: path,
            headers: headers
        ))
    }
    /// List the key-value cache items belonging to an app
    ///
    /// List all the available cache items that the builds of the app created via the save-cache step.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/cache-items`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/get(cacheList)`.
    public func cacheList(
        path: Operations.cacheList.Input.Path,
        query: Operations.cacheList.Input.Query = .init(),
        headers: Operations.cacheList.Input.Headers = .init()
    ) async throws -> Operations.cacheList.Output {
        try await cacheList(Operations.cacheList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Deletes all key-value cache items belonging to an app
    ///
    /// Deletes all key-value cache items created by the builds of an app. Deleted cache items are no longer accessible and cannot be restored.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/cache-items`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/delete(cacheItemDeleteAll)`.
    public func cacheItemDeleteAll(
        path: Operations.cacheItemDeleteAll.Input.Path,
        headers: Operations.cacheItemDeleteAll.Input.Headers = .init()
    ) async throws -> Operations.cacheItemDeleteAll.Output {
        try await cacheItemDeleteAll(Operations.cacheItemDeleteAll.Input(
            path: path,
            headers: headers
        ))
    }
    /// Deletes a key-value cache item
    ///
    /// Deletes a key-value cache item. Deleted cache items are no longer accessible and cannot be restored.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/cache-items/{cache-item-id}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/delete(cacheItemDelete)`.
    public func cacheItemDelete(
        path: Operations.cacheItemDelete.Input.Path,
        headers: Operations.cacheItemDelete.Input.Headers = .init()
    ) async throws -> Operations.cacheItemDelete.Output {
        try await cacheItemDelete(Operations.cacheItemDelete.Input(
            path: path,
            headers: headers
        ))
    }
    /// Gets the download URL of a key-value cache item
    ///
    /// Gets a download URL of a cache item.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/cache-items/{cache-item-id}/download`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/download/get(cacheItemDownload)`.
    public func cacheItemDownload(
        path: Operations.cacheItemDownload.Input.Path,
        headers: Operations.cacheItemDownload.Input.Headers = .init()
    ) async throws -> Operations.cacheItemDownload.Output {
        try await cacheItemDownload(Operations.cacheItemDownload.Input(
            path: path,
            headers: headers
        ))
    }
    /// Save the application at the end of the app registration process
    ///
    /// Save the application after registering it on Bitrise and registering an SSH key (and, optionally, adding a webhook). With this endpoint you can define the initial configuration, define application-level environment variables, determine the project type, and set an Organization to be the owner of the app. Read more about the app registration process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app).
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/finish`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/finish/post(appFinish)`.
    public func appFinish(
        path: Operations.appFinish.Input.Path,
        headers: Operations.appFinish.Input.Headers = .init(),
        body: Operations.appFinish.Input.Body
    ) async throws -> Operations.appFinish.Output {
        try await appFinish(Operations.appFinish.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a list of the generic project files
    ///
    /// List all the generic project files that have been uploaded to a specific app. Read more in our [Listing the uploaded files of an app](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#listing-the-uploaded-files-of-an-app) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/generic-project-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/get(genericProjectFileList)`.
    public func genericProjectFileList(
        path: Operations.genericProjectFileList.Input.Path,
        query: Operations.genericProjectFileList.Input.Query = .init(),
        headers: Operations.genericProjectFileList.Input.Headers = .init()
    ) async throws -> Operations.genericProjectFileList.Output {
        try await genericProjectFileList(Operations.genericProjectFileList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Create a generic project file
    ///
    /// Create a temporary pre-signed upload URL (expires in 10 minutes) for the generic project file and upload it to AWS with a simple `curl` request. To complete the uploading process and view your files on the Code Signing tab of your app, continue with the [POST /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-confirm) endpoint. Read more in our [Creating and uploading files to Generic File Storage](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#creating-and-uploading-files-to-generic-file-storage) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/generic-project-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/post(genericProjectFilesCreate)`.
    public func genericProjectFilesCreate(
        path: Operations.genericProjectFilesCreate.Input.Path,
        headers: Operations.genericProjectFilesCreate.Input.Headers = .init(),
        body: Operations.genericProjectFilesCreate.Input.Body
    ) async throws -> Operations.genericProjectFilesCreate.Output {
        try await genericProjectFilesCreate(Operations.genericProjectFilesCreate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a specific generic project file
    ///
    /// Retrieve data of a specific generic project file to check its attributes and optionally modify them with the [PATCH /apps/](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-update) endpoint. Read more in our [Retrieving a specific file's data](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#retrieving-a-specific-files-data) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/get(genericProjectFileShow)`.
    public func genericProjectFileShow(
        path: Operations.genericProjectFileShow.Input.Path,
        headers: Operations.genericProjectFileShow.Input.Headers = .init()
    ) async throws -> Operations.genericProjectFileShow.Output {
        try await genericProjectFileShow(Operations.genericProjectFileShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a generic project file
    ///
    /// Update a generic project file's attributes. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Updating an uploaded file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#updating-an-uploaded-file) guide.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/generic-project-files/{generic-project-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/patch(genericProjectFileUpdate)`.
    public func genericProjectFileUpdate(
        path: Operations.genericProjectFileUpdate.Input.Path,
        headers: Operations.genericProjectFileUpdate.Input.Headers = .init(),
        body: Operations.genericProjectFileUpdate.Input.Body
    ) async throws -> Operations.genericProjectFileUpdate.Output {
        try await genericProjectFileUpdate(Operations.genericProjectFileUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a generic project file
    ///
    /// Delete an app's generic project file. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#deleting-a-file) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/generic-project-files/{generic-project-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/delete(genericProjectFileDelete)`.
    public func genericProjectFileDelete(
        path: Operations.genericProjectFileDelete.Input.Path,
        headers: Operations.genericProjectFileDelete.Input.Headers = .init()
    ) async throws -> Operations.genericProjectFileDelete.Output {
        try await genericProjectFileDelete(Operations.genericProjectFileDelete.Input(
            path: path,
            headers: headers
        ))
    }
    /// Confirm a generic project file upload
    ///
    /// This is the last step of uploading a generic project file to Bitrise. Confirm the generic project file upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/post(genericProjectFileConfirm)`.
    public func genericProjectFileConfirm(
        path: Operations.genericProjectFileConfirm.Input.Path,
        headers: Operations.genericProjectFileConfirm.Input.Headers = .init()
    ) async throws -> Operations.genericProjectFileConfirm.Output {
        try await genericProjectFileConfirm(Operations.genericProjectFileConfirm.Input(
            path: path,
            headers: headers
        ))
    }
    /// List the outgoing webhooks of an app
    ///
    /// List all the outgoing webhooks registered for a specified Bitrise app. This returns all the relevant data of the webhook, including the slug of the webhook and its URL.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/outgoing-webhooks`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/get(outgoingWebhookList)`.
    public func outgoingWebhookList(
        path: Operations.outgoingWebhookList.Input.Path,
        query: Operations.outgoingWebhookList.Input.Query = .init(),
        headers: Operations.outgoingWebhookList.Input.Headers = .init()
    ) async throws -> Operations.outgoingWebhookList.Output {
        try await outgoingWebhookList(Operations.outgoingWebhookList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Create an outgoing webhook for an app
    ///
    /// Create an outgoing webhook for a specified Bitrise app: this can be used to send build events to a specified URL with custom headers. Currently, only build events can trigger outgoing webhooks.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/outgoing-webhooks`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/post(outgoingWebhookCreate)`.
    public func outgoingWebhookCreate(
        path: Operations.outgoingWebhookCreate.Input.Path,
        headers: Operations.outgoingWebhookCreate.Input.Headers = .init(),
        body: Operations.outgoingWebhookCreate.Input.Body
    ) async throws -> Operations.outgoingWebhookCreate.Output {
        try await outgoingWebhookCreate(Operations.outgoingWebhookCreate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Update an outgoing webhook of an app
    ///
    /// Update an existing outgoing webhook (URL, events, secrets and headers) for a specified Bitrise app. Even if you do not want to change one of the parameters, you still have to provide that parameter as well: simply use its existing value.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/put(outgoingWebhookUpdate)`.
    public func outgoingWebhookUpdate(
        path: Operations.outgoingWebhookUpdate.Input.Path,
        headers: Operations.outgoingWebhookUpdate.Input.Headers = .init(),
        body: Operations.outgoingWebhookUpdate.Input.Body
    ) async throws -> Operations.outgoingWebhookUpdate.Output {
        try await outgoingWebhookUpdate(Operations.outgoingWebhookUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete an outgoing webhook of an app
    ///
    /// Delete an existing outgoing webhook for a specified Bitrise app.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delete(outgoingWebhookDelete)`.
    public func outgoingWebhookDelete(
        path: Operations.outgoingWebhookDelete.Input.Path,
        headers: Operations.outgoingWebhookDelete.Input.Headers = .init()
    ) async throws -> Operations.outgoingWebhookDelete.Output {
        try await outgoingWebhookDelete(Operations.outgoingWebhookDelete.Input(
            path: path,
            headers: headers
        ))
    }
    /// List the webhook delivery items of an app
    ///
    /// List all the delivery items of an outgoing webhook of a Bitrise application
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/get(webhookDeliveryItemList)`.
    public func webhookDeliveryItemList(
        path: Operations.webhookDeliveryItemList.Input.Path,
        query: Operations.webhookDeliveryItemList.Input.Query = .init(),
        headers: Operations.webhookDeliveryItemList.Input.Headers = .init()
    ) async throws -> Operations.webhookDeliveryItemList.Output {
        try await webhookDeliveryItemList(Operations.webhookDeliveryItemList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get a specific delivery item of a webhook
    ///
    /// Get the specified delivery item of an outgoing webhook of a Bitrise application
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/get(webhookDeliveryItemShow)`.
    public func webhookDeliveryItemShow(
        path: Operations.webhookDeliveryItemShow.Input.Path,
        headers: Operations.webhookDeliveryItemShow.Input.Headers = .init()
    ) async throws -> Operations.webhookDeliveryItemShow.Output {
        try await webhookDeliveryItemShow(Operations.webhookDeliveryItemShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Re-deliver the webhook delivery items of an app
    ///
    /// Re-deliver the delivery item of a specified webhook of a Bitrise application
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/post(webhookDeliveryItemRedeliver)`.
    public func webhookDeliveryItemRedeliver(
        path: Operations.webhookDeliveryItemRedeliver.Input.Path,
        headers: Operations.webhookDeliveryItemRedeliver.Input.Headers = .init()
    ) async throws -> Operations.webhookDeliveryItemRedeliver.Output {
        try await webhookDeliveryItemRedeliver(Operations.webhookDeliveryItemRedeliver.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all pipelines and standalone builds of an app
    ///
    /// List all the pipelines and standalone builds of a specified Bitrise app. Set parameters to filter pipelines: for example, you can search for pipelines/standalone builds run with a given workflow name or all pipelines/standalone builds that were triggered by Pull Requests. It returns all the relevant data of the pipelines/standalone builds.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/pipelines`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/get(pipelineList)`.
    public func pipelineList(
        path: Operations.pipelineList.Input.Path,
        query: Operations.pipelineList.Input.Query = .init(),
        headers: Operations.pipelineList.Input.Headers = .init()
    ) async throws -> Operations.pipelineList.Output {
        try await pipelineList(Operations.pipelineList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get a pipeline of a given app
    ///
    /// Get the specified pipeline of a given Bitrise app. You need to provide both an app slug and a pipeline id. You can get the pipeline id either by calling the [/pipelines](https://api-docs.bitrise.io/#/pipelines/pipeline-list) endpoint or by clicking on the pipeline on bitrise.io and copying the id from the URL. The endpoint returns all the relevant data of the pipeline.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/pipelines/{pipeline-id}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/get(pipelineShow)`.
    public func pipelineShow(
        path: Operations.pipelineShow.Input.Path,
        headers: Operations.pipelineShow.Input.Headers = .init()
    ) async throws -> Operations.pipelineShow.Output {
        try await pipelineShow(Operations.pipelineShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Aborts a pipeline
    ///
    /// Aborts a pipeline. You need to provide the app slug and the id of the pipeline. You can add an abort reason, choose to skip notifications and make the abort with success state.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/pipelines/{pipeline-id}/abort`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/abort/post(pipelineAbort)`.
    public func pipelineAbort(
        path: Operations.pipelineAbort.Input.Path,
        headers: Operations.pipelineAbort.Input.Headers = .init(),
        body: Operations.pipelineAbort.Input.Body
    ) async throws -> Operations.pipelineAbort.Output {
        try await pipelineAbort(Operations.pipelineAbort.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Rebuilds a pipeline
    ///
    /// Rebuilds a pipeline. You can rebuild the whole pipeline or only the unsuccessful and subsequent workflows by setting the partial flag to true.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/pipelines/{pipeline-id}/rebuild`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/rebuild/post(pipelineRebuild)`.
    public func pipelineRebuild(
        path: Operations.pipelineRebuild.Input.Path,
        headers: Operations.pipelineRebuild.Input.Headers = .init(),
        body: Operations.pipelineRebuild.Input.Body
    ) async throws -> Operations.pipelineRebuild.Output {
        try await pipelineRebuild(Operations.pipelineRebuild.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a list of the provisioning profiles
    ///
    /// List all the provisioning profiles that have been uploaded to a specific app. Read more in our [Listing the uploaded iOS code signing files of an app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/provisioning-profiles`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/get(provisioningProfileList)`.
    public func provisioningProfileList(
        path: Operations.provisioningProfileList.Input.Path,
        query: Operations.provisioningProfileList.Input.Query = .init(),
        headers: Operations.provisioningProfileList.Input.Headers = .init()
    ) async throws -> Operations.provisioningProfileList.Output {
        try await provisioningProfileList(Operations.provisioningProfileList.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Create a provisioning profile
    ///
    /// Create a temporary pre-signed upload URL (expires in 10 minutes) for the provisioning profile and upload it to AWS with a simple `curl` request. To complete the upload process, continue with the [POST /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-confirm) endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/provisioning-profiles`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/post(provisioningProfileCreate)`.
    public func provisioningProfileCreate(
        path: Operations.provisioningProfileCreate.Input.Path,
        headers: Operations.provisioningProfileCreate.Input.Headers = .init(),
        body: Operations.provisioningProfileCreate.Input.Body
    ) async throws -> Operations.provisioningProfileCreate.Output {
        try await provisioningProfileCreate(Operations.provisioningProfileCreate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a specific provisioning profile
    ///
    /// Retrieve data of a specific provisioning profile. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/get(provisioningProfileShow)`.
    public func provisioningProfileShow(
        path: Operations.provisioningProfileShow.Input.Path,
        headers: Operations.provisioningProfileShow.Input.Headers = .init()
    ) async throws -> Operations.provisioningProfileShow.Output {
        try await provisioningProfileShow(Operations.provisioningProfileShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a provisioning profile
    ///
    /// Update an uploaded provisioning profile's attributes. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/patch(provisioningProfileUpdate)`.
    public func provisioningProfileUpdate(
        path: Operations.provisioningProfileUpdate.Input.Path,
        headers: Operations.provisioningProfileUpdate.Input.Headers = .init(),
        body: Operations.provisioningProfileUpdate.Input.Body
    ) async throws -> Operations.provisioningProfileUpdate.Output {
        try await provisioningProfileUpdate(Operations.provisioningProfileUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a provisioning profile
    ///
    /// Delete an app's provisioning profile. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/delete(provisioningProfileDelete)`.
    public func provisioningProfileDelete(
        path: Operations.provisioningProfileDelete.Input.Path,
        headers: Operations.provisioningProfileDelete.Input.Headers = .init()
    ) async throws -> Operations.provisioningProfileDelete.Output {
        try await provisioningProfileDelete(Operations.provisioningProfileDelete.Input(
            path: path,
            headers: headers
        ))
    }
    /// Confirm a provisioning profile upload
    ///
    /// This is the last step of the upload process. Confirm the provisioning profile upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the iOS code signing file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/post(provisioningProfileConfirm)`.
    public func provisioningProfileConfirm(
        path: Operations.provisioningProfileConfirm.Input.Path,
        headers: Operations.provisioningProfileConfirm.Input.Headers = .init()
    ) async throws -> Operations.provisioningProfileConfirm.Output {
        try await provisioningProfileConfirm(Operations.provisioningProfileConfirm.Input(
            path: path,
            headers: headers
        ))
    }
    /// Add an SSH-key to a specific app
    ///
    /// Add an SSH-key to a specific app. After creating an app, you need to register the SSH key so that Bitrise will be able to access and clone your repository during the build process. This requires the app slug of your newly created app.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/register-ssh-key`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/register-ssh-key/post(sshKeyCreate)`.
    public func sshKeyCreate(
        path: Operations.sshKeyCreate.Input.Path,
        headers: Operations.sshKeyCreate.Input.Headers = .init(),
        body: Operations.sshKeyCreate.Input.Body
    ) async throws -> Operations.sshKeyCreate.Output {
        try await sshKeyCreate(Operations.sshKeyCreate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Register an incoming webhook for a specific application
    ///
    /// [Register an incoming webhook](https://devcenter.bitrise.io/api/incoming-and-outgoing-webhooks/#incoming-webhooks) for a specific application. You can do this during the app registration process or at any other time in an app's life. When calling this endpoint, a webhook is registered at your git provider: this is necessary to automatically trigger builds on Bitrise.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/register-webhook`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/register-webhook/post(appWebhookCreate)`.
    public func appWebhookCreate(
        path: Operations.appWebhookCreate.Input.Path,
        headers: Operations.appWebhookCreate.Input.Headers = .init()
    ) async throws -> Operations.appWebhookCreate.Output {
        try await appWebhookCreate(Operations.appWebhookCreate.Input(
            path: path,
            headers: headers
        ))
    }
    /// Create a new Apple App Store release for the app.
    ///
    /// Create a new iOS release for the specified app. If the release candidate parameters (`release_branch` and `workflow`) are specified then the latest successful build is automatically picked up as release candidate and if `automatic_testflight_upload` is also turned on, then an upload to TestFlight is started immediately. You can use this endpoint to set up a fully automated release flow.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/releases/app-store`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/app-store/post(releaseCreateAppStore)`.
    public func releaseCreateAppStore(
        path: Operations.releaseCreateAppStore.Input.Path,
        headers: Operations.releaseCreateAppStore.Input.Headers = .init(),
        body: Operations.releaseCreateAppStore.Input.Body
    ) async throws -> Operations.releaseCreateAppStore.Output {
        try await releaseCreateAppStore(Operations.releaseCreateAppStore.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Create a new Google Play Store release for the app.
    ///
    /// Create a new android release for the specified app. If the release candidate parameters (`release_branch` and `workflow`) are specified then the latest successful build is automatically picked up as release candidate and if `automatic_play_console_upload` is also turned on, then an upload to Google Play Console is started immediately. You can use this endpoint to set up a fully automated release flow.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/releases/google-play`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/google-play/post(releaseCreateGooglePlay)`.
    public func releaseCreateGooglePlay(
        path: Operations.releaseCreateGooglePlay.Input.Path,
        headers: Operations.releaseCreateGooglePlay.Input.Headers = .init(),
        body: Operations.releaseCreateGooglePlay.Input.Body
    ) async throws -> Operations.releaseCreateGooglePlay.Output {
        try await releaseCreateGooglePlay(Operations.releaseCreateGooglePlay.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Lists group roles for an app
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/roles/{role-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/get(appRolesQuery)`.
    public func appRolesQuery(
        path: Operations.appRolesQuery.Input.Path,
        headers: Operations.appRolesQuery.Input.Headers = .init()
    ) async throws -> Operations.appRolesQuery.Output {
        try await appRolesQuery(Operations.appRolesQuery.Input(
            path: path,
            headers: headers
        ))
    }
    /// Replaces group roles for an app
    ///
    /// Replaces the groups for a given role on an app. Only the given groups will be present for a role on the app after this call.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/roles/{role-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/put(appRolesUpdate)`.
    public func appRolesUpdate(
        path: Operations.appRolesUpdate.Input.Path,
        headers: Operations.appRolesUpdate.Input.Headers = .init(),
        body: Operations.appRolesUpdate.Input.Body
    ) async throws -> Operations.appRolesUpdate.Output {
        try await appRolesUpdate(Operations.appRolesUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List the application secrets (with no values)
    ///
    /// List the application secrets (with no values). Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/secrets`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/get(secretList)`.
    public func secretList(
        path: Operations.secretList.Input.Path,
        headers: Operations.secretList.Input.Headers = .init()
    ) async throws -> Operations.secretList.Output {
        try await secretList(Operations.secretList.Input(
            path: path,
            headers: headers
        ))
    }
    /// Upsert an application secret
    ///
    /// Upsert an application secret. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/put(secretUpsert)`.
    public func secretUpsert(
        path: Operations.secretUpsert.Input.Path,
        headers: Operations.secretUpsert.Input.Headers = .init(),
        body: Operations.secretUpsert.Input.Body
    ) async throws -> Operations.secretUpsert.Output {
        try await secretUpsert(Operations.secretUpsert.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete an application secret
    ///
    /// Delete an application secret. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/delete(secretDelete)`.
    public func secretDelete(
        path: Operations.secretDelete.Input.Path,
        headers: Operations.secretDelete.Input.Headers = .init()
    ) async throws -> Operations.secretDelete.Output {
        try await secretDelete(Operations.secretDelete.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get the value of an (unprotected) application secrets
    ///
    /// Get the value of an (unprotected) application secrets. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/secrets/{secret-name}/value`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/value/get(secretValueGet)`.
    public func secretValueGet(
        path: Operations.secretValueGet.Input.Path,
        headers: Operations.secretValueGet.Input.Headers = .init()
    ) async throws -> Operations.secretValueGet.Output {
        try await secretValueGet(Operations.secretValueGet.Input(
            path: path,
            headers: headers
        ))
    }
    /// List the test devices for an app
    ///
    /// List registered test devices of all members of a specified Bitrise app
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/test-devices`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/test-devices/get(testDeviceList)`.
    public func testDeviceList(
        path: Operations.testDeviceList.Input.Path,
        headers: Operations.testDeviceList.Input.Headers = .init()
    ) async throws -> Operations.testDeviceList.Output {
        try await testDeviceList(Operations.testDeviceList.Input(
            path: path,
            headers: headers
        ))
    }
    /// Updates the app's notification settings
    ///
    /// Updates the app's email notification settings with parameters
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/update-email-notifications`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/update-email-notifications/patch(appNotifications)`.
    public func appNotifications(
        path: Operations.appNotifications.Input.Path,
        headers: Operations.appNotifications.Input.Headers = .init(),
        body: Operations.appNotifications.Input.Body
    ) async throws -> Operations.appNotifications.Output {
        try await appNotifications(Operations.appNotifications.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List all builds
    ///
    /// List all the Bitrise builds that can be accessed with the authenticated account. Filter builds based on their owner, using the owner slug, or the status of the build.
    ///
    /// - Remark: HTTP `GET /builds`.
    /// - Remark: Generated from `#/paths//builds/get(buildListAll)`.
    public func buildListAll(
        query: Operations.buildListAll.Input.Query = .init(),
        headers: Operations.buildListAll.Input.Headers = .init()
    ) async throws -> Operations.buildListAll.Output {
        try await buildListAll(Operations.buildListAll.Input(
            query: query,
            headers: headers
        ))
    }
    /// Add a member to a group
    ///
    /// Add a member to a group
    ///
    /// - Remark: HTTP `POST /groups/{group-slug}/add_member`.
    /// - Remark: Generated from `#/paths//groups/{group-slug}/add_member/post(groupMemberAdd)`.
    public func groupMemberAdd(
        path: Operations.groupMemberAdd.Input.Path,
        body: Operations.groupMemberAdd.Input.Body
    ) async throws -> Operations.groupMemberAdd.Output {
        try await groupMemberAdd(Operations.groupMemberAdd.Input(
            path: path,
            body: body
        ))
    }
    /// Get your profile info
    ///
    /// Shows the authenticated users profile info
    ///
    /// - Remark: HTTP `GET /me`.
    /// - Remark: Generated from `#/paths//me/get(userProfile)`.
    public func userProfile(headers: Operations.userProfile.Input.Headers = .init()) async throws -> Operations.userProfile.Output {
        try await userProfile(Operations.userProfile.Input(headers: headers))
    }
    /// Get list of Bitrise activity events
    ///
    /// List all the Bitrise activity events
    ///
    /// - Remark: HTTP `GET /me/activities`.
    /// - Remark: Generated from `#/paths//me/activities/get(activityList)`.
    public func activityList(
        query: Operations.activityList.Input.Query = .init(),
        headers: Operations.activityList.Input.Headers = .init()
    ) async throws -> Operations.activityList.Output {
        try await activityList(Operations.activityList.Input(
            query: query,
            headers: headers
        ))
    }
    /// The subscription plan of the user
    ///
    /// Get the subscription of the user: the current plan, any pending plans, and the duration of a trial period if applicable
    ///
    /// - Remark: HTTP `GET /me/plan`.
    /// - Remark: Generated from `#/paths//me/plan/get(userPlan)`.
    public func userPlan(headers: Operations.userPlan.Input.Headers = .init()) async throws -> Operations.userPlan.Output {
        try await userPlan(Operations.userPlan.Input(headers: headers))
    }
    /// List the organizations that the user is part of
    ///
    /// List all Bitrise organizations that the user is part of
    ///
    /// - Remark: HTTP `GET /organizations`.
    /// - Remark: Generated from `#/paths//organizations/get(orgList)`.
    public func orgList(headers: Operations.orgList.Input.Headers = .init()) async throws -> Operations.orgList.Output {
        try await orgList(Operations.orgList.Input(headers: headers))
    }
    /// Get a specified organization.
    ///
    /// Get a specified Bitrise organization that the user is part of.
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/get(orgShow)`.
    public func orgShow(
        path: Operations.orgShow.Input.Path,
        headers: Operations.orgShow.Input.Headers = .init()
    ) async throws -> Operations.orgShow.Output {
        try await orgShow(Operations.orgShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get list of the apps for an organization
    ///
    /// List all the available apps owned by a given organization. [Find the organization URL](https://devcenter.bitrise.io/team-management/organizations/org-url/) of the organisations you are part of; be aware that the endpoint will not return any apps if the authenticated account is not a member of the given organisation.
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/apps`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/get(appListByOrganization)`.
    public func appListByOrganization(
        path: Operations.appListByOrganization.Input.Path,
        query: Operations.appListByOrganization.Input.Query = .init(),
        headers: Operations.appListByOrganization.Input.Headers = .init()
    ) async throws -> Operations.appListByOrganization.Output {
        try await appListByOrganization(Operations.appListByOrganization.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Migrate machine types
    ///
    /// Migrates all apps' machine types of an organization from one machine type to another
    ///
    /// - Remark: HTTP `PATCH /organizations/{org-slug}/apps/machine_types`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/machine_types/patch(organizationMachineTypeUpdate)`.
    public func organizationMachineTypeUpdate(
        path: Operations.organizationMachineTypeUpdate.Input.Path,
        headers: Operations.organizationMachineTypeUpdate.Input.Headers = .init(),
        body: Operations.organizationMachineTypeUpdate.Input.Body
    ) async throws -> Operations.organizationMachineTypeUpdate.Output {
        try await organizationMachineTypeUpdate(Operations.organizationMachineTypeUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List organizations groups
    ///
    /// Lists the groups of an organization
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/groups`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/get(organizationGroupList)`.
    public func organizationGroupList(
        path: Operations.organizationGroupList.Input.Path,
        headers: Operations.organizationGroupList.Input.Headers = .init()
    ) async throws -> Operations.organizationGroupList.Output {
        try await organizationGroupList(Operations.organizationGroupList.Input(
            path: path,
            headers: headers
        ))
    }
    /// Adds a group to the organization
    ///
    /// Adds a group to the organization
    ///
    /// - Remark: HTTP `POST /organizations/{org-slug}/groups`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/post(organizationGroupAdd)`.
    public func organizationGroupAdd(
        path: Operations.organizationGroupAdd.Input.Path,
        headers: Operations.organizationGroupAdd.Input.Headers = .init(),
        body: Operations.organizationGroupAdd.Input.Body
    ) async throws -> Operations.organizationGroupAdd.Output {
        try await organizationGroupAdd(Operations.organizationGroupAdd.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List the members of the organization
    ///
    /// List the members of the organization
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/members`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/get(memberList)`.
    public func memberList(
        path: Operations.memberList.Input.Path,
        headers: Operations.memberList.Input.Headers = .init()
    ) async throws -> Operations.memberList.Output {
        try await memberList(Operations.memberList.Input(
            path: path,
            headers: headers
        ))
    }
    /// Adds a member to the organization
    ///
    /// Adds a member to the organization
    ///
    /// - Remark: HTTP `POST /organizations/{org-slug}/members`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/post(memberAdd)`.
    public func memberAdd(
        path: Operations.memberAdd.Input.Path,
        headers: Operations.memberAdd.Input.Headers = .init(),
        body: Operations.memberAdd.Input.Body
    ) async throws -> Operations.memberAdd.Output {
        try await memberAdd(Operations.memberAdd.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get the secrets of an organization
    ///
    /// Get the secrets of an organization
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/secrets`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/get(secretsList)`.
    public func secretsList(
        path: Operations.secretsList.Input.Path,
        headers: Operations.secretsList.Input.Headers = .init()
    ) async throws -> Operations.secretsList.Output {
        try await secretsList(Operations.secretsList.Input(
            path: path,
            headers: headers
        ))
    }
    /// Create a new secret
    ///
    /// Create a new secret
    ///
    /// - Remark: HTTP `POST /organizations/{org-slug}/secrets`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/post(secretCreate)`.
    public func secretCreate(
        path: Operations.secretCreate.Input.Path,
        headers: Operations.secretCreate.Input.Headers = .init(),
        body: Operations.secretCreate.Input.Body
    ) async throws -> Operations.secretCreate.Output {
        try await secretCreate(Operations.secretCreate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a single secret by name
    ///
    /// Get a single secret by name, including the value if not protected
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/get(secretsShow)`.
    public func secretsShow(
        path: Operations.secretsShow.Input.Path,
        headers: Operations.secretsShow.Input.Headers = .init()
    ) async throws -> Operations.secretsShow.Output {
        try await secretsShow(Operations.secretsShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update an existing secret
    ///
    /// Update an existing secret. If the secret is protected, only its value can be overridden.
    ///
    /// - Remark: HTTP `PATCH /organizations/{org-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/patch(secretUpdate)`.
    public func secretUpdate(
        path: Operations.secretUpdate.Input.Path,
        headers: Operations.secretUpdate.Input.Headers = .init(),
        body: Operations.secretUpdate.Input.Body
    ) async throws -> Operations.secretUpdate.Output {
        try await secretUpdate(Operations.secretUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Delete a secret by name
    ///
    /// Delete a secret by name
    ///
    /// - Remark: HTTP `DELETE /organizations/{org-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/delete(secretDeletemixin0)`.
    public func secretDeletemixin0(
        path: Operations.secretDeletemixin0.Input.Path,
        headers: Operations.secretDeletemixin0.Input.Headers = .init()
    ) async throws -> Operations.secretDeletemixin0.Output {
        try await secretDeletemixin0(Operations.secretDeletemixin0.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get list of the addons for organization
    ///
    /// List all the provisioned addons for organization
    ///
    /// - Remark: HTTP `GET /organizations/{organization-slug}/addons`.
    /// - Remark: Generated from `#/paths//organizations/{organization-slug}/addons/get(addonListByOrganization)`.
    public func addonListByOrganization(
        path: Operations.addonListByOrganization.Input.Path,
        headers: Operations.addonListByOrganization.Input.Headers = .init()
    ) async throws -> Operations.addonListByOrganization.Output {
        try await addonListByOrganization(Operations.addonListByOrganization.Input(
            path: path,
            headers: headers
        ))
    }
    /// List all pipelines/standalone builds
    ///
    /// List all the Bitrise pipelines/standalone builds that can be accessed with the authenticated account. Filter pipelines/standalone builds based on their owner, using the owner slug, or the status of the pipeline/standalone build.
    ///
    /// - Remark: HTTP `GET /pipelines`.
    /// - Remark: Generated from `#/paths//pipelines/get(pipelineListAll)`.
    public func pipelineListAll(
        query: Operations.pipelineListAll.Input.Query = .init(),
        headers: Operations.pipelineListAll.Input.Headers = .init()
    ) async throws -> Operations.pipelineListAll.Output {
        try await pipelineListAll(Operations.pipelineListAll.Input(
            query: query,
            headers: headers
        ))
    }
    /// Migrate machine types
    ///
    /// Migrates all apps' machine types of a user from one machine type to another
    ///
    /// - Remark: HTTP `PATCH /user/{user-slug}/apps/machine_types`.
    /// - Remark: Generated from `#/paths//user/{user-slug}/apps/machine_types/patch(userMachineTypeUpdate)`.
    public func userMachineTypeUpdate(
        path: Operations.userMachineTypeUpdate.Input.Path,
        headers: Operations.userMachineTypeUpdate.Input.Headers = .init(),
        body: Operations.userMachineTypeUpdate.Input.Body
    ) async throws -> Operations.userMachineTypeUpdate.Output {
        try await userMachineTypeUpdate(Operations.userMachineTypeUpdate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get a specific user
    ///
    /// Show information about a specific user
    ///
    /// - Remark: HTTP `GET /users/{user-slug}`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/get(userShow)`.
    public func userShow(
        path: Operations.userShow.Input.Path,
        headers: Operations.userShow.Input.Headers = .init()
    ) async throws -> Operations.userShow.Output {
        try await userShow(Operations.userShow.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get list of the addons for user
    ///
    /// List all the provisioned addons for the authenticated user
    ///
    /// - Remark: HTTP `GET /users/{user-slug}/addons`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/addons/get(addonListByUser)`.
    public func addonListByUser(
        path: Operations.addonListByUser.Input.Path,
        headers: Operations.addonListByUser.Input.Headers = .init()
    ) async throws -> Operations.addonListByUser.Output {
        try await addonListByUser(Operations.addonListByUser.Input(
            path: path,
            headers: headers
        ))
    }
    /// List Apple API credentials for a specific user
    ///
    /// List Apple API credentials for a specific Bitrise user
    ///
    /// - Remark: HTTP `GET /users/{user-slug}/apple-api-credentials`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/apple-api-credentials/get(appleApiCredentialList)`.
    public func appleApiCredentialList(
        path: Operations.appleApiCredentialList.Input.Path,
        headers: Operations.appleApiCredentialList.Input.Headers = .init()
    ) async throws -> Operations.appleApiCredentialList.Output {
        try await appleApiCredentialList(Operations.appleApiCredentialList.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get list of the apps for a user
    ///
    /// List all the available apps for the given user.  It needs the user slug that you can get from the [GET /me](https://api-docs.bitrise.io/#/user/user-profile) endpoint.
    ///
    /// - Remark: HTTP `GET /users/{user-slug}/apps`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/apps/get(appListByUser)`.
    public func appListByUser(
        path: Operations.appListByUser.Input.Path,
        query: Operations.appListByUser.Input.Query = .init(),
        headers: Operations.appListByUser.Input.Headers = .init()
    ) async throws -> Operations.appListByUser.Output {
        try await appListByUser(Operations.appListByUser.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
public enum Servers {
    public static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.bitrise.io/v0.1",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// - Remark: Generated from `#/components/schemas/addons.Addon`.
        public struct addons_period_Addon: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/addons.Addon/banner_image`.
            public var banner_image: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/card_header_colors`.
            public var card_header_colors: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/categories`.
            public var categories: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/description`.
            public var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/developer_links`.
            public var developer_links: [Components.Schemas.addons_period_DeveloperLink]?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/documentation_url`.
            public var documentation_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/has_ui`.
            public var has_ui: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/icon`.
            public var icon: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/is_beta`.
            public var is_beta: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/plans`.
            public var plans: [Components.Schemas.addons_period_Plan]?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/platforms`.
            public var platforms: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/preview_images`.
            public var preview_images: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/setup_guide`.
            public var setup_guide: Components.Schemas.addons_period_SetupGuide?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/subtitle`.
            public var subtitle: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/summary`.
            public var summary: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Addon/title`.
            public var title: Swift.String?
            /// Creates a new `addons_period_Addon`.
            ///
            /// - Parameters:
            ///   - banner_image:
            ///   - card_header_colors:
            ///   - categories:
            ///   - description:
            ///   - developer_links:
            ///   - documentation_url:
            ///   - has_ui:
            ///   - icon:
            ///   - id:
            ///   - is_beta:
            ///   - plans:
            ///   - platforms:
            ///   - preview_images:
            ///   - setup_guide:
            ///   - subtitle:
            ///   - summary:
            ///   - title:
            public init(
                banner_image: Swift.String? = nil,
                card_header_colors: [Swift.String]? = nil,
                categories: [Swift.String]? = nil,
                description: Swift.String? = nil,
                developer_links: [Components.Schemas.addons_period_DeveloperLink]? = nil,
                documentation_url: Swift.String? = nil,
                has_ui: Swift.Bool? = nil,
                icon: Swift.String? = nil,
                id: Swift.String? = nil,
                is_beta: Swift.Bool? = nil,
                plans: [Components.Schemas.addons_period_Plan]? = nil,
                platforms: [Swift.String]? = nil,
                preview_images: [Swift.String]? = nil,
                setup_guide: Components.Schemas.addons_period_SetupGuide? = nil,
                subtitle: Swift.String? = nil,
                summary: Swift.String? = nil,
                title: Swift.String? = nil
            ) {
                self.banner_image = banner_image
                self.card_header_colors = card_header_colors
                self.categories = categories
                self.description = description
                self.developer_links = developer_links
                self.documentation_url = documentation_url
                self.has_ui = has_ui
                self.icon = icon
                self.id = id
                self.is_beta = is_beta
                self.plans = plans
                self.platforms = platforms
                self.preview_images = preview_images
                self.setup_guide = setup_guide
                self.subtitle = subtitle
                self.summary = summary
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case banner_image
                case card_header_colors
                case categories
                case description
                case developer_links
                case documentation_url
                case has_ui
                case icon
                case id
                case is_beta
                case plans
                case platforms
                case preview_images
                case setup_guide
                case subtitle
                case summary
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/addons.DeveloperLink`.
        public struct addons_period_DeveloperLink: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/addons.DeveloperLink/title`.
            public var title: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.DeveloperLink/url`.
            public var url: Swift.String?
            /// Creates a new `addons_period_DeveloperLink`.
            ///
            /// - Parameters:
            ///   - title:
            ///   - url:
            public init(
                title: Swift.String? = nil,
                url: Swift.String? = nil
            ) {
                self.title = title
                self.url = url
            }
            public enum CodingKeys: String, CodingKey {
                case title
                case url
            }
        }
        /// - Remark: Generated from `#/components/schemas/addons.Feature`.
        public struct addons_period_Feature: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/addons.Feature/available`.
            public var available: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/addons.Feature/description`.
            public var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Feature/quantity`.
            public var quantity: Swift.String?
            /// Creates a new `addons_period_Feature`.
            ///
            /// - Parameters:
            ///   - available:
            ///   - description:
            ///   - quantity:
            public init(
                available: Swift.Bool? = nil,
                description: Swift.String? = nil,
                quantity: Swift.String? = nil
            ) {
                self.available = available
                self.description = description
                self.quantity = quantity
            }
            public enum CodingKeys: String, CodingKey {
                case available
                case description
                case quantity
            }
        }
        /// - Remark: Generated from `#/components/schemas/addons.Plan`.
        public struct addons_period_Plan: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/addons.Plan/features`.
            public var features: [Components.Schemas.addons_period_Feature]?
            /// - Remark: Generated from `#/components/schemas/addons.Plan/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Plan/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.Plan/price`.
            public var price: Swift.Int?
            /// Creates a new `addons_period_Plan`.
            ///
            /// - Parameters:
            ///   - features:
            ///   - id:
            ///   - name:
            ///   - price:
            public init(
                features: [Components.Schemas.addons_period_Feature]? = nil,
                id: Swift.String? = nil,
                name: Swift.String? = nil,
                price: Swift.Int? = nil
            ) {
                self.features = features
                self.id = id
                self.name = name
                self.price = price
            }
            public enum CodingKeys: String, CodingKey {
                case features
                case id
                case name
                case price
            }
        }
        /// - Remark: Generated from `#/components/schemas/addons.SetupGuide`.
        public struct addons_period_SetupGuide: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/addons.SetupGuide/instructions`.
            public var instructions: [Components.Schemas.addons_period_SetupInstruction]?
            /// - Remark: Generated from `#/components/schemas/addons.SetupGuide/notification`.
            public var notification: Swift.String?
            /// Creates a new `addons_period_SetupGuide`.
            ///
            /// - Parameters:
            ///   - instructions:
            ///   - notification:
            public init(
                instructions: [Components.Schemas.addons_period_SetupInstruction]? = nil,
                notification: Swift.String? = nil
            ) {
                self.instructions = instructions
                self.notification = notification
            }
            public enum CodingKeys: String, CodingKey {
                case instructions
                case notification
            }
        }
        /// - Remark: Generated from `#/components/schemas/addons.SetupInstruction`.
        public struct addons_period_SetupInstruction: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/addons.SetupInstruction/card_content`.
            public var card_content: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.SetupInstruction/description`.
            public var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/addons.SetupInstruction/type`.
            public var _type: Swift.String?
            /// Creates a new `addons_period_SetupInstruction`.
            ///
            /// - Parameters:
            ///   - card_content:
            ///   - description:
            ///   - _type:
            public init(
                card_content: Swift.String? = nil,
                description: Swift.String? = nil,
                _type: Swift.String? = nil
            ) {
                self.card_content = card_content
                self.description = description
                self._type = _type
            }
            public enum CodingKeys: String, CodingKey {
                case card_content
                case description
                case _type = "type"
            }
        }
        /// - Remark: Generated from `#/components/schemas/pipelineabledomain.ArtifactMeta`.
        public struct pipelineabledomain_period_ArtifactMeta: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.ArtifactMeta/artifact_type`.
            public var artifact_type: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.ArtifactMeta/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.ArtifactMeta/title`.
            public var title: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.ArtifactMeta/version_code`.
            public var version_code: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.ArtifactMeta/version_name`.
            public var version_name: Swift.String?
            /// Creates a new `pipelineabledomain_period_ArtifactMeta`.
            ///
            /// - Parameters:
            ///   - artifact_type:
            ///   - id:
            ///   - title:
            ///   - version_code:
            ///   - version_name:
            public init(
                artifact_type: Swift.String? = nil,
                id: Swift.String? = nil,
                title: Swift.String? = nil,
                version_code: Swift.String? = nil,
                version_name: Swift.String? = nil
            ) {
                self.artifact_type = artifact_type
                self.id = id
                self.title = title
                self.version_code = version_code
                self.version_name = version_name
            }
            public enum CodingKeys: String, CodingKey {
                case artifact_type
                case id
                case title
                case version_code
                case version_name
            }
        }
        /// - Remark: Generated from `#/components/schemas/pipelineabledomain.BuildToolInvocation`.
        public struct pipelineabledomain_period_BuildToolInvocation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.BuildToolInvocation/invocation_id`.
            public var invocation_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.BuildToolInvocation/tool`.
            public var tool: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.BuildToolInvocation/tool_version`.
            public var tool_version: Swift.String?
            /// Creates a new `pipelineabledomain_period_BuildToolInvocation`.
            ///
            /// - Parameters:
            ///   - invocation_id:
            ///   - tool:
            ///   - tool_version:
            public init(
                invocation_id: Swift.String? = nil,
                tool: Swift.String? = nil,
                tool_version: Swift.String? = nil
            ) {
                self.invocation_id = invocation_id
                self.tool = tool
                self.tool_version = tool_version
            }
            public enum CodingKeys: String, CodingKey {
                case invocation_id
                case tool
                case tool_version
            }
        }
        /// - Remark: Generated from `#/components/schemas/pipelineabledomain.Environments`.
        public struct pipelineabledomain_period_Environments: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.Environments/is_expand`.
            public var is_expand: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.Environments/key`.
            public var key: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.Environments/value`.
            public var value: OpenAPIRuntime.OpenAPIObjectContainer?
            /// Creates a new `pipelineabledomain_period_Environments`.
            ///
            /// - Parameters:
            ///   - is_expand:
            ///   - key:
            ///   - value:
            public init(
                is_expand: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                key: Swift.String? = nil,
                value: OpenAPIRuntime.OpenAPIObjectContainer? = nil
            ) {
                self.is_expand = is_expand
                self.key = key
                self.value = value
            }
            public enum CodingKeys: String, CodingKey {
                case is_expand
                case key
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/pipelineabledomain.LocalConfig`.
        public struct pipelineabledomain_period_LocalConfig: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.LocalConfig/host`.
            public var host: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.LocalConfig/username`.
            public var username: Swift.String?
            /// Creates a new `pipelineabledomain_period_LocalConfig`.
            ///
            /// - Parameters:
            ///   - host:
            ///   - username:
            public init(
                host: Swift.String? = nil,
                username: Swift.String? = nil
            ) {
                self.host = host
                self.username = username
            }
            public enum CodingKeys: String, CodingKey {
                case host
                case username
            }
        }
        /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams`.
        public struct pipelineabledomain_period_TriggerParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/branch`.
            public var branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/branch_dest`.
            public var branch_dest: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/branch_dest_repo_owner`.
            public var branch_dest_repo_owner: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/branch_repo_owner`.
            public var branch_repo_owner: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/commit_hash`.
            public var commit_hash: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/commit_message`.
            public var commit_message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/environments`.
            public var environments: [Components.Schemas.pipelineabledomain_period_Environments]?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/machine_type_id`.
            public var machine_type_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/pull_request_author`.
            public var pull_request_author: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/pull_request_head_branch`.
            public var pull_request_head_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/pull_request_id`.
            public var pull_request_id: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/pull_request_merge_branch`.
            public var pull_request_merge_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/pull_request_repository_url`.
            public var pull_request_repository_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/pull_request_unverified_merge_branch`.
            public var pull_request_unverified_merge_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/stack`.
            public var stack: Swift.String?
            /// - Remark: Generated from `#/components/schemas/pipelineabledomain.TriggerParams/tag`.
            public var tag: OpenAPIRuntime.OpenAPIObjectContainer?
            /// Creates a new `pipelineabledomain_period_TriggerParams`.
            ///
            /// - Parameters:
            ///   - branch:
            ///   - branch_dest:
            ///   - branch_dest_repo_owner:
            ///   - branch_repo_owner:
            ///   - commit_hash:
            ///   - commit_message:
            ///   - environments:
            ///   - machine_type_id:
            ///   - pull_request_author:
            ///   - pull_request_head_branch:
            ///   - pull_request_id:
            ///   - pull_request_merge_branch:
            ///   - pull_request_repository_url:
            ///   - pull_request_unverified_merge_branch:
            ///   - stack:
            ///   - tag:
            public init(
                branch: Swift.String? = nil,
                branch_dest: Swift.String? = nil,
                branch_dest_repo_owner: Swift.String? = nil,
                branch_repo_owner: Swift.String? = nil,
                commit_hash: Swift.String? = nil,
                commit_message: Swift.String? = nil,
                environments: [Components.Schemas.pipelineabledomain_period_Environments]? = nil,
                machine_type_id: Swift.String? = nil,
                pull_request_author: Swift.String? = nil,
                pull_request_head_branch: Swift.String? = nil,
                pull_request_id: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                pull_request_merge_branch: Swift.String? = nil,
                pull_request_repository_url: Swift.String? = nil,
                pull_request_unverified_merge_branch: Swift.String? = nil,
                stack: Swift.String? = nil,
                tag: OpenAPIRuntime.OpenAPIObjectContainer? = nil
            ) {
                self.branch = branch
                self.branch_dest = branch_dest
                self.branch_dest_repo_owner = branch_dest_repo_owner
                self.branch_repo_owner = branch_repo_owner
                self.commit_hash = commit_hash
                self.commit_message = commit_message
                self.environments = environments
                self.machine_type_id = machine_type_id
                self.pull_request_author = pull_request_author
                self.pull_request_head_branch = pull_request_head_branch
                self.pull_request_id = pull_request_id
                self.pull_request_merge_branch = pull_request_merge_branch
                self.pull_request_repository_url = pull_request_repository_url
                self.pull_request_unverified_merge_branch = pull_request_unverified_merge_branch
                self.stack = stack
                self.tag = tag
            }
            public enum CodingKeys: String, CodingKey {
                case branch
                case branch_dest
                case branch_dest_repo_owner
                case branch_repo_owner
                case commit_hash
                case commit_message
                case environments
                case machine_type_id
                case pull_request_author
                case pull_request_head_branch
                case pull_request_id
                case pull_request_merge_branch
                case pull_request_repository_url
                case pull_request_unverified_merge_branch
                case stack
                case tag
            }
        }
        /// - Remark: Generated from `#/components/schemas/service.ProxyErrorRespModel`.
        public struct service_period_ProxyErrorRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/service.ProxyErrorRespModel/error_msg`.
            public var error_msg: Swift.String?
            /// Creates a new `service_period_ProxyErrorRespModel`.
            ///
            /// - Parameters:
            ///   - error_msg:
            public init(error_msg: Swift.String? = nil) {
                self.error_msg = error_msg
            }
            public enum CodingKeys: String, CodingKey {
                case error_msg
            }
        }
        /// - Remark: Generated from `#/components/schemas/service.StandardErrorRespModel`.
        public struct service_period_StandardErrorRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/service.StandardErrorRespModel/message`.
            public var message: Swift.String?
            /// Creates a new `service_period_StandardErrorRespModel`.
            ///
            /// - Parameters:
            ///   - message:
            public init(message: Swift.String? = nil) {
                self.message = message
            }
            public enum CodingKeys: String, CodingKey {
                case message
            }
        }
        /// - Remark: Generated from `#/components/schemas/service.dto.CreatedSecretNoValue`.
        public struct service_period_dto_period_CreatedSecretNoValue: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/service.dto.CreatedSecretNoValue/expand_in_step_inputs`.
            public var expand_in_step_inputs: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/service.dto.CreatedSecretNoValue/exposed_for_pull_requests`.
            public var exposed_for_pull_requests: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/service.dto.CreatedSecretNoValue/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/service.dto.CreatedSecretNoValue/is_protected`.
            public var is_protected: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/service.dto.CreatedSecretNoValue/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/service.dto.CreatedSecretNoValue/scope`.
            public var scope: Swift.String?
            /// Creates a new `service_period_dto_period_CreatedSecretNoValue`.
            ///
            /// - Parameters:
            ///   - expand_in_step_inputs:
            ///   - exposed_for_pull_requests:
            ///   - id:
            ///   - is_protected:
            ///   - name:
            ///   - scope:
            public init(
                expand_in_step_inputs: Swift.Bool? = nil,
                exposed_for_pull_requests: Swift.Bool? = nil,
                id: Swift.String? = nil,
                is_protected: Swift.Bool? = nil,
                name: Swift.String? = nil,
                scope: Swift.String? = nil
            ) {
                self.expand_in_step_inputs = expand_in_step_inputs
                self.exposed_for_pull_requests = exposed_for_pull_requests
                self.id = id
                self.is_protected = is_protected
                self.name = name
                self.scope = scope
            }
            public enum CodingKeys: String, CodingKey {
                case expand_in_step_inputs
                case exposed_for_pull_requests
                case id
                case is_protected
                case name
                case scope
            }
        }
        /// - Remark: Generated from `#/components/schemas/service.dto.Group`.
        public struct service_period_dto_period_Group: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/service.dto.Group/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/service.dto.Group/slug`.
            public var slug: Swift.String?
            /// Creates a new `service_period_dto_period_Group`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - slug:
            public init(
                name: Swift.String? = nil,
                slug: Swift.String? = nil
            ) {
                self.name = name
                self.slug = slug
            }
            public enum CodingKeys: String, CodingKey {
                case name
                case slug
            }
        }
        /// - Remark: Generated from `#/components/schemas/service.dto.Member`.
        public struct service_period_dto_period_Member: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/service.dto.Member/email`.
            public var email: Swift.String?
            /// - Remark: Generated from `#/components/schemas/service.dto.Member/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/service.dto.Member/username`.
            public var username: Swift.String?
            /// Creates a new `service_period_dto_period_Member`.
            ///
            /// - Parameters:
            ///   - email:
            ///   - slug:
            ///   - username:
            public init(
                email: Swift.String? = nil,
                slug: Swift.String? = nil,
                username: Swift.String? = nil
            ) {
                self.email = email
                self.slug = slug
                self.username = username
            }
            public enum CodingKeys: String, CodingKey {
                case email
                case slug
                case username
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ActivityEventListResponseModel`.
        public struct v0_period_ActivityEventListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_ActivityEventResponseItemModel]?
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_PagingResponseModel?
            /// Creates a new `v0_period_ActivityEventListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging:
            public init(
                data: [Components.Schemas.v0_period_ActivityEventResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_PagingResponseModel? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel`.
        public struct v0_period_ActivityEventResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel/created_at`.
            public var created_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel/description`.
            public var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel/event_icon`.
            public var event_icon: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel/event_stype`.
            public var event_stype: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel/repository_avatar_icon_url`.
            public var repository_avatar_icon_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel/repository_title`.
            public var repository_title: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel/target_path_string`.
            public var target_path_string: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ActivityEventResponseItemModel/title`.
            public var title: Swift.String?
            /// Creates a new `v0_period_ActivityEventResponseItemModel`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - description:
            ///   - event_icon:
            ///   - event_stype:
            ///   - repository_avatar_icon_url:
            ///   - repository_title:
            ///   - slug:
            ///   - target_path_string:
            ///   - title:
            public init(
                created_at: Swift.String? = nil,
                description: Swift.String? = nil,
                event_icon: Swift.String? = nil,
                event_stype: Swift.String? = nil,
                repository_avatar_icon_url: Swift.String? = nil,
                repository_title: Swift.String? = nil,
                slug: Swift.String? = nil,
                target_path_string: Swift.String? = nil,
                title: Swift.String? = nil
            ) {
                self.created_at = created_at
                self.description = description
                self.event_icon = event_icon
                self.event_stype = event_stype
                self.repository_avatar_icon_url = repository_avatar_icon_url
                self.repository_title = repository_title
                self.slug = slug
                self.target_path_string = target_path_string
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case description
                case event_icon
                case event_stype
                case repository_avatar_icon_url
                case repository_title
                case slug
                case target_path_string
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AddOnAppResponseItemModel`.
        public struct v0_period_AddOnAppResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AddOnAppResponseItemModel/icon`.
            public var icon: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AddOnAppResponseItemModel/plan`.
            public var plan: Components.Schemas.addons_period_Plan?
            /// - Remark: Generated from `#/components/schemas/v0.AddOnAppResponseItemModel/plan_started_at`.
            public var plan_started_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AddOnAppResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AddOnAppResponseItemModel/title`.
            public var title: Swift.String?
            /// Creates a new `v0_period_AddOnAppResponseItemModel`.
            ///
            /// - Parameters:
            ///   - icon:
            ///   - plan:
            ///   - plan_started_at:
            ///   - slug:
            ///   - title:
            public init(
                icon: Swift.String? = nil,
                plan: Components.Schemas.addons_period_Plan? = nil,
                plan_started_at: Swift.String? = nil,
                slug: Swift.String? = nil,
                title: Swift.String? = nil
            ) {
                self.icon = icon
                self.plan = plan
                self.plan_started_at = plan_started_at
                self.slug = slug
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case icon
                case plan
                case plan_started_at
                case slug
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AddonsListResponseModel`.
        public struct v0_period_AddonsListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AddonsListResponseModel/data`.
            public var data: [Components.Schemas.addons_period_Addon]?
            /// Creates a new `v0_period_AddonsListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: [Components.Schemas.addons_period_Addon]? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AddonsShowResponseModel`.
        public struct v0_period_AddonsShowResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AddonsShowResponseModel/data`.
            public var data: Components.Schemas.addons_period_Addon?
            /// Creates a new `v0_period_AddonsShowResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.addons_period_Addon? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AndroidKeystoreFileUploadParams`.
        public struct v0_period_AndroidKeystoreFileUploadParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AndroidKeystoreFileUploadParams/alias`.
            public var alias: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.AndroidKeystoreFileUploadParams/keystore_file_name`.
            public var keystore_file_name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AndroidKeystoreFileUploadParams/password`.
            public var password: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.AndroidKeystoreFileUploadParams/private_key_password`.
            public var private_key_password: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.AndroidKeystoreFileUploadParams/upload_file_name`.
            public var upload_file_name: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.AndroidKeystoreFileUploadParams/upload_file_size`.
            public var upload_file_size: Swift.Int
            /// Creates a new `v0_period_AndroidKeystoreFileUploadParams`.
            ///
            /// - Parameters:
            ///   - alias:
            ///   - keystore_file_name:
            ///   - password:
            ///   - private_key_password:
            ///   - upload_file_name:
            ///   - upload_file_size:
            public init(
                alias: Swift.String,
                keystore_file_name: Swift.String? = nil,
                password: Swift.String,
                private_key_password: Swift.String,
                upload_file_name: Swift.String,
                upload_file_size: Swift.Int
            ) {
                self.alias = alias
                self.keystore_file_name = keystore_file_name
                self.password = password
                self.private_key_password = private_key_password
                self.upload_file_name = upload_file_name
                self.upload_file_size = upload_file_size
            }
            public enum CodingKeys: String, CodingKey {
                case alias
                case keystore_file_name
                case password
                case private_key_password
                case upload_file_name
                case upload_file_size
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel`.
        public struct v0_period_AppAddOnResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/description`.
            public var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/documentation_url`.
            public var documentation_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/has_ui`.
            public var has_ui: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/icon`.
            public var icon: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/is_beta`.
            public var is_beta: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/is_enabled`.
            public var is_enabled: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/login_url`.
            public var login_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/plan`.
            public var plan: Components.Schemas.addons_period_Plan?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/scopes`.
            public var scopes: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/setup_guide`.
            public var setup_guide: Components.Schemas.addons_period_SetupGuide?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/summary`.
            public var summary: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/terms_url`.
            public var terms_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnResponseItemModel/title`.
            public var title: Swift.String?
            /// Creates a new `v0_period_AppAddOnResponseItemModel`.
            ///
            /// - Parameters:
            ///   - description:
            ///   - documentation_url:
            ///   - has_ui:
            ///   - icon:
            ///   - id:
            ///   - is_beta:
            ///   - is_enabled:
            ///   - login_url:
            ///   - plan:
            ///   - scopes:
            ///   - setup_guide:
            ///   - summary:
            ///   - terms_url:
            ///   - title:
            public init(
                description: Swift.String? = nil,
                documentation_url: Swift.String? = nil,
                has_ui: Swift.Bool? = nil,
                icon: Swift.String? = nil,
                id: Swift.String? = nil,
                is_beta: Swift.Bool? = nil,
                is_enabled: Swift.Bool? = nil,
                login_url: Swift.String? = nil,
                plan: Components.Schemas.addons_period_Plan? = nil,
                scopes: [Swift.String]? = nil,
                setup_guide: Components.Schemas.addons_period_SetupGuide? = nil,
                summary: Swift.String? = nil,
                terms_url: Swift.String? = nil,
                title: Swift.String? = nil
            ) {
                self.description = description
                self.documentation_url = documentation_url
                self.has_ui = has_ui
                self.icon = icon
                self.id = id
                self.is_beta = is_beta
                self.is_enabled = is_enabled
                self.login_url = login_url
                self.plan = plan
                self.scopes = scopes
                self.setup_guide = setup_guide
                self.summary = summary
                self.terms_url = terms_url
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case description
                case documentation_url
                case has_ui
                case icon
                case id
                case is_beta
                case is_enabled
                case login_url
                case plan
                case scopes
                case setup_guide
                case summary
                case terms_url
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppAddOnsListResponseModel`.
        public struct v0_period_AppAddOnsListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppAddOnsListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_AppAddOnResponseItemModel]?
            /// Creates a new `v0_period_AppAddOnsListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: [Components.Schemas.v0_period_AppAddOnResponseItemModel]? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppConfigRequestParam`.
        public struct v0_period_AppConfigRequestParam: Codable, Hashable, Sendable {
            /// The bitrise.yml of your application, defined in JSON format
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppConfigRequestParam/app_config_datastore_yaml`.
            public var app_config_datastore_yaml: OpenAPIRuntime.OpenAPIObjectContainer
            /// Creates a new `v0_period_AppConfigRequestParam`.
            ///
            /// - Parameters:
            ///   - app_config_datastore_yaml: The bitrise.yml of your application, defined in JSON format
            public init(app_config_datastore_yaml: OpenAPIRuntime.OpenAPIObjectContainer) {
                self.app_config_datastore_yaml = app_config_datastore_yaml
            }
            public enum CodingKeys: String, CodingKey {
                case app_config_datastore_yaml
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppConfigRespModel`.
        public struct v0_period_AppConfigRespModel: Codable, Hashable, Sendable {
            /// A container of undocumented properties.
            public var additionalProperties: [String: Swift.String]
            /// Creates a new `v0_period_AppConfigRespModel`.
            ///
            /// - Parameters:
            ///   - additionalProperties: A container of undocumented properties.
            public init(additionalProperties: [String: Swift.String] = .init()) {
                self.additionalProperties = additionalProperties
            }
            public init(from decoder: any Decoder) throws {
                additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
            }
            public func encode(to encoder: any Encoder) throws {
                try encoder.encodeAdditionalProperties(additionalProperties)
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppDeleteRespModel`.
        public struct v0_period_AppDeleteRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppDeleteRespModel/msg`.
            public var msg: Swift.String?
            /// Creates a new `v0_period_AppDeleteRespModel`.
            ///
            /// - Parameters:
            ///   - msg:
            public init(msg: Swift.String? = nil) {
                self.msg = msg
            }
            public enum CodingKeys: String, CodingKey {
                case msg
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppFinishParams`.
        public struct v0_period_AppFinishParams: Codable, Hashable, Sendable {
            /// Which config to use. Specify a config that matches your project type (e. g. `default-android-config` for `android`, etc.). If not speficied, default value is `other-config`. The available values are `default-android-config`, `default-cordova-config`, `default-fastlane-android-config`, `default-fastlane-ios-config`, `flutter-config-notest-app-android`, `flutter-config-notest-app-both`, `flutter-config-notest-app-ios`, `flutter-config-test-app-android`, `flutter-config-test-app-both`, `flutter-config-test-app-ios`, `default-ionic-config`, `default-ios-config`, `default-macos-config`, `default-react-native-config`, `default-react-native-expo-config`, `other-config`.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishParams/config`.
            public var config: Swift.String?
            /// Environment variables for the application workflows, e.g. {"env1":"val1","env2":"val2"}
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishParams/envs`.
            public struct envsPayload: Codable, Hashable, Sendable {
                /// A container of undocumented properties.
                public var additionalProperties: [String: Swift.String]
                /// Creates a new `envsPayload`.
                ///
                /// - Parameters:
                ///   - additionalProperties: A container of undocumented properties.
                public init(additionalProperties: [String: Swift.String] = .init()) {
                    self.additionalProperties = additionalProperties
                }
                public init(from decoder: any Decoder) throws {
                    additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                }
                public func encode(to encoder: any Encoder) throws {
                    try encoder.encodeAdditionalProperties(additionalProperties)
                }
            }
            /// Environment variables for the application workflows, e.g. {"env1":"val1","env2":"val2"}
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishParams/envs`.
            public var envs: Components.Schemas.v0_period_AppFinishParams.envsPayload?
            /// config specification mode, has to be specified with `manual` value
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishParams/mode`.
            public var mode: Swift.String?
            /// The slug of the organization, who will be the owner of the application, if it's not specified, then the authenticated user will be the owner
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishParams/organization_slug`.
            public var organization_slug: Swift.String?
            /// The type of your project (`android`, `ios`, `cordova`, `other`, `xamarin`, `macos`, `ionic`, `react-native`, `fastlane`, null)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishParams/project_type`.
            public var project_type: Swift.String
            /// The id of the stack the application will be built (these can be found in the [system report](https://github.com/bitrise-io/bitrise.io/tree/master/system_reports) file names)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishParams/stack_id`.
            public var stack_id: Swift.String
            /// Creates a new `v0_period_AppFinishParams`.
            ///
            /// - Parameters:
            ///   - config: Which config to use. Specify a config that matches your project type (e. g. `default-android-config` for `android`, etc.). If not speficied, default value is `other-config`. The available values are `default-android-config`, `default-cordova-config`, `default-fastlane-android-config`, `default-fastlane-ios-config`, `flutter-config-notest-app-android`, `flutter-config-notest-app-both`, `flutter-config-notest-app-ios`, `flutter-config-test-app-android`, `flutter-config-test-app-both`, `flutter-config-test-app-ios`, `default-ionic-config`, `default-ios-config`, `default-macos-config`, `default-react-native-config`, `default-react-native-expo-config`, `other-config`.
            ///   - envs: Environment variables for the application workflows, e.g. {"env1":"val1","env2":"val2"}
            ///   - mode: config specification mode, has to be specified with `manual` value
            ///   - organization_slug: The slug of the organization, who will be the owner of the application, if it's not specified, then the authenticated user will be the owner
            ///   - project_type: The type of your project (`android`, `ios`, `cordova`, `other`, `xamarin`, `macos`, `ionic`, `react-native`, `fastlane`, null)
            ///   - stack_id: The id of the stack the application will be built (these can be found in the [system report](https://github.com/bitrise-io/bitrise.io/tree/master/system_reports) file names)
            public init(
                config: Swift.String? = nil,
                envs: Components.Schemas.v0_period_AppFinishParams.envsPayload? = nil,
                mode: Swift.String? = nil,
                organization_slug: Swift.String? = nil,
                project_type: Swift.String,
                stack_id: Swift.String
            ) {
                self.config = config
                self.envs = envs
                self.mode = mode
                self.organization_slug = organization_slug
                self.project_type = project_type
                self.stack_id = stack_id
            }
            public enum CodingKeys: String, CodingKey {
                case config
                case envs
                case mode
                case organization_slug
                case project_type
                case stack_id
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppFinishRespModel`.
        public struct v0_period_AppFinishRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishRespModel/branch_name`.
            public var branch_name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishRespModel/build_trigger_token`.
            public var build_trigger_token: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishRespModel/is_webhook_auto_reg_supported`.
            public var is_webhook_auto_reg_supported: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.AppFinishRespModel/status`.
            public var status: Swift.String?
            /// Creates a new `v0_period_AppFinishRespModel`.
            ///
            /// - Parameters:
            ///   - branch_name:
            ///   - build_trigger_token:
            ///   - is_webhook_auto_reg_supported:
            ///   - status:
            public init(
                branch_name: Swift.String? = nil,
                build_trigger_token: Swift.String? = nil,
                is_webhook_auto_reg_supported: Swift.Bool? = nil,
                status: Swift.String? = nil
            ) {
                self.branch_name = branch_name
                self.build_trigger_token = build_trigger_token
                self.is_webhook_auto_reg_supported = is_webhook_auto_reg_supported
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case branch_name
                case build_trigger_token
                case is_webhook_auto_reg_supported
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppListResponseModel`.
        public struct v0_period_AppListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_AppResponseItemModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppListResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.AppListResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_AppListResponseModel.pagingPayload?
            /// Creates a new `v0_period_AppListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_AppResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_AppListResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppNotificationSettingsParams`.
        public struct v0_period_AppNotificationSettingsParams: Codable, Hashable, Sendable {
            /// When should Bitrise send notifications for the users on build failure? Possible values: always, never, change
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppNotificationSettingsParams/on_failure`.
            public var on_failure: Swift.String?
            /// When should Bitrise send notifications for the users on build success? Possible values: always, never, change
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppNotificationSettingsParams/on_success`.
            public var on_success: Swift.String?
            /// Creates a new `v0_period_AppNotificationSettingsParams`.
            ///
            /// - Parameters:
            ///   - on_failure: When should Bitrise send notifications for the users on build failure? Possible values: always, never, change
            ///   - on_success: When should Bitrise send notifications for the users on build success? Possible values: always, never, change
            public init(
                on_failure: Swift.String? = nil,
                on_success: Swift.String? = nil
            ) {
                self.on_failure = on_failure
                self.on_success = on_success
            }
            public enum CodingKeys: String, CodingKey {
                case on_failure
                case on_success
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppNotificationSettingsUpdateResponse`.
        public struct v0_period_AppNotificationSettingsUpdateResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppNotificationSettingsUpdateResponse/msg`.
            public var msg: Swift.String?
            /// Creates a new `v0_period_AppNotificationSettingsUpdateResponse`.
            ///
            /// - Parameters:
            ///   - msg:
            public init(msg: Swift.String? = nil) {
                self.msg = msg
            }
            public enum CodingKeys: String, CodingKey {
                case msg
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppRespModel`.
        public struct v0_period_AppRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppRespModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppRespModel/status`.
            public var status: Swift.String?
            /// Creates a new `v0_period_AppRespModel`.
            ///
            /// - Parameters:
            ///   - slug:
            ///   - status:
            public init(
                slug: Swift.String? = nil,
                status: Swift.String? = nil
            ) {
                self.slug = slug
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case slug
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel`.
        public struct v0_period_AppResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/avatar_url`.
            public var avatar_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/is_disabled`.
            public var is_disabled: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/is_github_checks_enabled`.
            public var is_github_checks_enabled: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/is_public`.
            public var is_public: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/owner`.
            public var owner: Components.Schemas.v0_period_OwnerAccountResponseModel?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/project_type`.
            public var project_type: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/provider`.
            public var provider: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/repo_owner`.
            public var repo_owner: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/repo_slug`.
            public var repo_slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/repo_url`.
            public var repo_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/status`.
            public var status: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.AppResponseItemModel/title`.
            public var title: Swift.String?
            /// Creates a new `v0_period_AppResponseItemModel`.
            ///
            /// - Parameters:
            ///   - avatar_url:
            ///   - is_disabled:
            ///   - is_github_checks_enabled:
            ///   - is_public:
            ///   - owner:
            ///   - project_type:
            ///   - provider:
            ///   - repo_owner:
            ///   - repo_slug:
            ///   - repo_url:
            ///   - slug:
            ///   - status:
            ///   - title:
            public init(
                avatar_url: Swift.String? = nil,
                is_disabled: Swift.Bool? = nil,
                is_github_checks_enabled: Swift.Bool? = nil,
                is_public: Swift.Bool? = nil,
                owner: Components.Schemas.v0_period_OwnerAccountResponseModel? = nil,
                project_type: Swift.String? = nil,
                provider: Swift.String? = nil,
                repo_owner: Swift.String? = nil,
                repo_slug: Swift.String? = nil,
                repo_url: Swift.String? = nil,
                slug: Swift.String? = nil,
                status: Swift.Int? = nil,
                title: Swift.String? = nil
            ) {
                self.avatar_url = avatar_url
                self.is_disabled = is_disabled
                self.is_github_checks_enabled = is_github_checks_enabled
                self.is_public = is_public
                self.owner = owner
                self.project_type = project_type
                self.provider = provider
                self.repo_owner = repo_owner
                self.repo_slug = repo_slug
                self.repo_url = repo_url
                self.slug = slug
                self.status = status
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case avatar_url
                case is_disabled
                case is_github_checks_enabled
                case is_public
                case owner
                case project_type
                case provider
                case repo_owner
                case repo_slug
                case repo_url
                case slug
                case status
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppSecret`.
        public struct v0_period_AppSecret: Codable, Hashable, Sendable {
            /// Replace variable in inputs? https://devcenter.bitrise.io/en/references/steps-reference/step-inputs-reference.html#step-input-properties
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppSecret/expand_in_step_inputs`.
            public var expand_in_step_inputs: Swift.Bool?
            /// Expose for Pull Requests?
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppSecret/is_exposed_for_pull_requests`.
            public var is_exposed_for_pull_requests: Swift.Bool?
            /// Secret marked as protected?
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppSecret/is_protected`.
            public var is_protected: Swift.Bool?
            /// Name of the secret
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppSecret/name`.
            public var name: Swift.String?
            /// Scope of the secret (workspace or app or nothing)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppSecret/scope`.
            public var scope: Swift.String?
            /// Creates a new `v0_period_AppSecret`.
            ///
            /// - Parameters:
            ///   - expand_in_step_inputs: Replace variable in inputs? https://devcenter.bitrise.io/en/references/steps-reference/step-inputs-reference.html#step-input-properties
            ///   - is_exposed_for_pull_requests: Expose for Pull Requests?
            ///   - is_protected: Secret marked as protected?
            ///   - name: Name of the secret
            ///   - scope: Scope of the secret (workspace or app or nothing)
            public init(
                expand_in_step_inputs: Swift.Bool? = nil,
                is_exposed_for_pull_requests: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                name: Swift.String? = nil,
                scope: Swift.String? = nil
            ) {
                self.expand_in_step_inputs = expand_in_step_inputs
                self.is_exposed_for_pull_requests = is_exposed_for_pull_requests
                self.is_protected = is_protected
                self.name = name
                self.scope = scope
            }
            public enum CodingKeys: String, CodingKey {
                case expand_in_step_inputs
                case is_exposed_for_pull_requests
                case is_protected
                case name
                case scope
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppSecretGetValueResponse`.
        public struct v0_period_AppSecretGetValueResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppSecretGetValueResponse/value`.
            public var value: Swift.String?
            /// Creates a new `v0_period_AppSecretGetValueResponse`.
            ///
            /// - Parameters:
            ///   - value:
            public init(value: Swift.String? = nil) {
                self.value = value
            }
            public enum CodingKeys: String, CodingKey {
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppSecretListResponse`.
        public struct v0_period_AppSecretListResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppSecretListResponse/secrets`.
            public var secrets: [Components.Schemas.v0_period_AppSecret]?
            /// Creates a new `v0_period_AppSecretListResponse`.
            ///
            /// - Parameters:
            ///   - secrets:
            public init(secrets: [Components.Schemas.v0_period_AppSecret]? = nil) {
                self.secrets = secrets
            }
            public enum CodingKeys: String, CodingKey {
                case secrets
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppSecretUpsertParams`.
        public struct v0_period_AppSecretUpsertParams: Codable, Hashable, Sendable {
            /// Replace variable in inputs? https://devcenter.bitrise.io/en/references/steps-reference/step-inputs-reference.html#step-input-properties
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppSecretUpsertParams/expand_in_step_inputs`.
            public var expand_in_step_inputs: Swift.Bool?
            /// Expose for Pull Requests?
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppSecretUpsertParams/is_exposed_for_pull_requests`.
            public var is_exposed_for_pull_requests: Swift.Bool?
            /// Secret marked as protected?
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppSecretUpsertParams/is_protected`.
            public var is_protected: Swift.Bool?
            /// Value of the secret
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppSecretUpsertParams/value`.
            public var value: Swift.String?
            /// Creates a new `v0_period_AppSecretUpsertParams`.
            ///
            /// - Parameters:
            ///   - expand_in_step_inputs: Replace variable in inputs? https://devcenter.bitrise.io/en/references/steps-reference/step-inputs-reference.html#step-input-properties
            ///   - is_exposed_for_pull_requests: Expose for Pull Requests?
            ///   - is_protected: Secret marked as protected?
            ///   - value: Value of the secret
            public init(
                expand_in_step_inputs: Swift.Bool? = nil,
                is_exposed_for_pull_requests: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                value: Swift.String? = nil
            ) {
                self.expand_in_step_inputs = expand_in_step_inputs
                self.is_exposed_for_pull_requests = is_exposed_for_pull_requests
                self.is_protected = is_protected
                self.value = value
            }
            public enum CodingKeys: String, CodingKey {
                case expand_in_step_inputs
                case is_exposed_for_pull_requests
                case is_protected
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppShowResponseModel`.
        public struct v0_period_AppShowResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppShowResponseModel/data`.
            public var data: Components.Schemas.v0_period_AppResponseItemModel?
            /// Creates a new `v0_period_AppShowResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_AppResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppUpdateParams`.
        public struct v0_period_AppUpdateParams: Codable, Hashable, Sendable {
            /// The new apple credential user ID (recommendation: use the UI to set this)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUpdateParams/apple_credential_user_id`.
            public var apple_credential_user_id: Swift.Int?
            /// The new apple credential user slug (recommendation: use the UI to set this)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUpdateParams/apple_credential_user_slug`.
            public var apple_credential_user_slug: Swift.String?
            /// The new default branch for the application.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUpdateParams/default_branch`.
            public var default_branch: Swift.String?
            /// The new value of whether an application should be publicly visible
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUpdateParams/is_public`.
            public var is_public: Swift.Bool?
            /// The new repository URL for the application.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUpdateParams/repository_url`.
            public var repository_url: Swift.String?
            /// The new service credential user ID (recommendation: use the UI to set this)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUpdateParams/services_credential_user_id`.
            public var services_credential_user_id: Swift.Int?
            /// The new title of the application.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUpdateParams/title`.
            public var title: Swift.String?
            /// Creates a new `v0_period_AppUpdateParams`.
            ///
            /// - Parameters:
            ///   - apple_credential_user_id: The new apple credential user ID (recommendation: use the UI to set this)
            ///   - apple_credential_user_slug: The new apple credential user slug (recommendation: use the UI to set this)
            ///   - default_branch: The new default branch for the application.
            ///   - is_public: The new value of whether an application should be publicly visible
            ///   - repository_url: The new repository URL for the application.
            ///   - services_credential_user_id: The new service credential user ID (recommendation: use the UI to set this)
            ///   - title: The new title of the application.
            public init(
                apple_credential_user_id: Swift.Int? = nil,
                apple_credential_user_slug: Swift.String? = nil,
                default_branch: Swift.String? = nil,
                is_public: Swift.Bool? = nil,
                repository_url: Swift.String? = nil,
                services_credential_user_id: Swift.Int? = nil,
                title: Swift.String? = nil
            ) {
                self.apple_credential_user_id = apple_credential_user_id
                self.apple_credential_user_slug = apple_credential_user_slug
                self.default_branch = default_branch
                self.is_public = is_public
                self.repository_url = repository_url
                self.services_credential_user_id = services_credential_user_id
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case apple_credential_user_id
                case apple_credential_user_slug
                case default_branch
                case is_public
                case repository_url
                case services_credential_user_id
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppUpdateRespModel`.
        public struct v0_period_AppUpdateRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppUpdateRespModel/status`.
            public var status: Swift.String?
            /// Creates a new `v0_period_AppUpdateRespModel`.
            ///
            /// - Parameters:
            ///   - status:
            public init(status: Swift.String? = nil) {
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams`.
        public struct v0_period_AppUploadParams: Codable, Hashable, Sendable {
            /// The default branch of the repository. If it's not specified, it will be `master`.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/default_branch_name`.
            public var default_branch_name: Swift.String?
            /// [Deprecated] You no longer need to provide this field.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/git_owner`.
            public var git_owner: Swift.String?
            /// [Deprecated] You no longer need to provide this field.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/git_repo_slug`.
            public var git_repo_slug: Swift.String?
            /// If `true` then the repository visibility setting will be public, in case of `false` it will be private
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/is_public`.
            public var is_public: Swift.Bool
            /// Toggles whether manual approval should be enabled for the app's builds. If it's not specified, it will be `true`.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/manual_approval_enabled`.
            public var manual_approval_enabled: Swift.Bool?
            /// The slug of the organization, who will be the owner of the application. If it's not specified, then the authenticated user will be the owner.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/organization_slug`.
            public var organization_slug: Swift.String?
            /// The git provider you are using, it can be `github`, `bitbucket`, `gitlab`, `gitlab-self-hosted` or `custom`
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/provider`.
            public var provider: Swift.String?
            /// The URL of your repository
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/repo_url`.
            public var repo_url: Swift.String
            /// The title of the application. If it's not specified, it will be the git repository's name.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/title`.
            public var title: Swift.String?
            /// [Deprecated] You no longer need to provide this field.
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppUploadParams/type`.
            public var _type: Swift.String?
            /// Creates a new `v0_period_AppUploadParams`.
            ///
            /// - Parameters:
            ///   - default_branch_name: The default branch of the repository. If it's not specified, it will be `master`.
            ///   - git_owner: [Deprecated] You no longer need to provide this field.
            ///   - git_repo_slug: [Deprecated] You no longer need to provide this field.
            ///   - is_public: If `true` then the repository visibility setting will be public, in case of `false` it will be private
            ///   - manual_approval_enabled: Toggles whether manual approval should be enabled for the app's builds. If it's not specified, it will be `true`.
            ///   - organization_slug: The slug of the organization, who will be the owner of the application. If it's not specified, then the authenticated user will be the owner.
            ///   - provider: The git provider you are using, it can be `github`, `bitbucket`, `gitlab`, `gitlab-self-hosted` or `custom`
            ///   - repo_url: The URL of your repository
            ///   - title: The title of the application. If it's not specified, it will be the git repository's name.
            ///   - _type: [Deprecated] You no longer need to provide this field.
            public init(
                default_branch_name: Swift.String? = nil,
                git_owner: Swift.String? = nil,
                git_repo_slug: Swift.String? = nil,
                is_public: Swift.Bool,
                manual_approval_enabled: Swift.Bool? = nil,
                organization_slug: Swift.String? = nil,
                provider: Swift.String? = nil,
                repo_url: Swift.String,
                title: Swift.String? = nil,
                _type: Swift.String? = nil
            ) {
                self.default_branch_name = default_branch_name
                self.git_owner = git_owner
                self.git_repo_slug = git_repo_slug
                self.is_public = is_public
                self.manual_approval_enabled = manual_approval_enabled
                self.organization_slug = organization_slug
                self.provider = provider
                self.repo_url = repo_url
                self.title = title
                self._type = _type
            }
            public enum CodingKeys: String, CodingKey {
                case default_branch_name
                case git_owner
                case git_repo_slug
                case is_public
                case manual_approval_enabled
                case organization_slug
                case provider
                case repo_url
                case title
                case _type = "type"
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppWebhookCreateParams`.
        public struct v0_period_AppWebhookCreateParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookCreateParams/events`.
            public var events: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookCreateParams/headers`.
            public var headers: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookCreateParams/secret`.
            public var secret: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookCreateParams/url`.
            public var url: Swift.String
            /// Creates a new `v0_period_AppWebhookCreateParams`.
            ///
            /// - Parameters:
            ///   - events:
            ///   - headers:
            ///   - secret:
            ///   - url:
            public init(
                events: [Swift.String],
                headers: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                secret: Swift.String,
                url: Swift.String
            ) {
                self.events = events
                self.headers = headers
                self.secret = secret
                self.url = url
            }
            public enum CodingKeys: String, CodingKey {
                case events
                case headers
                case secret
                case url
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppWebhookCreatedResponseModel`.
        public struct v0_period_AppWebhookCreatedResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookCreatedResponseModel/data`.
            public var data: Components.Schemas.v0_period_AppWebhookResponseItemModel?
            /// Creates a new `v0_period_AppWebhookCreatedResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_AppWebhookResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppWebhookDeletedResponseModel`.
        public struct v0_period_AppWebhookDeletedResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookDeletedResponseModel/data`.
            public var data: Components.Schemas.v0_period_AppWebhookResponseItemModel?
            /// Creates a new `v0_period_AppWebhookDeletedResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_AppWebhookResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppWebhookListResponseModel`.
        public struct v0_period_AppWebhookListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_AppWebhookResponseItemModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookListResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.AppWebhookListResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_AppWebhookListResponseModel.pagingPayload?
            /// Creates a new `v0_period_AppWebhookListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_AppWebhookResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_AppWebhookListResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseItemModel`.
        public struct v0_period_AppWebhookResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseItemModel/created_at`.
            public var created_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseItemModel/events`.
            public var events: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseItemModel/headers`.
            public var headers: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseItemModel/registered_by_addon`.
            public var registered_by_addon: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseItemModel/updated_at`.
            public var updated_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseItemModel/url`.
            public var url: Swift.String?
            /// Creates a new `v0_period_AppWebhookResponseItemModel`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - events:
            ///   - headers:
            ///   - registered_by_addon:
            ///   - slug:
            ///   - updated_at:
            ///   - url:
            public init(
                created_at: Swift.String? = nil,
                events: [Swift.String]? = nil,
                headers: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                registered_by_addon: Swift.Bool? = nil,
                slug: Swift.String? = nil,
                updated_at: Swift.String? = nil,
                url: Swift.String? = nil
            ) {
                self.created_at = created_at
                self.events = events
                self.headers = headers
                self.registered_by_addon = registered_by_addon
                self.slug = slug
                self.updated_at = updated_at
                self.url = url
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case events
                case headers
                case registered_by_addon
                case slug
                case updated_at
                case url
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseModel`.
        public struct v0_period_AppWebhookResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookResponseModel/data`.
            public var data: Components.Schemas.v0_period_AppWebhookResponseItemModel?
            /// Creates a new `v0_period_AppWebhookResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_AppWebhookResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppWebhookUpdateParams`.
        public struct v0_period_AppWebhookUpdateParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookUpdateParams/events`.
            public var events: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookUpdateParams/headers`.
            public var headers: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.AppWebhookUpdateParams/url`.
            public var url: Swift.String
            /// Creates a new `v0_period_AppWebhookUpdateParams`.
            ///
            /// - Parameters:
            ///   - events:
            ///   - headers:
            ///   - url:
            public init(
                events: [Swift.String],
                headers: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                url: Swift.String
            ) {
                self.events = events
                self.headers = headers
                self.url = url
            }
            public enum CodingKeys: String, CodingKey {
                case events
                case headers
                case url
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppleAPICredentialResponseItem`.
        public struct v0_period_AppleAPICredentialResponseItem: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppleAPICredentialResponseItem/created_at`.
            public var created_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppleAPICredentialResponseItem/issuer_id`.
            public var issuer_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppleAPICredentialResponseItem/key_id`.
            public var key_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppleAPICredentialResponseItem/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppleAPICredentialResponseItem/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.AppleAPICredentialResponseItem/updated_at`.
            public var updated_at: Swift.String?
            /// Creates a new `v0_period_AppleAPICredentialResponseItem`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - issuer_id:
            ///   - key_id:
            ///   - name:
            ///   - slug:
            ///   - updated_at:
            public init(
                created_at: Swift.String? = nil,
                issuer_id: Swift.String? = nil,
                key_id: Swift.String? = nil,
                name: Swift.String? = nil,
                slug: Swift.String? = nil,
                updated_at: Swift.String? = nil
            ) {
                self.created_at = created_at
                self.issuer_id = issuer_id
                self.key_id = key_id
                self.name = name
                self.slug = slug
                self.updated_at = updated_at
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case issuer_id
                case key_id
                case name
                case slug
                case updated_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.AppleAPICredentialsListResponse`.
        public struct v0_period_AppleAPICredentialsListResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.AppleAPICredentialsListResponse/data`.
            public var data: [Components.Schemas.v0_period_AppleAPICredentialResponseItem]?
            /// Creates a new `v0_period_AppleAPICredentialsListResponse`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: [Components.Schemas.v0_period_AppleAPICredentialResponseItem]? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact`.
        public struct v0_period_ArchivedBuildArtifact: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact/artifact_meta`.
            public struct artifact_metaPayload: Codable, Hashable, Sendable {
                /// A container of undocumented properties.
                public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                /// Creates a new `artifact_metaPayload`.
                ///
                /// - Parameters:
                ///   - additionalProperties: A container of undocumented properties.
                public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                    self.additionalProperties = additionalProperties
                }
                public init(from decoder: any Decoder) throws {
                    additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                }
                public func encode(to encoder: any Encoder) throws {
                    try encoder.encodeAdditionalProperties(additionalProperties)
                }
            }
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact/artifact_meta`.
            public var artifact_meta: Components.Schemas.v0_period_ArchivedBuildArtifact.artifact_metaPayload?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact/artifact_type`.
            public var artifact_type: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact/created_at`.
            public var created_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact/file_size_bytes`.
            public var file_size_bytes: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact/is_public_page_enabled`.
            public var is_public_page_enabled: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact/public_page_token`.
            public var public_page_token: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildArtifact/title`.
            public var title: Swift.String?
            /// Creates a new `v0_period_ArchivedBuildArtifact`.
            ///
            /// - Parameters:
            ///   - artifact_meta:
            ///   - artifact_type:
            ///   - created_at:
            ///   - file_size_bytes:
            ///   - id:
            ///   - is_public_page_enabled:
            ///   - public_page_token:
            ///   - title:
            public init(
                artifact_meta: Components.Schemas.v0_period_ArchivedBuildArtifact.artifact_metaPayload? = nil,
                artifact_type: Swift.String? = nil,
                created_at: Swift.String? = nil,
                file_size_bytes: Swift.Int? = nil,
                id: Swift.String? = nil,
                is_public_page_enabled: Swift.Bool? = nil,
                public_page_token: Swift.String? = nil,
                title: Swift.String? = nil
            ) {
                self.artifact_meta = artifact_meta
                self.artifact_type = artifact_type
                self.created_at = created_at
                self.file_size_bytes = file_size_bytes
                self.id = id
                self.is_public_page_enabled = is_public_page_enabled
                self.public_page_token = public_page_token
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case artifact_meta
                case artifact_type
                case created_at
                case file_size_bytes
                case id
                case is_public_page_enabled
                case public_page_token
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildListResponseModel`.
        public struct v0_period_ArchivedBuildListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_ArchivedBuildResponseItemModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildListResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildListResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_ArchivedBuildListResponseModel.pagingPayload?
            /// Creates a new `v0_period_ArchivedBuildListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_ArchivedBuildResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_ArchivedBuildListResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel`.
        public struct v0_period_ArchivedBuildResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/abort_reason`.
            public var abort_reason: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/branch`.
            public var branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/build_artifacts`.
            public var build_artifacts: [Components.Schemas.v0_period_ArchivedBuildArtifact]?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/build_number`.
            public var build_number: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/commit_hash`.
            public var commit_hash: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/commit_message`.
            public var commit_message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/credit_cost`.
            public var credit_cost: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/finished_at`.
            public var finished_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/machine_type_id`.
            public var machine_type_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/original_build_params`.
            public var original_build_params: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/pipeline_workflow_id`.
            public var pipeline_workflow_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/pull_request_id`.
            public var pull_request_id: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/pull_request_target_branch`.
            public var pull_request_target_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/pull_request_view_url`.
            public var pull_request_view_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/stack_identifier`.
            public var stack_identifier: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/started_on_worker_at`.
            public var started_on_worker_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/status`.
            public var status: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/status_text`.
            public var status_text: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/tag`.
            public var tag: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/triggered_by`.
            public var triggered_by: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArchivedBuildResponseItemModel/triggered_workflow`.
            public var triggered_workflow: Swift.String?
            /// Creates a new `v0_period_ArchivedBuildResponseItemModel`.
            ///
            /// - Parameters:
            ///   - abort_reason:
            ///   - branch:
            ///   - build_artifacts:
            ///   - build_number:
            ///   - commit_hash:
            ///   - commit_message:
            ///   - credit_cost:
            ///   - finished_at:
            ///   - machine_type_id:
            ///   - original_build_params:
            ///   - pipeline_workflow_id:
            ///   - pull_request_id:
            ///   - pull_request_target_branch:
            ///   - pull_request_view_url:
            ///   - slug:
            ///   - stack_identifier:
            ///   - started_on_worker_at:
            ///   - status:
            ///   - status_text:
            ///   - tag:
            ///   - triggered_by:
            ///   - triggered_workflow:
            public init(
                abort_reason: Swift.String? = nil,
                branch: Swift.String? = nil,
                build_artifacts: [Components.Schemas.v0_period_ArchivedBuildArtifact]? = nil,
                build_number: Swift.Int? = nil,
                commit_hash: Swift.String? = nil,
                commit_message: Swift.String? = nil,
                credit_cost: Swift.Int? = nil,
                finished_at: Swift.String? = nil,
                machine_type_id: Swift.String? = nil,
                original_build_params: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                pipeline_workflow_id: Swift.String? = nil,
                pull_request_id: Swift.Int? = nil,
                pull_request_target_branch: Swift.String? = nil,
                pull_request_view_url: Swift.String? = nil,
                slug: Swift.String? = nil,
                stack_identifier: Swift.String? = nil,
                started_on_worker_at: Swift.String? = nil,
                status: Swift.Int? = nil,
                status_text: Swift.String? = nil,
                tag: Swift.String? = nil,
                triggered_by: Swift.String? = nil,
                triggered_workflow: Swift.String? = nil
            ) {
                self.abort_reason = abort_reason
                self.branch = branch
                self.build_artifacts = build_artifacts
                self.build_number = build_number
                self.commit_hash = commit_hash
                self.commit_message = commit_message
                self.credit_cost = credit_cost
                self.finished_at = finished_at
                self.machine_type_id = machine_type_id
                self.original_build_params = original_build_params
                self.pipeline_workflow_id = pipeline_workflow_id
                self.pull_request_id = pull_request_id
                self.pull_request_target_branch = pull_request_target_branch
                self.pull_request_view_url = pull_request_view_url
                self.slug = slug
                self.stack_identifier = stack_identifier
                self.started_on_worker_at = started_on_worker_at
                self.status = status
                self.status_text = status_text
                self.tag = tag
                self.triggered_by = triggered_by
                self.triggered_workflow = triggered_workflow
            }
            public enum CodingKeys: String, CodingKey {
                case abort_reason
                case branch
                case build_artifacts
                case build_number
                case commit_hash
                case commit_message
                case credit_cost
                case finished_at
                case machine_type_id
                case original_build_params
                case pipeline_workflow_id
                case pull_request_id
                case pull_request_target_branch
                case pull_request_view_url
                case slug
                case stack_identifier
                case started_on_worker_at
                case status
                case status_text
                case tag
                case triggered_by
                case triggered_workflow
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ArtifactDeleteResponseModel`.
        public struct v0_period_ArtifactDeleteResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactDeleteResponseModel/data`.
            public var data: Components.Schemas.v0_period_ArtifactResponseItemModel?
            /// Creates a new `v0_period_ArtifactDeleteResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_ArtifactResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ArtifactListElementResponseModel`.
        public struct v0_period_ArtifactListElementResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListElementResponseModel/artifact_meta`.
            public var artifact_meta: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListElementResponseModel/artifact_type`.
            public var artifact_type: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListElementResponseModel/file_size_bytes`.
            public var file_size_bytes: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListElementResponseModel/intermediate_file_info`.
            public var intermediate_file_info: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListElementResponseModel/is_public_page_enabled`.
            public var is_public_page_enabled: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListElementResponseModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListElementResponseModel/title`.
            public var title: Swift.String?
            /// Creates a new `v0_period_ArtifactListElementResponseModel`.
            ///
            /// - Parameters:
            ///   - artifact_meta:
            ///   - artifact_type:
            ///   - file_size_bytes:
            ///   - intermediate_file_info:
            ///   - is_public_page_enabled:
            ///   - slug:
            ///   - title:
            public init(
                artifact_meta: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                artifact_type: Swift.String? = nil,
                file_size_bytes: Swift.Int? = nil,
                intermediate_file_info: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                is_public_page_enabled: Swift.Bool? = nil,
                slug: Swift.String? = nil,
                title: Swift.String? = nil
            ) {
                self.artifact_meta = artifact_meta
                self.artifact_type = artifact_type
                self.file_size_bytes = file_size_bytes
                self.intermediate_file_info = intermediate_file_info
                self.is_public_page_enabled = is_public_page_enabled
                self.slug = slug
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case artifact_meta
                case artifact_type
                case file_size_bytes
                case intermediate_file_info
                case is_public_page_enabled
                case slug
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ArtifactListResponseModel`.
        public struct v0_period_ArtifactListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_ArtifactListElementResponseModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.ArtifactListResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_ArtifactListResponseModel.pagingPayload?
            /// Creates a new `v0_period_ArtifactListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_ArtifactListElementResponseModel]? = nil,
                paging: Components.Schemas.v0_period_ArtifactListResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel`.
        public struct v0_period_ArtifactResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel/artifact_meta`.
            public var artifact_meta: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel/artifact_type`.
            public var artifact_type: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel/expiring_download_url`.
            public var expiring_download_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel/file_size_bytes`.
            public var file_size_bytes: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel/intermediate_file_info`.
            public var intermediate_file_info: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel/is_public_page_enabled`.
            public var is_public_page_enabled: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel/public_install_page_url`.
            public var public_install_page_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactResponseItemModel/title`.
            public var title: Swift.String?
            /// Creates a new `v0_period_ArtifactResponseItemModel`.
            ///
            /// - Parameters:
            ///   - artifact_meta:
            ///   - artifact_type:
            ///   - expiring_download_url:
            ///   - file_size_bytes:
            ///   - intermediate_file_info:
            ///   - is_public_page_enabled:
            ///   - public_install_page_url:
            ///   - slug:
            ///   - title:
            public init(
                artifact_meta: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                artifact_type: Swift.String? = nil,
                expiring_download_url: Swift.String? = nil,
                file_size_bytes: Swift.Int? = nil,
                intermediate_file_info: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                is_public_page_enabled: Swift.Bool? = nil,
                public_install_page_url: Swift.String? = nil,
                slug: Swift.String? = nil,
                title: Swift.String? = nil
            ) {
                self.artifact_meta = artifact_meta
                self.artifact_type = artifact_type
                self.expiring_download_url = expiring_download_url
                self.file_size_bytes = file_size_bytes
                self.intermediate_file_info = intermediate_file_info
                self.is_public_page_enabled = is_public_page_enabled
                self.public_install_page_url = public_install_page_url
                self.slug = slug
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case artifact_meta
                case artifact_type
                case expiring_download_url
                case file_size_bytes
                case intermediate_file_info
                case is_public_page_enabled
                case public_install_page_url
                case slug
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ArtifactShowResponseModel`.
        public struct v0_period_ArtifactShowResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactShowResponseModel/data`.
            public var data: Components.Schemas.v0_period_ArtifactResponseItemModel?
            /// Creates a new `v0_period_ArtifactShowResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_ArtifactResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ArtifactUpdateParams`.
        public struct v0_period_ArtifactUpdateParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ArtifactUpdateParams/is_public_page_enabled`.
            public var is_public_page_enabled: Swift.Bool
            /// Creates a new `v0_period_ArtifactUpdateParams`.
            ///
            /// - Parameters:
            ///   - is_public_page_enabled:
            public init(is_public_page_enabled: Swift.Bool) {
                self.is_public_page_enabled = is_public_page_enabled
            }
            public enum CodingKeys: String, CodingKey {
                case is_public_page_enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BitriseYMLConfigGetResponse`.
        public struct v0_period_BitriseYMLConfigGetResponse: Codable, Hashable, Sendable {
            /// Location of bitrise.yml file. Enums(bitrise.io, repository)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BitriseYMLConfigGetResponse/location`.
            public struct locationPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.BitriseYMLConfigGetResponse/location/value1`.
                public var value1: Components.Schemas.website_period_BitriseYMLLocation
                /// Creates a new `locationPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.website_period_BitriseYMLLocation) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                public func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// Location of bitrise.yml file. Enums(bitrise.io, repository)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BitriseYMLConfigGetResponse/location`.
            public var location: Components.Schemas.v0_period_BitriseYMLConfigGetResponse.locationPayload?
            /// Creates a new `v0_period_BitriseYMLConfigGetResponse`.
            ///
            /// - Parameters:
            ///   - location: Location of bitrise.yml file. Enums(bitrise.io, repository)
            public init(location: Components.Schemas.v0_period_BitriseYMLConfigGetResponse.locationPayload? = nil) {
                self.location = location
            }
            public enum CodingKeys: String, CodingKey {
                case location
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BitriseYMLConfigUpdateParams`.
        public struct v0_period_BitriseYMLConfigUpdateParams: Codable, Hashable, Sendable {
            /// Location of bitrise.yml file. Enums(bitrise.io, repository)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BitriseYMLConfigUpdateParams/location`.
            public struct locationPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.BitriseYMLConfigUpdateParams/location/value1`.
                public var value1: Components.Schemas.website_period_BitriseYMLLocation
                /// Creates a new `locationPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.website_period_BitriseYMLLocation) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try decoder.decodeFromSingleValueContainer()
                }
                public func encode(to encoder: any Encoder) throws {
                    try encoder.encodeToSingleValueContainer(value1)
                }
            }
            /// Location of bitrise.yml file. Enums(bitrise.io, repository)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BitriseYMLConfigUpdateParams/location`.
            public var location: Components.Schemas.v0_period_BitriseYMLConfigUpdateParams.locationPayload?
            /// Creates a new `v0_period_BitriseYMLConfigUpdateParams`.
            ///
            /// - Parameters:
            ///   - location: Location of bitrise.yml file. Enums(bitrise.io, repository)
            public init(location: Components.Schemas.v0_period_BitriseYMLConfigUpdateParams.locationPayload? = nil) {
                self.location = location
            }
            public enum CodingKeys: String, CodingKey {
                case location
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BranchListResponseModel`.
        public struct v0_period_BranchListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BranchListResponseModel/data`.
            public var data: [Swift.String]?
            /// Creates a new `v0_period_BranchListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: [Swift.String]? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildAbortParams`.
        public struct v0_period_BuildAbortParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildAbortParams/abort_reason`.
            public var abort_reason: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.BuildAbortParams/abort_with_success`.
            public var abort_with_success: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/v0.BuildAbortParams/skip_notifications`.
            public var skip_notifications: Swift.Bool
            /// Creates a new `v0_period_BuildAbortParams`.
            ///
            /// - Parameters:
            ///   - abort_reason:
            ///   - abort_with_success:
            ///   - skip_notifications:
            public init(
                abort_reason: Swift.String,
                abort_with_success: Swift.Bool,
                skip_notifications: Swift.Bool
            ) {
                self.abort_reason = abort_reason
                self.abort_with_success = abort_with_success
                self.skip_notifications = skip_notifications
            }
            public enum CodingKeys: String, CodingKey {
                case abort_reason
                case abort_with_success
                case skip_notifications
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildAbortResponseModel`.
        public struct v0_period_BuildAbortResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildAbortResponseModel/status`.
            public var status: Swift.String?
            /// Creates a new `v0_period_BuildAbortResponseModel`.
            ///
            /// - Parameters:
            ///   - status:
            public init(status: Swift.String? = nil) {
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateListResponseModel`.
        public struct v0_period_BuildCertificateListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_BuildCertificateResponseItemModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateListResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateListResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_BuildCertificateListResponseModel.pagingPayload?
            /// Creates a new `v0_period_BuildCertificateListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_BuildCertificateResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_BuildCertificateListResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel`.
        public struct v0_period_BuildCertificateResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel/certificate_password`.
            public var certificate_password: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel/download_url`.
            public var download_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel/is_expose`.
            public var is_expose: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel/is_protected`.
            public var is_protected: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel/processed`.
            public var processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel/upload_file_name`.
            public var upload_file_name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel/upload_file_size`.
            public var upload_file_size: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseItemModel/upload_url`.
            public var upload_url: Swift.String?
            /// Creates a new `v0_period_BuildCertificateResponseItemModel`.
            ///
            /// - Parameters:
            ///   - certificate_password:
            ///   - download_url:
            ///   - is_expose:
            ///   - is_protected:
            ///   - processed:
            ///   - slug:
            ///   - upload_file_name:
            ///   - upload_file_size:
            ///   - upload_url:
            public init(
                certificate_password: Swift.String? = nil,
                download_url: Swift.String? = nil,
                is_expose: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                processed: Swift.Bool? = nil,
                slug: Swift.String? = nil,
                upload_file_name: Swift.String? = nil,
                upload_file_size: Swift.Int? = nil,
                upload_url: Swift.String? = nil
            ) {
                self.certificate_password = certificate_password
                self.download_url = download_url
                self.is_expose = is_expose
                self.is_protected = is_protected
                self.processed = processed
                self.slug = slug
                self.upload_file_name = upload_file_name
                self.upload_file_size = upload_file_size
                self.upload_url = upload_url
            }
            public enum CodingKeys: String, CodingKey {
                case certificate_password
                case download_url
                case is_expose
                case is_protected
                case processed
                case slug
                case upload_file_name
                case upload_file_size
                case upload_url
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseModel`.
        public struct v0_period_BuildCertificateResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateResponseModel/data`.
            public var data: Components.Schemas.v0_period_BuildCertificateResponseItemModel?
            /// Creates a new `v0_period_BuildCertificateResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_BuildCertificateResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateUpdateParams`.
        public struct v0_period_BuildCertificateUpdateParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateUpdateParams/certificate_password`.
            public var certificate_password: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateUpdateParams/is_expose`.
            public var is_expose: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateUpdateParams/is_protected`.
            public var is_protected: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateUpdateParams/processed`.
            public var processed: Swift.Bool?
            /// Creates a new `v0_period_BuildCertificateUpdateParams`.
            ///
            /// - Parameters:
            ///   - certificate_password:
            ///   - is_expose:
            ///   - is_protected:
            ///   - processed:
            public init(
                certificate_password: Swift.String? = nil,
                is_expose: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                processed: Swift.Bool? = nil
            ) {
                self.certificate_password = certificate_password
                self.is_expose = is_expose
                self.is_protected = is_protected
                self.processed = processed
            }
            public enum CodingKeys: String, CodingKey {
                case certificate_password
                case is_expose
                case is_protected
                case processed
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateUploadParams`.
        public struct v0_period_BuildCertificateUploadParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateUploadParams/upload_file_name`.
            public var upload_file_name: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.BuildCertificateUploadParams/upload_file_size`.
            public var upload_file_size: Swift.Int
            /// Creates a new `v0_period_BuildCertificateUploadParams`.
            ///
            /// - Parameters:
            ///   - upload_file_name:
            ///   - upload_file_size:
            public init(
                upload_file_name: Swift.String,
                upload_file_size: Swift.Int
            ) {
                self.upload_file_name = upload_file_name
                self.upload_file_size = upload_file_size
            }
            public enum CodingKeys: String, CodingKey {
                case upload_file_name
                case upload_file_size
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel`.
        public struct v0_period_BuildListAllResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/abort_reason`.
            public var abort_reason: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/branch`.
            public var branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/build_number`.
            public var build_number: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/commit_hash`.
            public var commit_hash: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/commit_message`.
            public var commit_message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/commit_view_url`.
            public var commit_view_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/credit_cost`.
            public var credit_cost: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/environment_prepare_finished_at`.
            public var environment_prepare_finished_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/finished_at`.
            public var finished_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/is_on_hold`.
            public var is_on_hold: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/is_processed`.
            public var is_processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/machine_type_id`.
            public var machine_type_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/original_build_params`.
            public var original_build_params: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/pull_request_id`.
            public var pull_request_id: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/pull_request_target_branch`.
            public var pull_request_target_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/pull_request_view_url`.
            public var pull_request_view_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/repository`.
            public var repository: Components.Schemas.v0_period_AppResponseItemModel?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/stack_identifier`.
            public var stack_identifier: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/started_on_worker_at`.
            public var started_on_worker_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/status`.
            public var status: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/status_text`.
            public var status_text: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/tag`.
            public var tag: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/triggered_at`.
            public var triggered_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/triggered_by`.
            public var triggered_by: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseItemModel/triggered_workflow`.
            public var triggered_workflow: Swift.String?
            /// Creates a new `v0_period_BuildListAllResponseItemModel`.
            ///
            /// - Parameters:
            ///   - abort_reason:
            ///   - branch:
            ///   - build_number:
            ///   - commit_hash:
            ///   - commit_message:
            ///   - commit_view_url:
            ///   - credit_cost:
            ///   - environment_prepare_finished_at:
            ///   - finished_at:
            ///   - is_on_hold:
            ///   - is_processed:
            ///   - machine_type_id:
            ///   - original_build_params:
            ///   - pull_request_id:
            ///   - pull_request_target_branch:
            ///   - pull_request_view_url:
            ///   - repository:
            ///   - slug:
            ///   - stack_identifier:
            ///   - started_on_worker_at:
            ///   - status:
            ///   - status_text:
            ///   - tag:
            ///   - triggered_at:
            ///   - triggered_by:
            ///   - triggered_workflow:
            public init(
                abort_reason: Swift.String? = nil,
                branch: Swift.String? = nil,
                build_number: Swift.Int? = nil,
                commit_hash: Swift.String? = nil,
                commit_message: Swift.String? = nil,
                commit_view_url: Swift.String? = nil,
                credit_cost: Swift.Int? = nil,
                environment_prepare_finished_at: Swift.String? = nil,
                finished_at: Swift.String? = nil,
                is_on_hold: Swift.Bool? = nil,
                is_processed: Swift.Bool? = nil,
                machine_type_id: Swift.String? = nil,
                original_build_params: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                pull_request_id: Swift.Int? = nil,
                pull_request_target_branch: Swift.String? = nil,
                pull_request_view_url: Swift.String? = nil,
                repository: Components.Schemas.v0_period_AppResponseItemModel? = nil,
                slug: Swift.String? = nil,
                stack_identifier: Swift.String? = nil,
                started_on_worker_at: Swift.String? = nil,
                status: Swift.Int? = nil,
                status_text: Swift.String? = nil,
                tag: Swift.String? = nil,
                triggered_at: Swift.String? = nil,
                triggered_by: Swift.String? = nil,
                triggered_workflow: Swift.String? = nil
            ) {
                self.abort_reason = abort_reason
                self.branch = branch
                self.build_number = build_number
                self.commit_hash = commit_hash
                self.commit_message = commit_message
                self.commit_view_url = commit_view_url
                self.credit_cost = credit_cost
                self.environment_prepare_finished_at = environment_prepare_finished_at
                self.finished_at = finished_at
                self.is_on_hold = is_on_hold
                self.is_processed = is_processed
                self.machine_type_id = machine_type_id
                self.original_build_params = original_build_params
                self.pull_request_id = pull_request_id
                self.pull_request_target_branch = pull_request_target_branch
                self.pull_request_view_url = pull_request_view_url
                self.repository = repository
                self.slug = slug
                self.stack_identifier = stack_identifier
                self.started_on_worker_at = started_on_worker_at
                self.status = status
                self.status_text = status_text
                self.tag = tag
                self.triggered_at = triggered_at
                self.triggered_by = triggered_by
                self.triggered_workflow = triggered_workflow
            }
            public enum CodingKeys: String, CodingKey {
                case abort_reason
                case branch
                case build_number
                case commit_hash
                case commit_message
                case commit_view_url
                case credit_cost
                case environment_prepare_finished_at
                case finished_at
                case is_on_hold
                case is_processed
                case machine_type_id
                case original_build_params
                case pull_request_id
                case pull_request_target_branch
                case pull_request_view_url
                case repository
                case slug
                case stack_identifier
                case started_on_worker_at
                case status
                case status_text
                case tag
                case triggered_at
                case triggered_by
                case triggered_workflow
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseModel`.
        public struct v0_period_BuildListAllResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseModel/data`.
            public var data: [Components.Schemas.v0_period_BuildListAllResponseItemModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BuildListAllResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_BuildListAllResponseModel.pagingPayload?
            /// Creates a new `v0_period_BuildListAllResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_BuildListAllResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_BuildListAllResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildListResponseModel`.
        public struct v0_period_BuildListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_BuildResponseItemModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BuildListResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.BuildListResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BuildListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_BuildListResponseModel.pagingPayload?
            /// Creates a new `v0_period_BuildListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_BuildResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_BuildListResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildParamsEnvironment`.
        public struct v0_period_BuildParamsEnvironment: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildParamsEnvironment/is_expand`.
            public var is_expand: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildParamsEnvironment/mapped_to`.
            public var mapped_to: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildParamsEnvironment/value`.
            public var value: Swift.String?
            /// Creates a new `v0_period_BuildParamsEnvironment`.
            ///
            /// - Parameters:
            ///   - is_expand:
            ///   - mapped_to:
            ///   - value:
            public init(
                is_expand: Swift.Bool? = nil,
                mapped_to: Swift.String? = nil,
                value: Swift.String? = nil
            ) {
                self.is_expand = is_expand
                self.mapped_to = mapped_to
                self.value = value
            }
            public enum CodingKeys: String, CodingKey {
                case is_expand
                case mapped_to
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildRequestListResponseModel`.
        public struct v0_period_BuildRequestListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildRequestListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_BuildRequestResponseItemModel]?
            /// Creates a new `v0_period_BuildRequestListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: [Components.Schemas.v0_period_BuildRequestResponseItemModel]? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildRequestResponseItemModel`.
        public struct v0_period_BuildRequestResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildRequestResponseItemModel/build_params`.
            public var build_params: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.BuildRequestResponseItemModel/created_at`.
            public var created_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildRequestResponseItemModel/pull_request_url`.
            public var pull_request_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildRequestResponseItemModel/slug`.
            public var slug: Swift.String?
            /// Creates a new `v0_period_BuildRequestResponseItemModel`.
            ///
            /// - Parameters:
            ///   - build_params:
            ///   - created_at:
            ///   - pull_request_url:
            ///   - slug:
            public init(
                build_params: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                created_at: Swift.String? = nil,
                pull_request_url: Swift.String? = nil,
                slug: Swift.String? = nil
            ) {
                self.build_params = build_params
                self.created_at = created_at
                self.pull_request_url = pull_request_url
                self.slug = slug
            }
            public enum CodingKeys: String, CodingKey {
                case build_params
                case created_at
                case pull_request_url
                case slug
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildRequestUpdateParams`.
        public struct v0_period_BuildRequestUpdateParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildRequestUpdateParams/is_approved`.
            public var is_approved: Swift.Bool
            /// Creates a new `v0_period_BuildRequestUpdateParams`.
            ///
            /// - Parameters:
            ///   - is_approved:
            public init(is_approved: Swift.Bool) {
                self.is_approved = is_approved
            }
            public enum CodingKeys: String, CodingKey {
                case is_approved
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildRequestUpdateResponseModel`.
        public struct v0_period_BuildRequestUpdateResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildRequestUpdateResponseModel/data`.
            public var data: Components.Schemas.v0_period_BuildRequestResponseItemModel?
            /// Creates a new `v0_period_BuildRequestUpdateResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_BuildRequestResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel`.
        public struct v0_period_BuildResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/abort_reason`.
            public var abort_reason: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/branch`.
            public var branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/build_number`.
            public var build_number: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/commit_hash`.
            public var commit_hash: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/commit_message`.
            public var commit_message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/commit_view_url`.
            public var commit_view_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/credit_cost`.
            public var credit_cost: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/environment_prepare_finished_at`.
            public var environment_prepare_finished_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/finished_at`.
            public var finished_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/is_on_hold`.
            public var is_on_hold: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/is_processed`.
            public var is_processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/is_status_sent`.
            public var is_status_sent: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/log_format`.
            public var log_format: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/machine_type_id`.
            public var machine_type_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/original_build_params`.
            public var original_build_params: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/pipeline_workflow_id`.
            public var pipeline_workflow_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/pull_request_id`.
            public var pull_request_id: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/pull_request_target_branch`.
            public var pull_request_target_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/pull_request_view_url`.
            public var pull_request_view_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/rebuildable`.
            public var rebuildable: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/stack_identifier`.
            public var stack_identifier: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/started_on_worker_at`.
            public var started_on_worker_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/status`.
            public var status: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/status_text`.
            public var status_text: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/tag`.
            public var tag: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/triggered_at`.
            public var triggered_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/triggered_by`.
            public var triggered_by: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildResponseItemModel/triggered_workflow`.
            public var triggered_workflow: Swift.String?
            /// Creates a new `v0_period_BuildResponseItemModel`.
            ///
            /// - Parameters:
            ///   - abort_reason:
            ///   - branch:
            ///   - build_number:
            ///   - commit_hash:
            ///   - commit_message:
            ///   - commit_view_url:
            ///   - credit_cost:
            ///   - environment_prepare_finished_at:
            ///   - finished_at:
            ///   - is_on_hold:
            ///   - is_processed:
            ///   - is_status_sent:
            ///   - log_format:
            ///   - machine_type_id:
            ///   - original_build_params:
            ///   - pipeline_workflow_id:
            ///   - pull_request_id:
            ///   - pull_request_target_branch:
            ///   - pull_request_view_url:
            ///   - rebuildable:
            ///   - slug:
            ///   - stack_identifier:
            ///   - started_on_worker_at:
            ///   - status:
            ///   - status_text:
            ///   - tag:
            ///   - triggered_at:
            ///   - triggered_by:
            ///   - triggered_workflow:
            public init(
                abort_reason: Swift.String? = nil,
                branch: Swift.String? = nil,
                build_number: Swift.Int? = nil,
                commit_hash: Swift.String? = nil,
                commit_message: Swift.String? = nil,
                commit_view_url: Swift.String? = nil,
                credit_cost: Swift.Int? = nil,
                environment_prepare_finished_at: Swift.String? = nil,
                finished_at: Swift.String? = nil,
                is_on_hold: Swift.Bool? = nil,
                is_processed: Swift.Bool? = nil,
                is_status_sent: Swift.Bool? = nil,
                log_format: Swift.String? = nil,
                machine_type_id: Swift.String? = nil,
                original_build_params: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                pipeline_workflow_id: Swift.String? = nil,
                pull_request_id: Swift.Int? = nil,
                pull_request_target_branch: Swift.String? = nil,
                pull_request_view_url: Swift.String? = nil,
                rebuildable: Swift.Bool? = nil,
                slug: Swift.String? = nil,
                stack_identifier: Swift.String? = nil,
                started_on_worker_at: Swift.String? = nil,
                status: Swift.Int? = nil,
                status_text: Swift.String? = nil,
                tag: Swift.String? = nil,
                triggered_at: Swift.String? = nil,
                triggered_by: Swift.String? = nil,
                triggered_workflow: Swift.String? = nil
            ) {
                self.abort_reason = abort_reason
                self.branch = branch
                self.build_number = build_number
                self.commit_hash = commit_hash
                self.commit_message = commit_message
                self.commit_view_url = commit_view_url
                self.credit_cost = credit_cost
                self.environment_prepare_finished_at = environment_prepare_finished_at
                self.finished_at = finished_at
                self.is_on_hold = is_on_hold
                self.is_processed = is_processed
                self.is_status_sent = is_status_sent
                self.log_format = log_format
                self.machine_type_id = machine_type_id
                self.original_build_params = original_build_params
                self.pipeline_workflow_id = pipeline_workflow_id
                self.pull_request_id = pull_request_id
                self.pull_request_target_branch = pull_request_target_branch
                self.pull_request_view_url = pull_request_view_url
                self.rebuildable = rebuildable
                self.slug = slug
                self.stack_identifier = stack_identifier
                self.started_on_worker_at = started_on_worker_at
                self.status = status
                self.status_text = status_text
                self.tag = tag
                self.triggered_at = triggered_at
                self.triggered_by = triggered_by
                self.triggered_workflow = triggered_workflow
            }
            public enum CodingKeys: String, CodingKey {
                case abort_reason
                case branch
                case build_number
                case commit_hash
                case commit_message
                case commit_view_url
                case credit_cost
                case environment_prepare_finished_at
                case finished_at
                case is_on_hold
                case is_processed
                case is_status_sent
                case log_format
                case machine_type_id
                case original_build_params
                case pipeline_workflow_id
                case pull_request_id
                case pull_request_target_branch
                case pull_request_view_url
                case rebuildable
                case slug
                case stack_identifier
                case started_on_worker_at
                case status
                case status_text
                case tag
                case triggered_at
                case triggered_by
                case triggered_workflow
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildShowResponseModel`.
        public struct v0_period_BuildShowResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildShowResponseModel/data`.
            public var data: Components.Schemas.v0_period_BuildResponseItemModel?
            /// Creates a new `v0_period_BuildShowResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_BuildResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParams`.
        public struct v0_period_BuildTriggerParams: Codable, Hashable, Sendable {
            /// The public part of the SSH key you would like to use
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParams/build_params`.
            public struct build_paramsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParams/build_params/value1`.
                public var value1: Components.Schemas.v0_period_BuildTriggerParamsBuildParams
                /// Creates a new `build_paramsPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_BuildTriggerParamsBuildParams) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// The public part of the SSH key you would like to use
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParams/build_params`.
            public var build_params: Components.Schemas.v0_period_BuildTriggerParams.build_paramsPayload?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParams/hook_info`.
            public var hook_info: Components.Schemas.v0_period_BuildTriggerParamsHookInfo?
            /// Creates a new `v0_period_BuildTriggerParams`.
            ///
            /// - Parameters:
            ///   - build_params: The public part of the SSH key you would like to use
            ///   - hook_info:
            public init(
                build_params: Components.Schemas.v0_period_BuildTriggerParams.build_paramsPayload? = nil,
                hook_info: Components.Schemas.v0_period_BuildTriggerParamsHookInfo? = nil
            ) {
                self.build_params = build_params
                self.hook_info = hook_info
            }
            public enum CodingKeys: String, CodingKey {
                case build_params
                case hook_info
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams`.
        public struct v0_period_BuildTriggerParamsBuildParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/base_repository_url`.
            public var base_repository_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/branch`.
            public var branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/branch_dest`.
            public var branch_dest: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/branch_dest_repo_owner`.
            public var branch_dest_repo_owner: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/branch_repo_owner`.
            public var branch_repo_owner: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/build_request_slug`.
            public var build_request_slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/commit_hash`.
            public var commit_hash: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/commit_message`.
            public var commit_message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/commit_paths`.
            public var commit_paths: [Components.Schemas.v0_period_CommitPaths]?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/diff_url`.
            public var diff_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/environments`.
            public var environments: [Components.Schemas.v0_period_BuildParamsEnvironment]?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/head_repository_url`.
            public var head_repository_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/pipeline_id`.
            public var pipeline_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/pull_request_author`.
            public var pull_request_author: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/pull_request_head_branch`.
            public var pull_request_head_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/pull_request_id`.
            public var pull_request_id: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/pull_request_merge_branch`.
            public var pull_request_merge_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/pull_request_repository_url`.
            public var pull_request_repository_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/pull_request_unverified_merge_branch`.
            public var pull_request_unverified_merge_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/skip_git_status_report`.
            public var skip_git_status_report: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/tag`.
            public var tag: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsBuildParams/workflow_id`.
            public var workflow_id: Swift.String?
            /// Creates a new `v0_period_BuildTriggerParamsBuildParams`.
            ///
            /// - Parameters:
            ///   - base_repository_url:
            ///   - branch:
            ///   - branch_dest:
            ///   - branch_dest_repo_owner:
            ///   - branch_repo_owner:
            ///   - build_request_slug:
            ///   - commit_hash:
            ///   - commit_message:
            ///   - commit_paths:
            ///   - diff_url:
            ///   - environments:
            ///   - head_repository_url:
            ///   - pipeline_id:
            ///   - pull_request_author:
            ///   - pull_request_head_branch:
            ///   - pull_request_id:
            ///   - pull_request_merge_branch:
            ///   - pull_request_repository_url:
            ///   - pull_request_unverified_merge_branch:
            ///   - skip_git_status_report:
            ///   - tag:
            ///   - workflow_id:
            public init(
                base_repository_url: Swift.String? = nil,
                branch: Swift.String? = nil,
                branch_dest: Swift.String? = nil,
                branch_dest_repo_owner: Swift.String? = nil,
                branch_repo_owner: Swift.String? = nil,
                build_request_slug: Swift.String? = nil,
                commit_hash: Swift.String? = nil,
                commit_message: Swift.String? = nil,
                commit_paths: [Components.Schemas.v0_period_CommitPaths]? = nil,
                diff_url: Swift.String? = nil,
                environments: [Components.Schemas.v0_period_BuildParamsEnvironment]? = nil,
                head_repository_url: Swift.String? = nil,
                pipeline_id: Swift.String? = nil,
                pull_request_author: Swift.String? = nil,
                pull_request_head_branch: Swift.String? = nil,
                pull_request_id: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                pull_request_merge_branch: Swift.String? = nil,
                pull_request_repository_url: Swift.String? = nil,
                pull_request_unverified_merge_branch: Swift.String? = nil,
                skip_git_status_report: Swift.Bool? = nil,
                tag: Swift.String? = nil,
                workflow_id: Swift.String? = nil
            ) {
                self.base_repository_url = base_repository_url
                self.branch = branch
                self.branch_dest = branch_dest
                self.branch_dest_repo_owner = branch_dest_repo_owner
                self.branch_repo_owner = branch_repo_owner
                self.build_request_slug = build_request_slug
                self.commit_hash = commit_hash
                self.commit_message = commit_message
                self.commit_paths = commit_paths
                self.diff_url = diff_url
                self.environments = environments
                self.head_repository_url = head_repository_url
                self.pipeline_id = pipeline_id
                self.pull_request_author = pull_request_author
                self.pull_request_head_branch = pull_request_head_branch
                self.pull_request_id = pull_request_id
                self.pull_request_merge_branch = pull_request_merge_branch
                self.pull_request_repository_url = pull_request_repository_url
                self.pull_request_unverified_merge_branch = pull_request_unverified_merge_branch
                self.skip_git_status_report = skip_git_status_report
                self.tag = tag
                self.workflow_id = workflow_id
            }
            public enum CodingKeys: String, CodingKey {
                case base_repository_url
                case branch
                case branch_dest
                case branch_dest_repo_owner
                case branch_repo_owner
                case build_request_slug
                case commit_hash
                case commit_message
                case commit_paths
                case diff_url
                case environments
                case head_repository_url
                case pipeline_id
                case pull_request_author
                case pull_request_head_branch
                case pull_request_id
                case pull_request_merge_branch
                case pull_request_repository_url
                case pull_request_unverified_merge_branch
                case skip_git_status_report
                case tag
                case workflow_id
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsHookInfo`.
        public struct v0_period_BuildTriggerParamsHookInfo: Codable, Hashable, Sendable {
            /// Should be "bitrise"
            ///
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerParamsHookInfo/type`.
            public var _type: Swift.String?
            /// Creates a new `v0_period_BuildTriggerParamsHookInfo`.
            ///
            /// - Parameters:
            ///   - _type: Should be "bitrise"
            public init(_type: Swift.String? = nil) {
                self._type = _type
            }
            public enum CodingKeys: String, CodingKey {
                case _type = "type"
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerRespModel`.
        public struct v0_period_BuildTriggerRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerRespModel/build_number`.
            public var build_number: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerRespModel/build_slug`.
            public var build_slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerRespModel/build_url`.
            public var build_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerRespModel/message`.
            public var message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerRespModel/service`.
            public var service: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerRespModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerRespModel/status`.
            public var status: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.BuildTriggerRespModel/triggered_workflow`.
            public var triggered_workflow: Swift.String?
            /// Creates a new `v0_period_BuildTriggerRespModel`.
            ///
            /// - Parameters:
            ///   - build_number:
            ///   - build_slug:
            ///   - build_url:
            ///   - message:
            ///   - service:
            ///   - slug:
            ///   - status:
            ///   - triggered_workflow:
            public init(
                build_number: Swift.Int? = nil,
                build_slug: Swift.String? = nil,
                build_url: Swift.String? = nil,
                message: Swift.String? = nil,
                service: Swift.String? = nil,
                slug: Swift.String? = nil,
                status: Swift.String? = nil,
                triggered_workflow: Swift.String? = nil
            ) {
                self.build_number = build_number
                self.build_slug = build_slug
                self.build_url = build_url
                self.message = message
                self.service = service
                self.slug = slug
                self.status = status
                self.triggered_workflow = triggered_workflow
            }
            public enum CodingKeys: String, CodingKey {
                case build_number
                case build_slug
                case build_url
                case message
                case service
                case slug
                case status
                case triggered_workflow
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.BuildWorkflowListResponseModel`.
        public struct v0_period_BuildWorkflowListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.BuildWorkflowListResponseModel/data`.
            public var data: [Swift.String]?
            /// Creates a new `v0_period_BuildWorkflowListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: [Swift.String]? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.CacheItemDownloadResponseModel`.
        public struct v0_period_CacheItemDownloadResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemDownloadResponseModel/data`.
            public var data: Components.Schemas.v0_period_CacheItemDownloadURLResponseModel?
            /// Creates a new `v0_period_CacheItemDownloadResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_CacheItemDownloadURLResponseModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.CacheItemDownloadURLResponseModel`.
        public struct v0_period_CacheItemDownloadURLResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemDownloadURLResponseModel/download_url`.
            public var download_url: Swift.String?
            /// Creates a new `v0_period_CacheItemDownloadURLResponseModel`.
            ///
            /// - Parameters:
            ///   - download_url:
            public init(download_url: Swift.String? = nil) {
                self.download_url = download_url
            }
            public enum CodingKeys: String, CodingKey {
                case download_url
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseItemModel`.
        public struct v0_period_CacheItemListResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseItemModel/app_id`.
            public var app_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseItemModel/archive_filename`.
            public var archive_filename: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseItemModel/archive_size`.
            public var archive_size: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseItemModel/cache_key`.
            public var cache_key: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseItemModel/created_at`.
            public var created_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseItemModel/expires_at`.
            public var expires_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseItemModel/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseItemModel/last_used_at`.
            public var last_used_at: Swift.String?
            /// Creates a new `v0_period_CacheItemListResponseItemModel`.
            ///
            /// - Parameters:
            ///   - app_id:
            ///   - archive_filename:
            ///   - archive_size:
            ///   - cache_key:
            ///   - created_at:
            ///   - expires_at:
            ///   - id:
            ///   - last_used_at:
            public init(
                app_id: Swift.String? = nil,
                archive_filename: Swift.String? = nil,
                archive_size: Swift.Int? = nil,
                cache_key: Swift.String? = nil,
                created_at: Swift.String? = nil,
                expires_at: Swift.String? = nil,
                id: Swift.String? = nil,
                last_used_at: Swift.String? = nil
            ) {
                self.app_id = app_id
                self.archive_filename = archive_filename
                self.archive_size = archive_size
                self.cache_key = cache_key
                self.created_at = created_at
                self.expires_at = expires_at
                self.id = id
                self.last_used_at = last_used_at
            }
            public enum CodingKeys: String, CodingKey {
                case app_id
                case archive_filename
                case archive_size
                case cache_key
                case created_at
                case expires_at
                case id
                case last_used_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseModel`.
        public struct v0_period_CacheItemListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_CacheItemListResponseItemModel]?
            /// - Remark: Generated from `#/components/schemas/v0.CacheItemListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_PagingResponseModel?
            /// Creates a new `v0_period_CacheItemListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging:
            public init(
                data: [Components.Schemas.v0_period_CacheItemListResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_PagingResponseModel? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.CommitPaths`.
        public struct v0_period_CommitPaths: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.CommitPaths/added`.
            public var added: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/v0.CommitPaths/modified`.
            public var modified: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/v0.CommitPaths/removed`.
            public var removed: [Swift.String]?
            /// Creates a new `v0_period_CommitPaths`.
            ///
            /// - Parameters:
            ///   - added:
            ///   - modified:
            ///   - removed:
            public init(
                added: [Swift.String]? = nil,
                modified: [Swift.String]? = nil,
                removed: [Swift.String]? = nil
            ) {
                self.added = added
                self.modified = modified
                self.removed = removed
            }
            public enum CodingKeys: String, CodingKey {
                case added
                case modified
                case removed
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.OrganizationDataModel`.
        public struct v0_period_OrganizationDataModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationDataModel/avatar_icon_url`.
            public var avatar_icon_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationDataModel/concurrency_count`.
            public var concurrency_count: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationDataModel/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationDataModel/owners`.
            public var owners: [Components.Schemas.v0_period_OrganizationOwner]?
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationDataModel/slug`.
            public var slug: Swift.String?
            /// Creates a new `v0_period_OrganizationDataModel`.
            ///
            /// - Parameters:
            ///   - avatar_icon_url:
            ///   - concurrency_count:
            ///   - name:
            ///   - owners:
            ///   - slug:
            public init(
                avatar_icon_url: Swift.String? = nil,
                concurrency_count: Swift.Int? = nil,
                name: Swift.String? = nil,
                owners: [Components.Schemas.v0_period_OrganizationOwner]? = nil,
                slug: Swift.String? = nil
            ) {
                self.avatar_icon_url = avatar_icon_url
                self.concurrency_count = concurrency_count
                self.name = name
                self.owners = owners
                self.slug = slug
            }
            public enum CodingKeys: String, CodingKey {
                case avatar_icon_url
                case concurrency_count
                case name
                case owners
                case slug
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.OrganizationListRespModel`.
        public struct v0_period_OrganizationListRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationListRespModel/data`.
            public var data: [Components.Schemas.v0_period_OrganizationDataModel]?
            /// Creates a new `v0_period_OrganizationListRespModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: [Components.Schemas.v0_period_OrganizationDataModel]? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.OrganizationOwner`.
        public struct v0_period_OrganizationOwner: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationOwner/email`.
            public var email: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationOwner/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationOwner/username`.
            public var username: Swift.String?
            /// Creates a new `v0_period_OrganizationOwner`.
            ///
            /// - Parameters:
            ///   - email:
            ///   - slug:
            ///   - username:
            public init(
                email: Swift.String? = nil,
                slug: Swift.String? = nil,
                username: Swift.String? = nil
            ) {
                self.email = email
                self.slug = slug
                self.username = username
            }
            public enum CodingKeys: String, CodingKey {
                case email
                case slug
                case username
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.OrganizationRespModel`.
        public struct v0_period_OrganizationRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationRespModel/data`.
            public var data: Components.Schemas.v0_period_OrganizationDataModel?
            /// Creates a new `v0_period_OrganizationRespModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_OrganizationDataModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeParams`.
        public struct v0_period_OrganizationUpdateMachineTypeParams: Codable, Hashable, Sendable {
            /// Machine type to migrate from
            ///
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeParams/from_machine`.
            public var from_machine: Swift.String?
            /// Machine type to migrate to
            ///
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeParams/to_machine`.
            public var to_machine: Swift.String?
            /// Creates a new `v0_period_OrganizationUpdateMachineTypeParams`.
            ///
            /// - Parameters:
            ///   - from_machine: Machine type to migrate from
            ///   - to_machine: Machine type to migrate to
            public init(
                from_machine: Swift.String? = nil,
                to_machine: Swift.String? = nil
            ) {
                self.from_machine = from_machine
                self.to_machine = to_machine
            }
            public enum CodingKeys: String, CodingKey {
                case from_machine
                case to_machine
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeResponse`.
        public struct v0_period_OrganizationUpdateMachineTypeResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeResponse/errorsPayload`.
            public struct errorsPayloadPayload: Codable, Hashable, Sendable {
                /// The apps which had an error's identifiers in the following format "#{app.title} (#{app.slug})"
                ///
                /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeResponse/errorsPayload/app`.
                public var app: Swift.String?
                /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeResponse/errorsPayload/error`.
                public var error: Swift.String?
                /// Creates a new `errorsPayloadPayload`.
                ///
                /// - Parameters:
                ///   - app: The apps which had an error's identifiers in the following format "#{app.title} (#{app.slug})"
                ///   - error:
                public init(
                    app: Swift.String? = nil,
                    error: Swift.String? = nil
                ) {
                    self.app = app
                    self.error = error
                }
                public enum CodingKeys: String, CodingKey {
                    case app
                    case error
                }
            }
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeResponse/errors`.
            public typealias errorsPayload = [Components.Schemas.v0_period_OrganizationUpdateMachineTypeResponse.errorsPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeResponse/errors`.
            public var errors: Components.Schemas.v0_period_OrganizationUpdateMachineTypeResponse.errorsPayload?
            /// The result of the migration
            ///
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeResponse/message`.
            public var message: Swift.String?
            /// The migrated apps' identifiers in the following format "#{app.title} (#{app.slug})"
            ///
            /// - Remark: Generated from `#/components/schemas/v0.OrganizationUpdateMachineTypeResponse/migrated_apps`.
            public var migrated_apps: [Swift.String]?
            /// Creates a new `v0_period_OrganizationUpdateMachineTypeResponse`.
            ///
            /// - Parameters:
            ///   - errors:
            ///   - message: The result of the migration
            ///   - migrated_apps: The migrated apps' identifiers in the following format "#{app.title} (#{app.slug})"
            public init(
                errors: Components.Schemas.v0_period_OrganizationUpdateMachineTypeResponse.errorsPayload? = nil,
                message: Swift.String? = nil,
                migrated_apps: [Swift.String]? = nil
            ) {
                self.errors = errors
                self.message = message
                self.migrated_apps = migrated_apps
            }
            public enum CodingKeys: String, CodingKey {
                case errors
                case message
                case migrated_apps
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.OwnerAccountResponseModel`.
        public struct v0_period_OwnerAccountResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAccountResponseModel/account_type`.
            public var account_type: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAccountResponseModel/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAccountResponseModel/slug`.
            public var slug: Swift.String?
            /// Creates a new `v0_period_OwnerAccountResponseModel`.
            ///
            /// - Parameters:
            ///   - account_type:
            ///   - name:
            ///   - slug:
            public init(
                account_type: Swift.String? = nil,
                name: Swift.String? = nil,
                slug: Swift.String? = nil
            ) {
                self.account_type = account_type
                self.name = name
                self.slug = slug
            }
            public enum CodingKeys: String, CodingKey {
                case account_type
                case name
                case slug
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnResponseItemModel`.
        public struct v0_period_OwnerAddOnResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnResponseItemModel/apps`.
            public var apps: [Components.Schemas.v0_period_AddOnAppResponseItemModel]?
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnResponseItemModel/documentation_url`.
            public var documentation_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnResponseItemModel/has_ui`.
            public var has_ui: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnResponseItemModel/icon`.
            public var icon: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnResponseItemModel/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnResponseItemModel/is_beta`.
            public var is_beta: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnResponseItemModel/summary`.
            public var summary: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnResponseItemModel/title`.
            public var title: Swift.String?
            /// Creates a new `v0_period_OwnerAddOnResponseItemModel`.
            ///
            /// - Parameters:
            ///   - apps:
            ///   - documentation_url:
            ///   - has_ui:
            ///   - icon:
            ///   - id:
            ///   - is_beta:
            ///   - summary:
            ///   - title:
            public init(
                apps: [Components.Schemas.v0_period_AddOnAppResponseItemModel]? = nil,
                documentation_url: Swift.String? = nil,
                has_ui: Swift.Bool? = nil,
                icon: Swift.String? = nil,
                id: Swift.String? = nil,
                is_beta: Swift.Bool? = nil,
                summary: Swift.String? = nil,
                title: Swift.String? = nil
            ) {
                self.apps = apps
                self.documentation_url = documentation_url
                self.has_ui = has_ui
                self.icon = icon
                self.id = id
                self.is_beta = is_beta
                self.summary = summary
                self.title = title
            }
            public enum CodingKeys: String, CodingKey {
                case apps
                case documentation_url
                case has_ui
                case icon
                case id
                case is_beta
                case summary
                case title
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnsListResponseModel`.
        public struct v0_period_OwnerAddOnsListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.OwnerAddOnsListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_OwnerAddOnResponseItemModel]?
            /// Creates a new `v0_period_OwnerAddOnsListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: [Components.Schemas.v0_period_OwnerAddOnResponseItemModel]? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PagingResponseModel`.
        public struct v0_period_PagingResponseModel: Codable, Hashable, Sendable {
            /// Next is the "anchor" for pagination. This value should be passed to the same endpoint
            /// to get the next page. Empty/not included if there's no "next" page.
            /// Stop paging when there's no "Next" item in the response!
            ///
            /// - Remark: Generated from `#/components/schemas/v0.PagingResponseModel/next`.
            public var next: Swift.String?
            /// PageItemLimit - per-page item count. A given page might include
            /// less items if there's not enough items. This value is the "max item count per page".
            ///
            /// - Remark: Generated from `#/components/schemas/v0.PagingResponseModel/page_item_limit`.
            public var page_item_limit: Swift.Int?
            /// TotalItemCount - total item count, through "all pages"
            ///
            /// - Remark: Generated from `#/components/schemas/v0.PagingResponseModel/total_item_count`.
            public var total_item_count: Swift.Int?
            /// Creates a new `v0_period_PagingResponseModel`.
            ///
            /// - Parameters:
            ///   - next: Next is the "anchor" for pagination. This value should be passed to the same endpoint
            ///   - page_item_limit: PageItemLimit - per-page item count. A given page might include
            ///   - total_item_count: TotalItemCount - total item count, through "all pages"
            public init(
                next: Swift.String? = nil,
                page_item_limit: Swift.Int? = nil,
                total_item_count: Swift.Int? = nil
            ) {
                self.next = next
                self.page_item_limit = page_item_limit
                self.total_item_count = total_item_count
            }
            public enum CodingKeys: String, CodingKey {
                case next
                case page_item_limit
                case total_item_count
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineAbortParams`.
        public struct v0_period_PipelineAbortParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineAbortParams/abort_reason`.
            public var abort_reason: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.PipelineAbortParams/abort_with_success`.
            public var abort_with_success: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/v0.PipelineAbortParams/skip_notifications`.
            public var skip_notifications: Swift.Bool
            /// Creates a new `v0_period_PipelineAbortParams`.
            ///
            /// - Parameters:
            ///   - abort_reason:
            ///   - abort_with_success:
            ///   - skip_notifications:
            public init(
                abort_reason: Swift.String,
                abort_with_success: Swift.Bool,
                skip_notifications: Swift.Bool
            ) {
                self.abort_reason = abort_reason
                self.abort_with_success = abort_with_success
                self.skip_notifications = skip_notifications
            }
            public enum CodingKeys: String, CodingKey {
                case abort_reason
                case abort_with_success
                case skip_notifications
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel`.
        public struct v0_period_PipelineListAllResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/branch`.
            public var branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/build_number`.
            public var build_number: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/commit_hash`.
            public var commit_hash: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/commit_message`.
            public var commit_message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/credit_cost`.
            public var credit_cost: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/finished_at`.
            public var finished_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/is_on_hold`.
            public var is_on_hold: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/is_pipeline`.
            public var is_pipeline: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/is_processed`.
            public var is_processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/pull_request_id`.
            public var pull_request_id: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/pull_request_target_branch`.
            public var pull_request_target_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/repository`.
            public var repository: Components.Schemas.v0_period_AppResponseItemModel?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/started_at`.
            public var started_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/status`.
            public var status: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/tag`.
            public var tag: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/triggered_at`.
            public var triggered_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/triggered_by`.
            public var triggered_by: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseItemModel/triggered_workflow`.
            public var triggered_workflow: Swift.String?
            /// Creates a new `v0_period_PipelineListAllResponseItemModel`.
            ///
            /// - Parameters:
            ///   - branch:
            ///   - build_number:
            ///   - commit_hash:
            ///   - commit_message:
            ///   - credit_cost:
            ///   - finished_at:
            ///   - is_on_hold:
            ///   - is_pipeline:
            ///   - is_processed:
            ///   - pull_request_id:
            ///   - pull_request_target_branch:
            ///   - repository:
            ///   - slug:
            ///   - started_at:
            ///   - status:
            ///   - tag:
            ///   - triggered_at:
            ///   - triggered_by:
            ///   - triggered_workflow:
            public init(
                branch: Swift.String? = nil,
                build_number: Swift.Int? = nil,
                commit_hash: Swift.String? = nil,
                commit_message: Swift.String? = nil,
                credit_cost: Swift.Int? = nil,
                finished_at: Swift.String? = nil,
                is_on_hold: Swift.Bool? = nil,
                is_pipeline: Swift.Bool? = nil,
                is_processed: Swift.Bool? = nil,
                pull_request_id: Swift.Int? = nil,
                pull_request_target_branch: Swift.String? = nil,
                repository: Components.Schemas.v0_period_AppResponseItemModel? = nil,
                slug: Swift.String? = nil,
                started_at: Swift.String? = nil,
                status: Swift.Int? = nil,
                tag: Swift.String? = nil,
                triggered_at: Swift.String? = nil,
                triggered_by: Swift.String? = nil,
                triggered_workflow: Swift.String? = nil
            ) {
                self.branch = branch
                self.build_number = build_number
                self.commit_hash = commit_hash
                self.commit_message = commit_message
                self.credit_cost = credit_cost
                self.finished_at = finished_at
                self.is_on_hold = is_on_hold
                self.is_pipeline = is_pipeline
                self.is_processed = is_processed
                self.pull_request_id = pull_request_id
                self.pull_request_target_branch = pull_request_target_branch
                self.repository = repository
                self.slug = slug
                self.started_at = started_at
                self.status = status
                self.tag = tag
                self.triggered_at = triggered_at
                self.triggered_by = triggered_by
                self.triggered_workflow = triggered_workflow
            }
            public enum CodingKeys: String, CodingKey {
                case branch
                case build_number
                case commit_hash
                case commit_message
                case credit_cost
                case finished_at
                case is_on_hold
                case is_pipeline
                case is_processed
                case pull_request_id
                case pull_request_target_branch
                case repository
                case slug
                case started_at
                case status
                case tag
                case triggered_at
                case triggered_by
                case triggered_workflow
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseModel`.
        public struct v0_period_PipelineListAllResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseModel/data`.
            public var data: [Components.Schemas.v0_period_PipelineListAllResponseItemModel]?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListAllResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_PagingResponseModel?
            /// Creates a new `v0_period_PipelineListAllResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging:
            public init(
                data: [Components.Schemas.v0_period_PipelineListAllResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_PagingResponseModel? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel`.
        public struct v0_period_PipelineListResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/artifacts`.
            public var artifacts: [Components.Schemas.pipelineabledomain_period_ArtifactMeta]?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/branch`.
            public var branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/build_number`.
            public var build_number: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/build_tool_invocations`.
            public var build_tool_invocations: [Components.Schemas.pipelineabledomain_period_BuildToolInvocation]?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/commit_hash`.
            public var commit_hash: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/commit_message`.
            public var commit_message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/credit_cost`.
            public var credit_cost: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/finished_at`.
            public var finished_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/is_on_hold`.
            public var is_on_hold: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/is_pipeline`.
            public var is_pipeline: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/is_processed`.
            public var is_processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/local_config`.
            public var local_config: Components.Schemas.pipelineabledomain_period_LocalConfig?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/pull_request_id`.
            public var pull_request_id: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/pull_request_target_branch`.
            public var pull_request_target_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/rebuildable`.
            public var rebuildable: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/started_at`.
            public var started_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/status`.
            public var status: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/tag`.
            public var tag: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/trigger_params`.
            public var trigger_params: Components.Schemas.pipelineabledomain_period_TriggerParams?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/triggered_at`.
            public var triggered_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/triggered_by`.
            public var triggered_by: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseItemModel/triggered_workflow`.
            public var triggered_workflow: Swift.String?
            /// Creates a new `v0_period_PipelineListResponseItemModel`.
            ///
            /// - Parameters:
            ///   - artifacts:
            ///   - branch:
            ///   - build_number:
            ///   - build_tool_invocations:
            ///   - commit_hash:
            ///   - commit_message:
            ///   - credit_cost:
            ///   - finished_at:
            ///   - is_on_hold:
            ///   - is_pipeline:
            ///   - is_processed:
            ///   - local_config:
            ///   - pull_request_id:
            ///   - pull_request_target_branch:
            ///   - rebuildable:
            ///   - slug:
            ///   - started_at:
            ///   - status:
            ///   - tag:
            ///   - trigger_params:
            ///   - triggered_at:
            ///   - triggered_by:
            ///   - triggered_workflow:
            public init(
                artifacts: [Components.Schemas.pipelineabledomain_period_ArtifactMeta]? = nil,
                branch: Swift.String? = nil,
                build_number: Swift.Int? = nil,
                build_tool_invocations: [Components.Schemas.pipelineabledomain_period_BuildToolInvocation]? = nil,
                commit_hash: Swift.String? = nil,
                commit_message: Swift.String? = nil,
                credit_cost: Swift.Int? = nil,
                finished_at: Swift.String? = nil,
                is_on_hold: Swift.Bool? = nil,
                is_pipeline: Swift.Bool? = nil,
                is_processed: Swift.Bool? = nil,
                local_config: Components.Schemas.pipelineabledomain_period_LocalConfig? = nil,
                pull_request_id: Swift.Int? = nil,
                pull_request_target_branch: Swift.String? = nil,
                rebuildable: Swift.Bool? = nil,
                slug: Swift.String? = nil,
                started_at: Swift.String? = nil,
                status: Swift.Int? = nil,
                tag: Swift.String? = nil,
                trigger_params: Components.Schemas.pipelineabledomain_period_TriggerParams? = nil,
                triggered_at: Swift.String? = nil,
                triggered_by: Swift.String? = nil,
                triggered_workflow: Swift.String? = nil
            ) {
                self.artifacts = artifacts
                self.branch = branch
                self.build_number = build_number
                self.build_tool_invocations = build_tool_invocations
                self.commit_hash = commit_hash
                self.commit_message = commit_message
                self.credit_cost = credit_cost
                self.finished_at = finished_at
                self.is_on_hold = is_on_hold
                self.is_pipeline = is_pipeline
                self.is_processed = is_processed
                self.local_config = local_config
                self.pull_request_id = pull_request_id
                self.pull_request_target_branch = pull_request_target_branch
                self.rebuildable = rebuildable
                self.slug = slug
                self.started_at = started_at
                self.status = status
                self.tag = tag
                self.trigger_params = trigger_params
                self.triggered_at = triggered_at
                self.triggered_by = triggered_by
                self.triggered_workflow = triggered_workflow
            }
            public enum CodingKeys: String, CodingKey {
                case artifacts
                case branch
                case build_number
                case build_tool_invocations
                case commit_hash
                case commit_message
                case credit_cost
                case finished_at
                case is_on_hold
                case is_pipeline
                case is_processed
                case local_config
                case pull_request_id
                case pull_request_target_branch
                case rebuildable
                case slug
                case started_at
                case status
                case tag
                case trigger_params
                case triggered_at
                case triggered_by
                case triggered_workflow
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseModel`.
        public struct v0_period_PipelineListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_PipelineListResponseItemModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.PipelineListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_PipelineListResponseModel.pagingPayload?
            /// Creates a new `v0_period_PipelineListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_PipelineListResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_PipelineListResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineRebuildParams`.
        public struct v0_period_PipelineRebuildParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineRebuildParams/partial`.
            public var partial: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineRebuildParams/triggered_by`.
            public var triggered_by: Swift.String?
            /// Creates a new `v0_period_PipelineRebuildParams`.
            ///
            /// - Parameters:
            ///   - partial:
            ///   - triggered_by:
            public init(
                partial: Swift.Bool? = nil,
                triggered_by: Swift.String? = nil
            ) {
                self.partial = partial
                self.triggered_by = triggered_by
            }
            public enum CodingKeys: String, CodingKey {
                case partial
                case triggered_by
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineShowAppResponseModel`.
        public struct v0_period_PipelineShowAppResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowAppResponseModel/slug`.
            public var slug: Swift.String?
            /// Creates a new `v0_period_PipelineShowAppResponseModel`.
            ///
            /// - Parameters:
            ///   - slug:
            public init(slug: Swift.String? = nil) {
                self.slug = slug
            }
            public enum CodingKeys: String, CodingKey {
                case slug
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineShowAttemptResponseModel`.
        public struct v0_period_PipelineShowAttemptResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowAttemptResponseModel/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowAttemptResponseModel/number_in_pipeline_build_scope`.
            public var number_in_pipeline_build_scope: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowAttemptResponseModel/status`.
            public var status: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowAttemptResponseModel/triggered_at`.
            public var triggered_at: Swift.String?
            /// Creates a new `v0_period_PipelineShowAttemptResponseModel`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - number_in_pipeline_build_scope:
            ///   - status:
            ///   - triggered_at:
            public init(
                id: Swift.String? = nil,
                number_in_pipeline_build_scope: Swift.Int? = nil,
                status: Swift.String? = nil,
                triggered_at: Swift.String? = nil
            ) {
                self.id = id
                self.number_in_pipeline_build_scope = number_in_pipeline_build_scope
                self.status = status
                self.triggered_at = triggered_at
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case number_in_pipeline_build_scope
                case status
                case triggered_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineShowEnvironmentsResponseModel`.
        public struct v0_period_PipelineShowEnvironmentsResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowEnvironmentsResponseModel/is_expand`.
            public var is_expand: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowEnvironmentsResponseModel/key`.
            public var key: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowEnvironmentsResponseModel/value`.
            public var value: OpenAPIRuntime.OpenAPIObjectContainer?
            /// Creates a new `v0_period_PipelineShowEnvironmentsResponseModel`.
            ///
            /// - Parameters:
            ///   - is_expand:
            ///   - key:
            ///   - value:
            public init(
                is_expand: Swift.Bool? = nil,
                key: Swift.String? = nil,
                value: OpenAPIRuntime.OpenAPIObjectContainer? = nil
            ) {
                self.is_expand = is_expand
                self.key = key
                self.value = value
            }
            public enum CodingKeys: String, CodingKey {
                case is_expand
                case key
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel`.
        public struct v0_period_PipelineShowResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/abort_reason`.
            public var abort_reason: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/app`.
            public var app: Components.Schemas.v0_period_PipelineShowAppResponseModel?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/attempts`.
            public var attempts: [Components.Schemas.v0_period_PipelineShowAttemptResponseModel]?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/credit_cost`.
            public var credit_cost: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/current_attempt_id`.
            public var current_attempt_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/finished_at`.
            public var finished_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/number_in_app_scope`.
            public var number_in_app_scope: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/put_on_hold_at`.
            public var put_on_hold_at: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/rebuildable`.
            public var rebuildable: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/stages`.
            public var stages: [Components.Schemas.v0_period_PipelineShowStageResponseModel]?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/started_at`.
            public var started_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/status`.
            @frozen public enum statusPayload: String, Codable, Hashable, Sendable {
                case aborted = "aborted"
                case failed = "failed"
                case initializing = "initializing"
                case on_hold = "on_hold"
                case running = "running"
                case succeeded = "succeeded"
                case succeeded_with_abort = "succeeded_with_abort"
            }
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/status`.
            public var status: Components.Schemas.v0_period_PipelineShowResponseModel.statusPayload?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/trigger_params`.
            public var trigger_params: Components.Schemas.v0_period_PipelineShowTriggerParamsResponseModel?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/triggered_at`.
            public var triggered_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowResponseModel/triggered_by`.
            public var triggered_by: Swift.String?
            /// Creates a new `v0_period_PipelineShowResponseModel`.
            ///
            /// - Parameters:
            ///   - abort_reason:
            ///   - app:
            ///   - attempts:
            ///   - credit_cost:
            ///   - current_attempt_id:
            ///   - finished_at:
            ///   - id:
            ///   - name:
            ///   - number_in_app_scope:
            ///   - put_on_hold_at:
            ///   - rebuildable:
            ///   - stages:
            ///   - started_at:
            ///   - status:
            ///   - trigger_params:
            ///   - triggered_at:
            ///   - triggered_by:
            public init(
                abort_reason: Swift.String? = nil,
                app: Components.Schemas.v0_period_PipelineShowAppResponseModel? = nil,
                attempts: [Components.Schemas.v0_period_PipelineShowAttemptResponseModel]? = nil,
                credit_cost: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                current_attempt_id: Swift.String? = nil,
                finished_at: Swift.String? = nil,
                id: Swift.String? = nil,
                name: Swift.String? = nil,
                number_in_app_scope: Swift.Int? = nil,
                put_on_hold_at: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                rebuildable: Swift.Bool? = nil,
                stages: [Components.Schemas.v0_period_PipelineShowStageResponseModel]? = nil,
                started_at: Swift.String? = nil,
                status: Components.Schemas.v0_period_PipelineShowResponseModel.statusPayload? = nil,
                trigger_params: Components.Schemas.v0_period_PipelineShowTriggerParamsResponseModel? = nil,
                triggered_at: Swift.String? = nil,
                triggered_by: Swift.String? = nil
            ) {
                self.abort_reason = abort_reason
                self.app = app
                self.attempts = attempts
                self.credit_cost = credit_cost
                self.current_attempt_id = current_attempt_id
                self.finished_at = finished_at
                self.id = id
                self.name = name
                self.number_in_app_scope = number_in_app_scope
                self.put_on_hold_at = put_on_hold_at
                self.rebuildable = rebuildable
                self.stages = stages
                self.started_at = started_at
                self.status = status
                self.trigger_params = trigger_params
                self.triggered_at = triggered_at
                self.triggered_by = triggered_by
            }
            public enum CodingKeys: String, CodingKey {
                case abort_reason
                case app
                case attempts
                case credit_cost
                case current_attempt_id
                case finished_at
                case id
                case name
                case number_in_app_scope
                case put_on_hold_at
                case rebuildable
                case stages
                case started_at
                case status
                case trigger_params
                case triggered_at
                case triggered_by
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineShowStageResponseModel`.
        public struct v0_period_PipelineShowStageResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowStageResponseModel/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowStageResponseModel/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowStageResponseModel/workflows`.
            public var workflows: [Components.Schemas.v0_period_PipelineShowWorkflowResponseModel]?
            /// Creates a new `v0_period_PipelineShowStageResponseModel`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - workflows:
            public init(
                id: Swift.String? = nil,
                name: Swift.String? = nil,
                workflows: [Components.Schemas.v0_period_PipelineShowWorkflowResponseModel]? = nil
            ) {
                self.id = id
                self.name = name
                self.workflows = workflows
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case name
                case workflows
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel`.
        public struct v0_period_PipelineShowTriggerParamsResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/branch`.
            public var branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/branch_dest`.
            public var branch_dest: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/branch_dest_repo_owner`.
            public var branch_dest_repo_owner: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/branch_repo_owner`.
            public var branch_repo_owner: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/commit_hash`.
            public var commit_hash: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/commit_message`.
            public var commit_message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/environments`.
            public var environments: [Components.Schemas.v0_period_PipelineShowEnvironmentsResponseModel]?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/pull_request_author`.
            public var pull_request_author: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/pull_request_head_branch`.
            public var pull_request_head_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/pull_request_id`.
            public var pull_request_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/pull_request_merge_branch`.
            public var pull_request_merge_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/pull_request_repository_url`.
            public var pull_request_repository_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/pull_request_unverified_merge_branch`.
            public var pull_request_unverified_merge_branch: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowTriggerParamsResponseModel/tag`.
            public var tag: Swift.String?
            /// Creates a new `v0_period_PipelineShowTriggerParamsResponseModel`.
            ///
            /// - Parameters:
            ///   - branch:
            ///   - branch_dest:
            ///   - branch_dest_repo_owner:
            ///   - branch_repo_owner:
            ///   - commit_hash:
            ///   - commit_message:
            ///   - environments:
            ///   - pull_request_author:
            ///   - pull_request_head_branch:
            ///   - pull_request_id:
            ///   - pull_request_merge_branch:
            ///   - pull_request_repository_url:
            ///   - pull_request_unverified_merge_branch:
            ///   - tag:
            public init(
                branch: Swift.String? = nil,
                branch_dest: Swift.String? = nil,
                branch_dest_repo_owner: Swift.String? = nil,
                branch_repo_owner: Swift.String? = nil,
                commit_hash: Swift.String? = nil,
                commit_message: Swift.String? = nil,
                environments: [Components.Schemas.v0_period_PipelineShowEnvironmentsResponseModel]? = nil,
                pull_request_author: Swift.String? = nil,
                pull_request_head_branch: Swift.String? = nil,
                pull_request_id: Swift.String? = nil,
                pull_request_merge_branch: Swift.String? = nil,
                pull_request_repository_url: Swift.String? = nil,
                pull_request_unverified_merge_branch: Swift.String? = nil,
                tag: Swift.String? = nil
            ) {
                self.branch = branch
                self.branch_dest = branch_dest
                self.branch_dest_repo_owner = branch_dest_repo_owner
                self.branch_repo_owner = branch_repo_owner
                self.commit_hash = commit_hash
                self.commit_message = commit_message
                self.environments = environments
                self.pull_request_author = pull_request_author
                self.pull_request_head_branch = pull_request_head_branch
                self.pull_request_id = pull_request_id
                self.pull_request_merge_branch = pull_request_merge_branch
                self.pull_request_repository_url = pull_request_repository_url
                self.pull_request_unverified_merge_branch = pull_request_unverified_merge_branch
                self.tag = tag
            }
            public enum CodingKeys: String, CodingKey {
                case branch
                case branch_dest
                case branch_dest_repo_owner
                case branch_repo_owner
                case commit_hash
                case commit_message
                case environments
                case pull_request_author
                case pull_request_head_branch
                case pull_request_id
                case pull_request_merge_branch
                case pull_request_repository_url
                case pull_request_unverified_merge_branch
                case tag
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PipelineShowWorkflowResponseModel`.
        public struct v0_period_PipelineShowWorkflowResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowWorkflowResponseModel/credit_cost`.
            public var credit_cost: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowWorkflowResponseModel/external_id`.
            public var external_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowWorkflowResponseModel/finished_at`.
            public var finished_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowWorkflowResponseModel/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowWorkflowResponseModel/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowWorkflowResponseModel/startFailureReason`.
            public var startFailureReason: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowWorkflowResponseModel/started_at`.
            public var started_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PipelineShowWorkflowResponseModel/status`.
            public var status: Swift.String?
            /// Creates a new `v0_period_PipelineShowWorkflowResponseModel`.
            ///
            /// - Parameters:
            ///   - credit_cost:
            ///   - external_id:
            ///   - finished_at:
            ///   - id:
            ///   - name:
            ///   - startFailureReason:
            ///   - started_at:
            ///   - status:
            public init(
                credit_cost: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                external_id: Swift.String? = nil,
                finished_at: Swift.String? = nil,
                id: Swift.String? = nil,
                name: Swift.String? = nil,
                startFailureReason: Swift.String? = nil,
                started_at: Swift.String? = nil,
                status: Swift.String? = nil
            ) {
                self.credit_cost = credit_cost
                self.external_id = external_id
                self.finished_at = finished_at
                self.id = id
                self.name = name
                self.startFailureReason = startFailureReason
                self.started_at = started_at
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case credit_cost
                case external_id
                case finished_at
                case id
                case name
                case startFailureReason
                case started_at
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.PlanDataModel`.
        public struct v0_period_PlanDataModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.PlanDataModel/container_count`.
            public var container_count: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.PlanDataModel/expires_at`.
            public var expires_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PlanDataModel/id`.
            public var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PlanDataModel/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.PlanDataModel/price`.
            public var price: Swift.Int?
            /// Creates a new `v0_period_PlanDataModel`.
            ///
            /// - Parameters:
            ///   - container_count:
            ///   - expires_at:
            ///   - id:
            ///   - name:
            ///   - price:
            public init(
                container_count: Swift.Int? = nil,
                expires_at: Swift.String? = nil,
                id: Swift.String? = nil,
                name: Swift.String? = nil,
                price: Swift.Int? = nil
            ) {
                self.container_count = container_count
                self.expires_at = expires_at
                self.id = id
                self.name = name
                self.price = price
            }
            public enum CodingKeys: String, CodingKey {
                case container_count
                case expires_at
                case id
                case name
                case price
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDocumentUpdateParams`.
        public struct v0_period_ProjectFileStorageDocumentUpdateParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDocumentUpdateParams/exposed_meta_datastore`.
            public var exposed_meta_datastore: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDocumentUpdateParams/is_expose`.
            public var is_expose: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDocumentUpdateParams/is_protected`.
            public var is_protected: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDocumentUpdateParams/processed`.
            public var processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDocumentUpdateParams/user_env_key`.
            public var user_env_key: Swift.String?
            /// Creates a new `v0_period_ProjectFileStorageDocumentUpdateParams`.
            ///
            /// - Parameters:
            ///   - exposed_meta_datastore:
            ///   - is_expose:
            ///   - is_protected:
            ///   - processed:
            ///   - user_env_key:
            public init(
                exposed_meta_datastore: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                is_expose: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                processed: Swift.Bool? = nil,
                user_env_key: Swift.String? = nil
            ) {
                self.exposed_meta_datastore = exposed_meta_datastore
                self.is_expose = is_expose
                self.is_protected = is_protected
                self.processed = processed
                self.user_env_key = user_env_key
            }
            public enum CodingKeys: String, CodingKey {
                case exposed_meta_datastore
                case is_expose
                case is_protected
                case processed
                case user_env_key
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel`.
        public struct v0_period_ProjectFileStorageDownloadResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel/download_url`.
            public var download_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel/exposed_meta_datastore`.
            public var exposed_meta_datastore: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel/is_expose`.
            public var is_expose: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel/is_protected`.
            public var is_protected: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel/processed`.
            public var processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel/upload_file_name`.
            public var upload_file_name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel/upload_file_size`.
            public var upload_file_size: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseItemModel/user_env_key`.
            public var user_env_key: Swift.String?
            /// Creates a new `v0_period_ProjectFileStorageDownloadResponseItemModel`.
            ///
            /// - Parameters:
            ///   - download_url:
            ///   - exposed_meta_datastore:
            ///   - is_expose:
            ///   - is_protected:
            ///   - processed:
            ///   - slug:
            ///   - upload_file_name:
            ///   - upload_file_size:
            ///   - user_env_key:
            public init(
                download_url: Swift.String? = nil,
                exposed_meta_datastore: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                is_expose: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                processed: Swift.Bool? = nil,
                slug: Swift.String? = nil,
                upload_file_name: Swift.String? = nil,
                upload_file_size: Swift.Int? = nil,
                user_env_key: Swift.String? = nil
            ) {
                self.download_url = download_url
                self.exposed_meta_datastore = exposed_meta_datastore
                self.is_expose = is_expose
                self.is_protected = is_protected
                self.processed = processed
                self.slug = slug
                self.upload_file_name = upload_file_name
                self.upload_file_size = upload_file_size
                self.user_env_key = user_env_key
            }
            public enum CodingKeys: String, CodingKey {
                case download_url
                case exposed_meta_datastore
                case is_expose
                case is_protected
                case processed
                case slug
                case upload_file_name
                case upload_file_size
                case user_env_key
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseModel`.
        public struct v0_period_ProjectFileStorageDownloadResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageDownloadResponseModel/data`.
            public var data: Components.Schemas.v0_period_ProjectFileStorageDownloadResponseItemModel?
            /// Creates a new `v0_period_ProjectFileStorageDownloadResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_ProjectFileStorageDownloadResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageListResponseModel`.
        public struct v0_period_ProjectFileStorageListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_ProjectFileStorageResponseItemModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageListResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageListResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_ProjectFileStorageListResponseModel.pagingPayload?
            /// Creates a new `v0_period_ProjectFileStorageListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_ProjectFileStorageResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_ProjectFileStorageListResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseItemModel`.
        public struct v0_period_ProjectFileStorageResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseItemModel/exposed_meta_datastore`.
            public var exposed_meta_datastore: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseItemModel/is_expose`.
            public var is_expose: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseItemModel/is_protected`.
            public var is_protected: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseItemModel/processed`.
            public var processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseItemModel/upload_file_name`.
            public var upload_file_name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseItemModel/upload_file_size`.
            public var upload_file_size: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseItemModel/user_env_key`.
            public var user_env_key: Swift.String?
            /// Creates a new `v0_period_ProjectFileStorageResponseItemModel`.
            ///
            /// - Parameters:
            ///   - exposed_meta_datastore:
            ///   - is_expose:
            ///   - is_protected:
            ///   - processed:
            ///   - slug:
            ///   - upload_file_name:
            ///   - upload_file_size:
            ///   - user_env_key:
            public init(
                exposed_meta_datastore: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                is_expose: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                processed: Swift.Bool? = nil,
                slug: Swift.String? = nil,
                upload_file_name: Swift.String? = nil,
                upload_file_size: Swift.Int? = nil,
                user_env_key: Swift.String? = nil
            ) {
                self.exposed_meta_datastore = exposed_meta_datastore
                self.is_expose = is_expose
                self.is_protected = is_protected
                self.processed = processed
                self.slug = slug
                self.upload_file_name = upload_file_name
                self.upload_file_size = upload_file_size
                self.user_env_key = user_env_key
            }
            public enum CodingKeys: String, CodingKey {
                case exposed_meta_datastore
                case is_expose
                case is_protected
                case processed
                case slug
                case upload_file_name
                case upload_file_size
                case user_env_key
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseModel`.
        public struct v0_period_ProjectFileStorageResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageResponseModel/data`.
            public var data: Components.Schemas.v0_period_ProjectFileStorageResponseItemModel?
            /// Creates a new `v0_period_ProjectFileStorageResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_ProjectFileStorageResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadParams`.
        public struct v0_period_ProjectFileStorageUploadParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadParams/upload_file_name`.
            public var upload_file_name: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadParams/upload_file_size`.
            public var upload_file_size: Swift.Int
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadParams/user_env_key`.
            public var user_env_key: Swift.String
            /// Creates a new `v0_period_ProjectFileStorageUploadParams`.
            ///
            /// - Parameters:
            ///   - upload_file_name:
            ///   - upload_file_size:
            ///   - user_env_key:
            public init(
                upload_file_name: Swift.String,
                upload_file_size: Swift.Int,
                user_env_key: Swift.String
            ) {
                self.upload_file_name = upload_file_name
                self.upload_file_size = upload_file_size
                self.user_env_key = user_env_key
            }
            public enum CodingKeys: String, CodingKey {
                case upload_file_name
                case upload_file_size
                case user_env_key
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel`.
        public struct v0_period_ProjectFileStorageUploadResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel/exposed_meta_datastore`.
            public var exposed_meta_datastore: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel/is_expose`.
            public var is_expose: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel/is_protected`.
            public var is_protected: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel/processed`.
            public var processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel/upload_file_name`.
            public var upload_file_name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel/upload_file_size`.
            public var upload_file_size: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel/upload_url`.
            public var upload_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseItemModel/user_env_key`.
            public var user_env_key: Swift.String?
            /// Creates a new `v0_period_ProjectFileStorageUploadResponseItemModel`.
            ///
            /// - Parameters:
            ///   - exposed_meta_datastore:
            ///   - is_expose:
            ///   - is_protected:
            ///   - processed:
            ///   - slug:
            ///   - upload_file_name:
            ///   - upload_file_size:
            ///   - upload_url:
            ///   - user_env_key:
            public init(
                exposed_meta_datastore: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                is_expose: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                processed: Swift.Bool? = nil,
                slug: Swift.String? = nil,
                upload_file_name: Swift.String? = nil,
                upload_file_size: Swift.Int? = nil,
                upload_url: Swift.String? = nil,
                user_env_key: Swift.String? = nil
            ) {
                self.exposed_meta_datastore = exposed_meta_datastore
                self.is_expose = is_expose
                self.is_protected = is_protected
                self.processed = processed
                self.slug = slug
                self.upload_file_name = upload_file_name
                self.upload_file_size = upload_file_size
                self.upload_url = upload_url
                self.user_env_key = user_env_key
            }
            public enum CodingKeys: String, CodingKey {
                case exposed_meta_datastore
                case is_expose
                case is_protected
                case processed
                case slug
                case upload_file_name
                case upload_file_size
                case upload_url
                case user_env_key
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseModel`.
        public struct v0_period_ProjectFileStorageUploadResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProjectFileStorageUploadResponseModel/data`.
            public var data: Components.Schemas.v0_period_ProjectFileStorageUploadResponseItemModel?
            /// Creates a new `v0_period_ProjectFileStorageUploadResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_ProjectFileStorageUploadResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProvProfileDocumentUpdateParams`.
        public struct v0_period_ProvProfileDocumentUpdateParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProvProfileDocumentUpdateParams/is_expose`.
            public var is_expose: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProvProfileDocumentUpdateParams/is_protected`.
            public var is_protected: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProvProfileDocumentUpdateParams/processed`.
            public var processed: Swift.Bool?
            /// Creates a new `v0_period_ProvProfileDocumentUpdateParams`.
            ///
            /// - Parameters:
            ///   - is_expose:
            ///   - is_protected:
            ///   - processed:
            public init(
                is_expose: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                processed: Swift.Bool? = nil
            ) {
                self.is_expose = is_expose
                self.is_protected = is_protected
                self.processed = processed
            }
            public enum CodingKeys: String, CodingKey {
                case is_expose
                case is_protected
                case processed
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileListResponseModel`.
        public struct v0_period_ProvisionProfileListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_ProvisionProfileResponseItemModel]?
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileListResponseModel/paging`.
            public struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileListResponseModel/paging/value1`.
                public var value1: Components.Schemas.v0_period_PagingResponseModel
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                public init(value1: Components.Schemas.v0_period_PagingResponseModel) {
                    self.value1 = value1
                }
                public init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                public func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// pagination
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileListResponseModel/paging`.
            public var paging: Components.Schemas.v0_period_ProvisionProfileListResponseModel.pagingPayload?
            /// Creates a new `v0_period_ProvisionProfileListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - paging: pagination
            public init(
                data: [Components.Schemas.v0_period_ProvisionProfileResponseItemModel]? = nil,
                paging: Components.Schemas.v0_period_ProvisionProfileListResponseModel.pagingPayload? = nil
            ) {
                self.data = data
                self.paging = paging
            }
            public enum CodingKeys: String, CodingKey {
                case data
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseItemModel`.
        public struct v0_period_ProvisionProfileResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseItemModel/download_url`.
            public var download_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseItemModel/is_expose`.
            public var is_expose: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseItemModel/is_protected`.
            public var is_protected: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseItemModel/processed`.
            public var processed: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseItemModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseItemModel/upload_file_name`.
            public var upload_file_name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseItemModel/upload_file_size`.
            public var upload_file_size: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseItemModel/upload_url`.
            public var upload_url: Swift.String?
            /// Creates a new `v0_period_ProvisionProfileResponseItemModel`.
            ///
            /// - Parameters:
            ///   - download_url:
            ///   - is_expose:
            ///   - is_protected:
            ///   - processed:
            ///   - slug:
            ///   - upload_file_name:
            ///   - upload_file_size:
            ///   - upload_url:
            public init(
                download_url: Swift.String? = nil,
                is_expose: Swift.Bool? = nil,
                is_protected: Swift.Bool? = nil,
                processed: Swift.Bool? = nil,
                slug: Swift.String? = nil,
                upload_file_name: Swift.String? = nil,
                upload_file_size: Swift.Int? = nil,
                upload_url: Swift.String? = nil
            ) {
                self.download_url = download_url
                self.is_expose = is_expose
                self.is_protected = is_protected
                self.processed = processed
                self.slug = slug
                self.upload_file_name = upload_file_name
                self.upload_file_size = upload_file_size
                self.upload_url = upload_url
            }
            public enum CodingKeys: String, CodingKey {
                case download_url
                case is_expose
                case is_protected
                case processed
                case slug
                case upload_file_name
                case upload_file_size
                case upload_url
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseModel`.
        public struct v0_period_ProvisionProfileResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileResponseModel/data`.
            public var data: Components.Schemas.v0_period_ProvisionProfileResponseItemModel?
            /// Creates a new `v0_period_ProvisionProfileResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_ProvisionProfileResponseItemModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileUploadParams`.
        public struct v0_period_ProvisionProfileUploadParams: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileUploadParams/upload_file_name`.
            public var upload_file_name: Swift.String
            /// - Remark: Generated from `#/components/schemas/v0.ProvisionProfileUploadParams/upload_file_size`.
            public var upload_file_size: Swift.Int
            /// Creates a new `v0_period_ProvisionProfileUploadParams`.
            ///
            /// - Parameters:
            ///   - upload_file_name:
            ///   - upload_file_size:
            public init(
                upload_file_name: Swift.String,
                upload_file_size: Swift.Int
            ) {
                self.upload_file_name = upload_file_name
                self.upload_file_size = upload_file_size
            }
            public enum CodingKeys: String, CodingKey {
                case upload_file_name
                case upload_file_size
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreParams`.
        public struct v0_period_ReleaseCreateAppStoreParams: Codable, Hashable, Sendable {
            /// @Deprecated use `automatic_store_upload` instead. Indicates whether or not to upload every release candidate build automatically to TestFlight (default: `false`)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreParams/automatic_testflight_upload`.
            public var automatic_testflight_upload: Swift.Bool?
            /// The bundle ID of the app to be released
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreParams/bundle_id`.
            public var bundle_id: Swift.String
            /// An internal description of the release; it won't be propagated to the App Store (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreParams/description`.
            public var description: Swift.String?
            /// The name/version of the release (e.g. `1.2`)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreParams/name`.
            public var name: Swift.String
            /// The branch used for building the release candidate (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreParams/release_branch`.
            public var release_branch: Swift.String?
            /// The Slack webhook URL to use for sending Slack notifications (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreParams/slack_webhook_url`.
            public var slack_webhook_url: Swift.String?
            /// The Teams webhook URL to use for sending MS Teams notifications (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreParams/teams_webhook_url`.
            public var teams_webhook_url: Swift.String?
            /// The workflow used for building the release candidate (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreParams/workflow`.
            public var workflow: Swift.String?
            /// Creates a new `v0_period_ReleaseCreateAppStoreParams`.
            ///
            /// - Parameters:
            ///   - automatic_testflight_upload: @Deprecated use `automatic_store_upload` instead. Indicates whether or not to upload every release candidate build automatically to TestFlight (default: `false`)
            ///   - bundle_id: The bundle ID of the app to be released
            ///   - description: An internal description of the release; it won't be propagated to the App Store (default: empty)
            ///   - name: The name/version of the release (e.g. `1.2`)
            ///   - release_branch: The branch used for building the release candidate (default: empty)
            ///   - slack_webhook_url: The Slack webhook URL to use for sending Slack notifications (default: empty)
            ///   - teams_webhook_url: The Teams webhook URL to use for sending MS Teams notifications (default: empty)
            ///   - workflow: The workflow used for building the release candidate (default: empty)
            public init(
                automatic_testflight_upload: Swift.Bool? = nil,
                bundle_id: Swift.String,
                description: Swift.String? = nil,
                name: Swift.String,
                release_branch: Swift.String? = nil,
                slack_webhook_url: Swift.String? = nil,
                teams_webhook_url: Swift.String? = nil,
                workflow: Swift.String? = nil
            ) {
                self.automatic_testflight_upload = automatic_testflight_upload
                self.bundle_id = bundle_id
                self.description = description
                self.name = name
                self.release_branch = release_branch
                self.slack_webhook_url = slack_webhook_url
                self.teams_webhook_url = teams_webhook_url
                self.workflow = workflow
            }
            public enum CodingKeys: String, CodingKey {
                case automatic_testflight_upload
                case bundle_id
                case description
                case name
                case release_branch
                case slack_webhook_url
                case teams_webhook_url
                case workflow
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreRespModel`.
        public struct v0_period_ReleaseCreateAppStoreRespModel: Codable, Hashable, Sendable {
            /// The bundle ID of the app
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreRespModel/bundle_id`.
            public var bundle_id: Swift.String?
            /// The ID of the newly created release
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreRespModel/id`.
            public var id: Swift.String?
            /// The name/version of the release (e.g. `1.2`)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreRespModel/name`.
            public var name: Swift.String?
            /// The platform of the release (`ios`)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreRespModel/platform`.
            public var platform: Swift.String?
            /// The status of the newly created release (`scheduled` or `in-progress`, depending on whether or not the release candidate settings were specified)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateAppStoreRespModel/status`.
            public var status: Swift.String?
            /// Creates a new `v0_period_ReleaseCreateAppStoreRespModel`.
            ///
            /// - Parameters:
            ///   - bundle_id: The bundle ID of the app
            ///   - id: The ID of the newly created release
            ///   - name: The name/version of the release (e.g. `1.2`)
            ///   - platform: The platform of the release (`ios`)
            ///   - status: The status of the newly created release (`scheduled` or `in-progress`, depending on whether or not the release candidate settings were specified)
            public init(
                bundle_id: Swift.String? = nil,
                id: Swift.String? = nil,
                name: Swift.String? = nil,
                platform: Swift.String? = nil,
                status: Swift.String? = nil
            ) {
                self.bundle_id = bundle_id
                self.id = id
                self.name = name
                self.platform = platform
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case bundle_id
                case id
                case name
                case platform
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayParams`.
        public struct v0_period_ReleaseCreateGooglePlayParams: Codable, Hashable, Sendable {
            /// Indicates whether or not to upload every release candidate build automatically to the Google Play Console (default: `false`)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayParams/automatic_play_console_upload`.
            public var automatic_play_console_upload: Swift.Bool?
            /// An internal description of the release; it won't be propagated to the App Store (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayParams/description`.
            public var description: Swift.String?
            /// The name/version of the release (e.g. `1.2`)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayParams/name`.
            public var name: Swift.String
            /// The package name of the app to be released
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayParams/package_name`.
            public var package_name: Swift.String
            /// The branch used for building the release candidate (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayParams/release_branch`.
            public var release_branch: Swift.String?
            /// The Slack webhook URL to use for sending Slack notifications (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayParams/slack_webhook_url`.
            public var slack_webhook_url: Swift.String?
            /// The Teams webhook URL to use for sending MS Teams notifications (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayParams/teams_webhook_url`.
            public var teams_webhook_url: Swift.String?
            /// The workflow used for building the release candidate (default: empty)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayParams/workflow`.
            public var workflow: Swift.String?
            /// Creates a new `v0_period_ReleaseCreateGooglePlayParams`.
            ///
            /// - Parameters:
            ///   - automatic_play_console_upload: Indicates whether or not to upload every release candidate build automatically to the Google Play Console (default: `false`)
            ///   - description: An internal description of the release; it won't be propagated to the App Store (default: empty)
            ///   - name: The name/version of the release (e.g. `1.2`)
            ///   - package_name: The package name of the app to be released
            ///   - release_branch: The branch used for building the release candidate (default: empty)
            ///   - slack_webhook_url: The Slack webhook URL to use for sending Slack notifications (default: empty)
            ///   - teams_webhook_url: The Teams webhook URL to use for sending MS Teams notifications (default: empty)
            ///   - workflow: The workflow used for building the release candidate (default: empty)
            public init(
                automatic_play_console_upload: Swift.Bool? = nil,
                description: Swift.String? = nil,
                name: Swift.String,
                package_name: Swift.String,
                release_branch: Swift.String? = nil,
                slack_webhook_url: Swift.String? = nil,
                teams_webhook_url: Swift.String? = nil,
                workflow: Swift.String? = nil
            ) {
                self.automatic_play_console_upload = automatic_play_console_upload
                self.description = description
                self.name = name
                self.package_name = package_name
                self.release_branch = release_branch
                self.slack_webhook_url = slack_webhook_url
                self.teams_webhook_url = teams_webhook_url
                self.workflow = workflow
            }
            public enum CodingKeys: String, CodingKey {
                case automatic_play_console_upload
                case description
                case name
                case package_name
                case release_branch
                case slack_webhook_url
                case teams_webhook_url
                case workflow
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayRespModel`.
        public struct v0_period_ReleaseCreateGooglePlayRespModel: Codable, Hashable, Sendable {
            /// The ID of the newly created release
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayRespModel/id`.
            public var id: Swift.String?
            /// The name/version of the release (e.g. `1.2`)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayRespModel/name`.
            public var name: Swift.String?
            /// The package name of the app
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayRespModel/package_name`.
            public var package_name: Swift.String?
            /// The platform of the release (`android`)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayRespModel/platform`.
            public var platform: Swift.String?
            /// The status of the newly created release (`scheduled` or `in-progress`, depending on whether or not the release candidate settings were specified)
            ///
            /// - Remark: Generated from `#/components/schemas/v0.ReleaseCreateGooglePlayRespModel/status`.
            public var status: Swift.String?
            /// Creates a new `v0_period_ReleaseCreateGooglePlayRespModel`.
            ///
            /// - Parameters:
            ///   - id: The ID of the newly created release
            ///   - name: The name/version of the release (e.g. `1.2`)
            ///   - package_name: The package name of the app
            ///   - platform: The platform of the release (`android`)
            ///   - status: The status of the newly created release (`scheduled` or `in-progress`, depending on whether or not the release candidate settings were specified)
            public init(
                id: Swift.String? = nil,
                name: Swift.String? = nil,
                package_name: Swift.String? = nil,
                platform: Swift.String? = nil,
                status: Swift.String? = nil
            ) {
                self.id = id
                self.name = name
                self.package_name = package_name
                self.platform = platform
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case name
                case package_name
                case platform
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.SSHKeyRespModel`.
        public struct v0_period_SSHKeyRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.SSHKeyRespModel/status`.
            public var status: Swift.String?
            /// Creates a new `v0_period_SSHKeyRespModel`.
            ///
            /// - Parameters:
            ///   - status:
            public init(status: Swift.String? = nil) {
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.SSHKeyUploadParams`.
        public struct v0_period_SSHKeyUploadParams: Codable, Hashable, Sendable {
            /// The private part of the SSH key you would like to use
            ///
            /// - Remark: Generated from `#/components/schemas/v0.SSHKeyUploadParams/auth_ssh_private_key`.
            public var auth_ssh_private_key: Swift.String
            /// The public part of the SSH key you would like to use
            ///
            /// - Remark: Generated from `#/components/schemas/v0.SSHKeyUploadParams/auth_ssh_public_key`.
            public var auth_ssh_public_key: Swift.String
            /// If it's set to true, the provided SSH key will be registered at the provider of the application
            ///
            /// - Remark: Generated from `#/components/schemas/v0.SSHKeyUploadParams/is_register_key_into_provider_service`.
            public var is_register_key_into_provider_service: Swift.Bool?
            /// Creates a new `v0_period_SSHKeyUploadParams`.
            ///
            /// - Parameters:
            ///   - auth_ssh_private_key: The private part of the SSH key you would like to use
            ///   - auth_ssh_public_key: The public part of the SSH key you would like to use
            ///   - is_register_key_into_provider_service: If it's set to true, the provided SSH key will be registered at the provider of the application
            public init(
                auth_ssh_private_key: Swift.String,
                auth_ssh_public_key: Swift.String,
                is_register_key_into_provider_service: Swift.Bool? = nil
            ) {
                self.auth_ssh_private_key = auth_ssh_private_key
                self.auth_ssh_public_key = auth_ssh_public_key
                self.is_register_key_into_provider_service = is_register_key_into_provider_service
            }
            public enum CodingKeys: String, CodingKey {
                case auth_ssh_private_key
                case auth_ssh_public_key
                case is_register_key_into_provider_service
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.TestDeviceListResponseModel`.
        public struct v0_period_TestDeviceListResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.TestDeviceListResponseModel/data`.
            public var data: [Components.Schemas.v0_period_TestDeviceResponseItemModel]?
            /// Creates a new `v0_period_TestDeviceListResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: [Components.Schemas.v0_period_TestDeviceResponseItemModel]? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.TestDeviceResponseItemModel`.
        public struct v0_period_TestDeviceResponseItemModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.TestDeviceResponseItemModel/device_id`.
            public var device_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.TestDeviceResponseItemModel/device_type`.
            public var device_type: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.TestDeviceResponseItemModel/owner`.
            public var owner: Swift.String?
            /// Creates a new `v0_period_TestDeviceResponseItemModel`.
            ///
            /// - Parameters:
            ///   - device_id:
            ///   - device_type:
            ///   - owner:
            public init(
                device_id: Swift.String? = nil,
                device_type: Swift.String? = nil,
                owner: Swift.String? = nil
            ) {
                self.device_id = device_id
                self.device_type = device_type
                self.owner = owner
            }
            public enum CodingKeys: String, CodingKey {
                case device_id
                case device_type
                case owner
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.UserPlanDataModel`.
        public struct v0_period_UserPlanDataModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.UserPlanDataModel/current_plan`.
            public var current_plan: Components.Schemas.v0_period_PlanDataModel?
            /// - Remark: Generated from `#/components/schemas/v0.UserPlanDataModel/pending_plan`.
            public var pending_plan: Components.Schemas.v0_period_PlanDataModel?
            /// - Remark: Generated from `#/components/schemas/v0.UserPlanDataModel/trial_expires_at`.
            public var trial_expires_at: Swift.String?
            /// Creates a new `v0_period_UserPlanDataModel`.
            ///
            /// - Parameters:
            ///   - current_plan:
            ///   - pending_plan:
            ///   - trial_expires_at:
            public init(
                current_plan: Components.Schemas.v0_period_PlanDataModel? = nil,
                pending_plan: Components.Schemas.v0_period_PlanDataModel? = nil,
                trial_expires_at: Swift.String? = nil
            ) {
                self.current_plan = current_plan
                self.pending_plan = pending_plan
                self.trial_expires_at = trial_expires_at
            }
            public enum CodingKeys: String, CodingKey {
                case current_plan
                case pending_plan
                case trial_expires_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.UserPlanRespModel`.
        public struct v0_period_UserPlanRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.UserPlanRespModel/data`.
            public var data: Components.Schemas.v0_period_UserPlanDataModel?
            /// Creates a new `v0_period_UserPlanRespModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_UserPlanDataModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel`.
        public struct v0_period_UserProfileDataModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel/avatar_url`.
            public var avatar_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel/created_at`.
            public var created_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel/data_id`.
            public var data_id: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel/email`.
            public var email: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel/has_used_organization_trial`.
            public var has_used_organization_trial: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel/payment_processor`.
            public var payment_processor: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel/unconfirmed_email`.
            public var unconfirmed_email: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileDataModel/username`.
            public var username: Swift.String?
            /// Creates a new `v0_period_UserProfileDataModel`.
            ///
            /// - Parameters:
            ///   - avatar_url:
            ///   - created_at:
            ///   - data_id:
            ///   - email:
            ///   - has_used_organization_trial:
            ///   - payment_processor:
            ///   - slug:
            ///   - unconfirmed_email:
            ///   - username:
            public init(
                avatar_url: Swift.String? = nil,
                created_at: Swift.String? = nil,
                data_id: Swift.Int? = nil,
                email: Swift.String? = nil,
                has_used_organization_trial: Swift.Bool? = nil,
                payment_processor: Swift.String? = nil,
                slug: Swift.String? = nil,
                unconfirmed_email: Swift.String? = nil,
                username: Swift.String? = nil
            ) {
                self.avatar_url = avatar_url
                self.created_at = created_at
                self.data_id = data_id
                self.email = email
                self.has_used_organization_trial = has_used_organization_trial
                self.payment_processor = payment_processor
                self.slug = slug
                self.unconfirmed_email = unconfirmed_email
                self.username = username
            }
            public enum CodingKeys: String, CodingKey {
                case avatar_url
                case created_at
                case data_id
                case email
                case has_used_organization_trial
                case payment_processor
                case slug
                case unconfirmed_email
                case username
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.UserProfileRespModel`.
        public struct v0_period_UserProfileRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.UserProfileRespModel/data`.
            public var data: Components.Schemas.v0_period_UserProfileDataModel?
            /// Creates a new `v0_period_UserProfileRespModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_UserProfileDataModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel`.
        public struct v0_period_WebhookDeliveryItemResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/created_at`.
            public var created_at: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/request_headers`.
            public var request_headers: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/request_payload`.
            public var request_payload: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/request_url`.
            public var request_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/response_body`.
            public var response_body: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/response_headers`.
            public var response_headers: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/response_http_status`.
            public var response_http_status: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/response_seconds`.
            public var response_seconds: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/slug`.
            public var slug: Swift.String?
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemResponseModel/updated_at`.
            public var updated_at: Swift.String?
            /// Creates a new `v0_period_WebhookDeliveryItemResponseModel`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - request_headers:
            ///   - request_payload:
            ///   - request_url:
            ///   - response_body:
            ///   - response_headers:
            ///   - response_http_status:
            ///   - response_seconds:
            ///   - slug:
            ///   - updated_at:
            public init(
                created_at: Swift.String? = nil,
                request_headers: Swift.String? = nil,
                request_payload: Swift.String? = nil,
                request_url: Swift.String? = nil,
                response_body: Swift.String? = nil,
                response_headers: Swift.String? = nil,
                response_http_status: Swift.Int? = nil,
                response_seconds: Swift.Int? = nil,
                slug: Swift.String? = nil,
                updated_at: Swift.String? = nil
            ) {
                self.created_at = created_at
                self.request_headers = request_headers
                self.request_payload = request_payload
                self.request_url = request_url
                self.response_body = response_body
                self.response_headers = response_headers
                self.response_http_status = response_http_status
                self.response_seconds = response_seconds
                self.slug = slug
                self.updated_at = updated_at
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case request_headers
                case request_payload
                case request_url
                case response_body
                case response_headers
                case response_http_status
                case response_seconds
                case slug
                case updated_at
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemShowResponseModel`.
        public struct v0_period_WebhookDeliveryItemShowResponseModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.WebhookDeliveryItemShowResponseModel/data`.
            public var data: Components.Schemas.v0_period_WebhookDeliveryItemResponseModel?
            /// Creates a new `v0_period_WebhookDeliveryItemShowResponseModel`.
            ///
            /// - Parameters:
            ///   - data:
            public init(data: Components.Schemas.v0_period_WebhookDeliveryItemResponseModel? = nil) {
                self.data = data
            }
            public enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/v0.WebhookRespModel`.
        public struct v0_period_WebhookRespModel: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/v0.WebhookRespModel/status`.
            public var status: Swift.String?
            /// Creates a new `v0_period_WebhookRespModel`.
            ///
            /// - Parameters:
            ///   - status:
            public init(status: Swift.String? = nil) {
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/website.BitriseYMLLocation`.
        @frozen public enum website_period_BitriseYMLLocation: String, Codable, Hashable, Sendable {
            case bitrise_period_io = "bitrise.io"
            case repository = "repository"
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Get list of available Bitrise addons
    ///
    /// List all the available Bitrise addons
    ///
    /// - Remark: HTTP `GET /addons`.
    /// - Remark: Generated from `#/paths//addons/get(addonsList)`.
    public enum addonsList {
        public static let id: Swift.String = "addonsList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/addons/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonsList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonsList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.addonsList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.addonsList.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AddonsListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AddonsListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//addons/get(addonsList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.addonsList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.addonsList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//addons/get(addonsList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.addonsList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.addonsList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//addons/get(addonsList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.addonsList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.addonsList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//addons/get(addonsList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.addonsList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.addonsList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//addons/get(addonsList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.addonsList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.addonsList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a specific Bitrise addon
    ///
    /// Show details of a specific Bitrise addon
    ///
    /// - Remark: HTTP `GET /addons/{addon-id}`.
    /// - Remark: Generated from `#/paths//addons/{addon-id}/get(addonsShow)`.
    public enum addonsShow {
        public static let id: Swift.String = "addonsShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// Addon ID
                ///
                /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/path/addon-id`.
                public var addon_hyphen_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - addon_hyphen_id: Addon ID
                public init(addon_hyphen_id: Swift.String) {
                    self.addon_hyphen_id = addon_hyphen_id
                }
            }
            public var path: Operations.addonsShow.Input.Path
            /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonsShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonsShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.addonsShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.addonsShow.Input.Path,
                headers: Operations.addonsShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AddonsShowResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AddonsShowResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//addons/{addon-id}/get(addonsShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.addonsShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.addonsShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//addons/{addon-id}/get(addonsShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.addonsShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.addonsShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//addons/{addon-id}/get(addonsShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.addonsShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.addonsShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//addons/{addon-id}/get(addonsShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.addonsShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.addonsShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/addons/{addon-id}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonsShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonsShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//addons/{addon-id}/get(addonsShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.addonsShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.addonsShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get list of the apps
    ///
    /// List all the apps available for the authenticated account, including those that are owned by other users or Organizations.
    ///
    /// - Remark: HTTP `GET /apps`.
    /// - Remark: Generated from `#/paths//apps/get(appList)`.
    public enum appList {
        public static let id: Swift.String = "appList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/GET/query/sort_by`.
                @frozen public enum sort_byPayload: String, Codable, Hashable, Sendable {
                    case last_build_at = "last_build_at"
                    case created_at = "created_at"
                }
                /// Order of the applications: sort them based on when they were created or the time of their last build
                ///
                /// - Remark: Generated from `#/paths/apps/GET/query/sort_by`.
                public var sort_by: Operations.appList.Input.Query.sort_byPayload?
                /// Slug of the first app in the response
                ///
                /// - Remark: Generated from `#/paths/apps/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 50)
                ///
                /// - Remark: Generated from `#/paths/apps/GET/query/limit`.
                public var limit: Swift.Int?
                /// The title of the app
                ///
                /// - Remark: Generated from `#/paths/apps/GET/query/title`.
                public var title: Swift.String?
                /// The project type of the app (eg. 'ios', 'android')
                ///
                /// - Remark: Generated from `#/paths/apps/GET/query/project_type`.
                public var project_type: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - sort_by: Order of the applications: sort them based on when they were created or the time of their last build
                ///   - next: Slug of the first app in the response
                ///   - limit: Max number of elements per page (default: 50)
                ///   - title: The title of the app
                ///   - project_type: The project type of the app (eg. 'ios', 'android')
                public init(
                    sort_by: Operations.appList.Input.Query.sort_byPayload? = nil,
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil,
                    title: Swift.String? = nil,
                    project_type: Swift.String? = nil
                ) {
                    self.sort_by = sort_by
                    self.next = next
                    self.limit = limit
                    self.title = title
                    self.project_type = project_type
                }
            }
            public var query: Operations.appList.Input.Query
            /// - Remark: Generated from `#/paths/apps/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.appList.Input.Query = .init(),
                headers: Operations.appList.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/get(appList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/get(appList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/get(appList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/get(appList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/get(appList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Add a new app
    ///
    /// Add a new app to Bitrise. This is the first step of the app registration process. To successfully set it up, you need to provide the required app parameters: the repository URL and the isPublic field. Read more about the app creation process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app).
    ///
    /// - Remark: HTTP `POST /apps/register`.
    /// - Remark: Generated from `#/paths//apps/register/post(appCreate)`.
    public enum appCreate {
        public static let id: Swift.String = "appCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/register/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appCreate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/register/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/register/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_AppUploadParams)
            }
            public var body: Operations.appCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.appCreate.Input.Headers = .init(),
                body: Operations.appCreate.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/register/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/register/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appCreate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appCreate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/register/post(appCreate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appCreate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appCreate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/register/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/register/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appCreate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appCreate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/register/post(appCreate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appCreate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appCreate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/register/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/register/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/register/post(appCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/register/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/register/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/register/post(appCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/register/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/register/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appCreate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appCreate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/register/post(appCreate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appCreate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appCreate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a specific app
    ///
    /// Get the details of a specific app by providing the app slug. You can get the app slug by calling the [/apps](https://api-docs.bitrise.io/#/application/app-list) endpoint or by opening the app on bitrise.io and copying the slug from the URL.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/get(appShow)`.
    public enum appShow {
        public static let id: Swift.String = "appShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.appShow.Input.Path,
                headers: Operations.appShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppShowResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppShowResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/get(appShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/get(appShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/get(appShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/get(appShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/get(appShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Updates an app
    ///
    /// Updates an app by slug. Only updates the fields specified in the body.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/patch(appUpdate)`.
    public enum appUpdate {
        public static let id: Swift.String = "appUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appUpdate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_AppUpdateParams)
            }
            public var body: Operations.appUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.appUpdate.Input.Path,
                headers: Operations.appUpdate.Input.Headers = .init(),
                body: Operations.appUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppUpdateRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppUpdateRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/patch(appUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/patch(appUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/patch(appUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/patch(appUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/PATCH/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/patch(appUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Deletes an app
    ///
    /// Deletes an app by slug. Use with care, make sure you really want to delete the app. This action cannot be undone.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/delete(appDelete)`.
    public enum appDelete {
        public static let id: Swift.String = "appDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appDelete.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appDelete.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.appDelete.Input.Path,
                headers: Operations.appDelete.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppDeleteRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppDeleteRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appDelete.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appDelete.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/delete(appDelete)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appDelete.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appDelete.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appDelete.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appDelete.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/delete(appDelete)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appDelete.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appDelete.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appDelete.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appDelete.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/delete(appDelete)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appDelete.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appDelete.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appDelete.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appDelete.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/delete(appDelete)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appDelete.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appDelete.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appDelete.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appDelete.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/delete(appDelete)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appDelete.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appDelete.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get list of the addons for apps
    ///
    /// List all the provisioned addons for the authorized apps
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/addons`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/addons/get(addonListByApp)`.
    public enum addonListByApp {
        public static let id: Swift.String = "addonListByApp"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.addonListByApp.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonListByApp.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonListByApp.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.addonListByApp.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.addonListByApp.Input.Path,
                headers: Operations.addonListByApp.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppAddOnsListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppAddOnsListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByApp.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByApp.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/addons/get(addonListByApp)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.addonListByApp.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.addonListByApp.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByApp.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByApp.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/addons/get(addonListByApp)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.addonListByApp.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.addonListByApp.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByApp.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByApp.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/addons/get(addonListByApp)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.addonListByApp.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.addonListByApp.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByApp.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByApp.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/addons/get(addonListByApp)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.addonListByApp.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.addonListByApp.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/addons/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByApp.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByApp.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/addons/get(addonListByApp)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.addonListByApp.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.addonListByApp.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a list of the android keystore files
    ///
    /// List all the android keystore files that have been uploaded to a specific app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/android-keystore-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/get(androidKeystoreFileList)`.
    public enum androidKeystoreFileList {
        public static let id: Swift.String = "androidKeystoreFileList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.androidKeystoreFileList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Slug of the first android keystore file in the response
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/query/next`.
                public var next: Swift.String?
                /// Max number of build certificates per page is 50.
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - next: Slug of the first android keystore file in the response
                ///   - limit: Max number of build certificates per page is 50.
                public init(
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.androidKeystoreFileList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.androidKeystoreFileList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.androidKeystoreFileList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.androidKeystoreFileList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.androidKeystoreFileList.Input.Path,
                query: Operations.androidKeystoreFileList.Input.Query = .init(),
                headers: Operations.androidKeystoreFileList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/get(androidKeystoreFileList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.androidKeystoreFileList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.androidKeystoreFileList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/get(androidKeystoreFileList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.androidKeystoreFileList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.androidKeystoreFileList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/get(androidKeystoreFileList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.androidKeystoreFileList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.androidKeystoreFileList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/get(androidKeystoreFileList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.androidKeystoreFileList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.androidKeystoreFileList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/get(androidKeystoreFileList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.androidKeystoreFileList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.androidKeystoreFileList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create an Android keystore file
    ///
    /// Add a new Android keystore file to an app. `keystore_file_name` is required if there is already an existing keystore file for the app. It will determine the environment variable key to be used to refer to the keystore file in builds. E.g. `BITRISE_ANDROID_KEYSTORE_<keystore_file_name>_URL`. The `keystore_file_name` can only contain letters, numbers, and underscores.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/android-keystore-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/post(androidKeystoreFileCreate)`.
    public enum androidKeystoreFileCreate {
        public static let id: Swift.String = "androidKeystoreFileCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.androidKeystoreFileCreate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.androidKeystoreFileCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.androidKeystoreFileCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.androidKeystoreFileCreate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_AndroidKeystoreFileUploadParams)
            }
            public var body: Operations.androidKeystoreFileCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.androidKeystoreFileCreate.Input.Path,
                headers: Operations.androidKeystoreFileCreate.Input.Headers = .init(),
                body: Operations.androidKeystoreFileCreate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageUploadResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageUploadResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileCreate.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileCreate.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/post(androidKeystoreFileCreate)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.androidKeystoreFileCreate.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.androidKeystoreFileCreate.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileCreate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileCreate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/post(androidKeystoreFileCreate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.androidKeystoreFileCreate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.androidKeystoreFileCreate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/post(androidKeystoreFileCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.androidKeystoreFileCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.androidKeystoreFileCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/post(androidKeystoreFileCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.androidKeystoreFileCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.androidKeystoreFileCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileCreate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileCreate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/post(androidKeystoreFileCreate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.androidKeystoreFileCreate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.androidKeystoreFileCreate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete an android keystore file
    ///
    /// Delete an app's android keystore file. You can fetch an app's android keystore file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/android-keystore-files](https://api-docs.bitrise.io/#/android-keystore-file/android-keystore-file-list) endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-android-keystore-files.html) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/delete(androidKeystoreFileDelete)`.
    public enum androidKeystoreFileDelete {
        public static let id: Swift.String = "androidKeystoreFileDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Android keystore file slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/path/android-keystore-file-slug`.
                public var android_hyphen_keystore_hyphen_file_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - android_hyphen_keystore_hyphen_file_hyphen_slug: Android keystore file slug
                public init(
                    app_hyphen_slug: Swift.String,
                    android_hyphen_keystore_hyphen_file_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.android_hyphen_keystore_hyphen_file_hyphen_slug = android_hyphen_keystore_hyphen_file_hyphen_slug
                }
            }
            public var path: Operations.androidKeystoreFileDelete.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.androidKeystoreFileDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.androidKeystoreFileDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.androidKeystoreFileDelete.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.androidKeystoreFileDelete.Input.Path,
                headers: Operations.androidKeystoreFileDelete.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileDelete.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileDelete.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/delete(androidKeystoreFileDelete)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.androidKeystoreFileDelete.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.androidKeystoreFileDelete.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileDelete.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileDelete.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/delete(androidKeystoreFileDelete)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.androidKeystoreFileDelete.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.androidKeystoreFileDelete.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileDelete.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileDelete.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/delete(androidKeystoreFileDelete)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.androidKeystoreFileDelete.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.androidKeystoreFileDelete.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileDelete.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileDelete.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/delete(androidKeystoreFileDelete)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.androidKeystoreFileDelete.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.androidKeystoreFileDelete.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileDelete.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileDelete.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/delete(androidKeystoreFileDelete)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.androidKeystoreFileDelete.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.androidKeystoreFileDelete.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Confirm an android keystore file upload
    ///
    /// This is the last step of uploading an android keystore file to Bitrise. Confirm the android keystore file upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/post(androidKeystoreFileConfirm)`.
    public enum androidKeystoreFileConfirm {
        public static let id: Swift.String = "androidKeystoreFileConfirm"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Android keystore file slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/path/android-keystore-file-slug`.
                public var android_hyphen_keystore_hyphen_file_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - android_hyphen_keystore_hyphen_file_hyphen_slug: Android keystore file slug
                public init(
                    app_hyphen_slug: Swift.String,
                    android_hyphen_keystore_hyphen_file_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.android_hyphen_keystore_hyphen_file_hyphen_slug = android_hyphen_keystore_hyphen_file_hyphen_slug
                }
            }
            public var path: Operations.androidKeystoreFileConfirm.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.androidKeystoreFileConfirm.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.androidKeystoreFileConfirm.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.androidKeystoreFileConfirm.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.androidKeystoreFileConfirm.Input.Path,
                headers: Operations.androidKeystoreFileConfirm.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileConfirm.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileConfirm.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/post(androidKeystoreFileConfirm)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.androidKeystoreFileConfirm.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.androidKeystoreFileConfirm.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileConfirm.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileConfirm.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/post(androidKeystoreFileConfirm)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.androidKeystoreFileConfirm.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.androidKeystoreFileConfirm.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileConfirm.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileConfirm.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/post(androidKeystoreFileConfirm)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.androidKeystoreFileConfirm.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.androidKeystoreFileConfirm.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileConfirm.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileConfirm.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/post(androidKeystoreFileConfirm)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.androidKeystoreFileConfirm.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.androidKeystoreFileConfirm.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.androidKeystoreFileConfirm.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.androidKeystoreFileConfirm.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}/uploaded/post(androidKeystoreFileConfirm)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.androidKeystoreFileConfirm.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.androidKeystoreFileConfirm.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List 1000 archived builds of an app
    ///
    /// List the first 1000 archived builds of a specified Bitrise app. Set parameters to filter builds:
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/archived-builds`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/archived-builds/get(archivedBuildsList)`.
    public enum archivedBuildsList {
        public static let id: Swift.String = "archivedBuildsList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.archivedBuildsList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Listed builds should only be the ones which ran after the given date (Unix Timestamp)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/query/after`.
                public var after: Swift.Int
                /// Listed builds should only be the ones which ran before the given date (Unix Timestamp)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/query/before`.
                public var before: Swift.Int
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - after: Listed builds should only be the ones which ran after the given date (Unix Timestamp)
                ///   - before: Listed builds should only be the ones which ran before the given date (Unix Timestamp)
                public init(
                    after: Swift.Int,
                    before: Swift.Int
                ) {
                    self.after = after
                    self.before = before
                }
            }
            public var query: Operations.archivedBuildsList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.archivedBuildsList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.archivedBuildsList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.archivedBuildsList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.archivedBuildsList.Input.Path,
                query: Operations.archivedBuildsList.Input.Query,
                headers: Operations.archivedBuildsList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ArchivedBuildListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ArchivedBuildListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.archivedBuildsList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.archivedBuildsList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/archived-builds/get(archivedBuildsList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.archivedBuildsList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.archivedBuildsList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.archivedBuildsList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.archivedBuildsList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/archived-builds/get(archivedBuildsList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.archivedBuildsList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.archivedBuildsList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.archivedBuildsList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.archivedBuildsList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/archived-builds/get(archivedBuildsList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.archivedBuildsList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.archivedBuildsList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.archivedBuildsList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.archivedBuildsList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/archived-builds/get(archivedBuildsList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.archivedBuildsList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.archivedBuildsList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/archived-builds/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.archivedBuildsList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.archivedBuildsList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/archived-builds/get(archivedBuildsList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.archivedBuildsList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.archivedBuildsList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get bitrise.yml of a specific app
    ///
    /// Get the full `bitrise.yml` configuration of an application, by providing the app slug. It returns the current `bitrise.yml` that is stored on bitrise.io in full, including the trigger map, the different workflows and the Steps.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/bitrise.yml`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/get(appConfigDatastoreShow)`.
    public enum appConfigDatastoreShow {
        public static let id: Swift.String = "appConfigDatastoreShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appConfigDatastoreShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appConfigDatastoreShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appConfigDatastoreShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appConfigDatastoreShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.appConfigDatastoreShow.Input.Path,
                headers: Operations.appConfigDatastoreShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/200/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigDatastoreShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigDatastoreShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// {the bitrise.yml in yml format}
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/get(appConfigDatastoreShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appConfigDatastoreShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appConfigDatastoreShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/400/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigDatastoreShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigDatastoreShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/get(appConfigDatastoreShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appConfigDatastoreShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appConfigDatastoreShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/401/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigDatastoreShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigDatastoreShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/get(appConfigDatastoreShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appConfigDatastoreShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appConfigDatastoreShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/404/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigDatastoreShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigDatastoreShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/get(appConfigDatastoreShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appConfigDatastoreShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appConfigDatastoreShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/GET/responses/500/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigDatastoreShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigDatastoreShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/get(appConfigDatastoreShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appConfigDatastoreShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appConfigDatastoreShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case plainText
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "text/plain":
                    self = .plainText
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .plainText:
                    return "text/plain"
                }
            }
            public static var allCases: [Self] {
                [
                    .plainText
                ]
            }
        }
    }
    /// Upload a new bitrise.yml for your application.
    ///
    /// Upload a new bitrise.yml for your application.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/bitrise.yml`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/post(appConfigCreate)`.
    public enum appConfigCreate {
        public static let id: Swift.String = "appConfigCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appConfigCreate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appConfigCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appConfigCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appConfigCreate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_AppConfigRequestParam)
            }
            public var body: Operations.appConfigCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.appConfigCreate.Input.Path,
                headers: Operations.appConfigCreate.Input.Headers = .init(),
                body: Operations.appConfigCreate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppConfigRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppConfigRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigCreate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigCreate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/post(appConfigCreate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appConfigCreate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appConfigCreate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigCreate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigCreate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/post(appConfigCreate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appConfigCreate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appConfigCreate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/post(appConfigCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appConfigCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appConfigCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/post(appConfigCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appConfigCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appConfigCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appConfigCreate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appConfigCreate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/post(appConfigCreate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appConfigCreate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appConfigCreate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Getting the location of the application's bitrise.yaml
    ///
    /// Getting the location of the application's bitrise.yaml. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/bitrise.yml/config`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/get(appSetupBitriseYmlConfigGet)`.
    public enum appSetupBitriseYmlConfigGet {
        public static let id: Swift.String = "appSetupBitriseYmlConfigGet"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appSetupBitriseYmlConfigGet.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appSetupBitriseYmlConfigGet.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appSetupBitriseYmlConfigGet.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appSetupBitriseYmlConfigGet.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.appSetupBitriseYmlConfigGet.Input.Path,
                headers: Operations.appSetupBitriseYmlConfigGet.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BitriseYMLConfigGetResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BitriseYMLConfigGetResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appSetupBitriseYmlConfigGet.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appSetupBitriseYmlConfigGet.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/get(appSetupBitriseYmlConfigGet)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appSetupBitriseYmlConfigGet.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appSetupBitriseYmlConfigGet.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appSetupBitriseYmlConfigGet.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appSetupBitriseYmlConfigGet.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/get(appSetupBitriseYmlConfigGet)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appSetupBitriseYmlConfigGet.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appSetupBitriseYmlConfigGet.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appSetupBitriseYmlConfigGet.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appSetupBitriseYmlConfigGet.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/get(appSetupBitriseYmlConfigGet)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appSetupBitriseYmlConfigGet.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appSetupBitriseYmlConfigGet.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appSetupBitriseYmlConfigGet.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appSetupBitriseYmlConfigGet.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/get(appSetupBitriseYmlConfigGet)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appSetupBitriseYmlConfigGet.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appSetupBitriseYmlConfigGet.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appSetupBitriseYmlConfigGet.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appSetupBitriseYmlConfigGet.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/get(appSetupBitriseYmlConfigGet)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appSetupBitriseYmlConfigGet.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appSetupBitriseYmlConfigGet.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Changing the location of the application's bitrise.yaml
    ///
    /// Changing the location of the application's bitrise.yaml. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/bitrise.yml/config`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/put(appSetupBitriseYmlConfigUpdate)`.
    public enum appSetupBitriseYmlConfigUpdate {
        public static let id: Swift.String = "appSetupBitriseYmlConfigUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appSetupBitriseYmlConfigUpdate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appSetupBitriseYmlConfigUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appSetupBitriseYmlConfigUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appSetupBitriseYmlConfigUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_BitriseYMLConfigUpdateParams)
            }
            public var body: Operations.appSetupBitriseYmlConfigUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.appSetupBitriseYmlConfigUpdate.Input.Path,
                headers: Operations.appSetupBitriseYmlConfigUpdate.Input.Headers = .init(),
                body: Operations.appSetupBitriseYmlConfigUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                public init() {}
            }
            /// No Content
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/put(appSetupBitriseYmlConfigUpdate)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.appSetupBitriseYmlConfigUpdate.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            public var noContent: Operations.appSetupBitriseYmlConfigUpdate.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appSetupBitriseYmlConfigUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appSetupBitriseYmlConfigUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/put(appSetupBitriseYmlConfigUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appSetupBitriseYmlConfigUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appSetupBitriseYmlConfigUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appSetupBitriseYmlConfigUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appSetupBitriseYmlConfigUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/put(appSetupBitriseYmlConfigUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appSetupBitriseYmlConfigUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appSetupBitriseYmlConfigUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appSetupBitriseYmlConfigUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appSetupBitriseYmlConfigUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/put(appSetupBitriseYmlConfigUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appSetupBitriseYmlConfigUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appSetupBitriseYmlConfigUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/bitrise.yml/config/PUT/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appSetupBitriseYmlConfigUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appSetupBitriseYmlConfigUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/bitrise.yml/config/put(appSetupBitriseYmlConfigUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appSetupBitriseYmlConfigUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appSetupBitriseYmlConfigUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the branches with existing builds of an app's repository
    ///
    /// Lists only those branches of a specified Bitrise app that have existing builds.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/branches`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/branches/get(branchList)`.
    public enum branchList {
        public static let id: Swift.String = "branchList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.branchList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.branchList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.branchList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.branchList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.branchList.Input.Path,
                headers: Operations.branchList.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BranchListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BranchListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.branchList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.branchList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/branches/get(branchList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.branchList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.branchList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.branchList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.branchList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/branches/get(branchList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.branchList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.branchList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.branchList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.branchList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/branches/get(branchList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.branchList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.branchList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.branchList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.branchList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/branches/get(branchList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.branchList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.branchList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/branches/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.branchList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.branchList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/branches/get(branchList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.branchList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.branchList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a list of the build certificates
    ///
    /// List all the build certificates that have been uploaded to a specific app. Read more in our [Listing the uploaded iOS code signing files of an app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-certificates`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/get(buildCertificateList)`.
    public enum buildCertificateList {
        public static let id: Swift.String = "buildCertificateList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.buildCertificateList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Slug of the first build certificate in the response
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/query/next`.
                public var next: Swift.String?
                /// Max number of build certificates per page is 50.
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - next: Slug of the first build certificate in the response
                ///   - limit: Max number of build certificates per page is 50.
                public init(
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.buildCertificateList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildCertificateList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.buildCertificateList.Input.Path,
                query: Operations.buildCertificateList.Input.Query = .init(),
                headers: Operations.buildCertificateList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildCertificateListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildCertificateListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/get(buildCertificateList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildCertificateList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildCertificateList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/get(buildCertificateList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildCertificateList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildCertificateList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/get(buildCertificateList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildCertificateList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildCertificateList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/get(buildCertificateList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildCertificateList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildCertificateList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/get(buildCertificateList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildCertificateList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildCertificateList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a build certificate
    ///
    /// Create a temporary pre-signed upload URL for the build certificate and upload the file to AWS with a simple `curl` request. To complete the uploading process and view your files on the Code Signing tab of your app, continue with the [POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded](https://api-docs.bitrise.io/#/build-certificate/build-certificate-confirm) endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/build-certificates`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/post(buildCertificateCreate)`.
    public enum buildCertificateCreate {
        public static let id: Swift.String = "buildCertificateCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.buildCertificateCreate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildCertificateCreate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_BuildCertificateUploadParams)
            }
            public var body: Operations.buildCertificateCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.buildCertificateCreate.Input.Path,
                headers: Operations.buildCertificateCreate.Input.Headers = .init(),
                body: Operations.buildCertificateCreate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildCertificateResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildCertificateResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateCreate.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateCreate.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/post(buildCertificateCreate)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.buildCertificateCreate.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.buildCertificateCreate.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateCreate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateCreate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/post(buildCertificateCreate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildCertificateCreate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildCertificateCreate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/post(buildCertificateCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildCertificateCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildCertificateCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/post(buildCertificateCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildCertificateCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildCertificateCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateCreate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateCreate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/post(buildCertificateCreate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildCertificateCreate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildCertificateCreate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a specific build certificate
    ///
    /// Retrieve data of a specific build certificate. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint to list all available build certificates of an app. Read more in our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-certificates/{build-certificate-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/get(buildCertificateShow)`.
    public enum buildCertificateShow {
        public static let id: Swift.String = "buildCertificateShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build certificate slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/path/build-certificate-slug`.
                public var build_hyphen_certificate_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_certificate_hyphen_slug: Build certificate slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_certificate_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_certificate_hyphen_slug = build_hyphen_certificate_hyphen_slug
                }
            }
            public var path: Operations.buildCertificateShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildCertificateShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.buildCertificateShow.Input.Path,
                headers: Operations.buildCertificateShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildCertificateResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildCertificateResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/get(buildCertificateShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildCertificateShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildCertificateShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/get(buildCertificateShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildCertificateShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildCertificateShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/get(buildCertificateShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildCertificateShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildCertificateShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/get(buildCertificateShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildCertificateShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildCertificateShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/get(buildCertificateShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildCertificateShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildCertificateShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a build certificate
    ///
    /// Update an uploaded build certificate's attributes. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/build-certificates/{build-certificate-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/patch(buildCertificateUpdate)`.
    public enum buildCertificateUpdate {
        public static let id: Swift.String = "buildCertificateUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build certificate slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/path/build-certificate-slug`.
                public var build_hyphen_certificate_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_certificate_hyphen_slug: Build certificate slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_certificate_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_certificate_hyphen_slug = build_hyphen_certificate_hyphen_slug
                }
            }
            public var path: Operations.buildCertificateUpdate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildCertificateUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_BuildCertificateUpdateParams)
            }
            public var body: Operations.buildCertificateUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.buildCertificateUpdate.Input.Path,
                headers: Operations.buildCertificateUpdate.Input.Headers = .init(),
                body: Operations.buildCertificateUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildCertificateResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildCertificateResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/patch(buildCertificateUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildCertificateUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildCertificateUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/patch(buildCertificateUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildCertificateUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildCertificateUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/patch(buildCertificateUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildCertificateUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildCertificateUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/patch(buildCertificateUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildCertificateUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildCertificateUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/PATCH/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/patch(buildCertificateUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildCertificateUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildCertificateUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a build certificate
    ///
    /// Delete an app's build certificate. You can fetch the build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list) endpoint to list all available build certificates of an app. Read more in our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/delete(buildCertificateDelete)`.
    public enum buildCertificateDelete {
        public static let id: Swift.String = "buildCertificateDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build certificate slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/path/build-certificate-slug`.
                public var build_hyphen_certificate_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_certificate_hyphen_slug: Build certificate slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_certificate_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_certificate_hyphen_slug = build_hyphen_certificate_hyphen_slug
                }
            }
            public var path: Operations.buildCertificateDelete.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildCertificateDelete.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.buildCertificateDelete.Input.Path,
                headers: Operations.buildCertificateDelete.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildCertificateResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildCertificateResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateDelete.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateDelete.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/delete(buildCertificateDelete)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildCertificateDelete.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildCertificateDelete.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateDelete.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateDelete.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/delete(buildCertificateDelete)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildCertificateDelete.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildCertificateDelete.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateDelete.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateDelete.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/delete(buildCertificateDelete)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildCertificateDelete.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildCertificateDelete.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateDelete.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateDelete.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/delete(buildCertificateDelete)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildCertificateDelete.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildCertificateDelete.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateDelete.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateDelete.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/delete(buildCertificateDelete)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildCertificateDelete.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildCertificateDelete.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Confirm a build certificate upload
    ///
    /// This is the last step of uploading a build certificate to Bitrise. Confirm the build certificate upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the iOS code signing file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/post(buildCertificateConfirm)`.
    public enum buildCertificateConfirm {
        public static let id: Swift.String = "buildCertificateConfirm"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build certificate slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/path/build-certificate-slug`.
                public var build_hyphen_certificate_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_certificate_hyphen_slug: Build certificate slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_certificate_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_certificate_hyphen_slug = build_hyphen_certificate_hyphen_slug
                }
            }
            public var path: Operations.buildCertificateConfirm.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateConfirm.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildCertificateConfirm.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildCertificateConfirm.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.buildCertificateConfirm.Input.Path,
                headers: Operations.buildCertificateConfirm.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildCertificateResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildCertificateResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateConfirm.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateConfirm.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/post(buildCertificateConfirm)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildCertificateConfirm.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildCertificateConfirm.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateConfirm.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateConfirm.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/post(buildCertificateConfirm)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildCertificateConfirm.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildCertificateConfirm.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateConfirm.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateConfirm.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/post(buildCertificateConfirm)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildCertificateConfirm.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildCertificateConfirm.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateConfirm.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateConfirm.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/post(buildCertificateConfirm)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildCertificateConfirm.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildCertificateConfirm.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildCertificateConfirm.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildCertificateConfirm.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded/post(buildCertificateConfirm)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildCertificateConfirm.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildCertificateConfirm.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the open build requests for an app
    ///
    /// List the existing open build requests of a specified Bitrise app
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-requests`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/get(buildRequestList)`.
    public enum buildRequestList {
        public static let id: Swift.String = "buildRequestList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.buildRequestList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildRequestList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildRequestList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildRequestList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.buildRequestList.Input.Path,
                headers: Operations.buildRequestList.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildRequestListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildRequestListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/get(buildRequestList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildRequestList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildRequestList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/get(buildRequestList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildRequestList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildRequestList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/get(buildRequestList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildRequestList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildRequestList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/get(buildRequestList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildRequestList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildRequestList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/get(buildRequestList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildRequestList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildRequestList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a build request
    ///
    /// Update a specific build request of a specific app
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/build-requests/{build-request-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/{build-request-slug}/patch(buildRequestUpdate)`.
    public enum buildRequestUpdate {
        public static let id: Swift.String = "buildRequestUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build request slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/path/build-request-slug`.
                public var build_hyphen_request_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_request_hyphen_slug: Build request slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_request_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_request_hyphen_slug = build_hyphen_request_hyphen_slug
                }
            }
            public var path: Operations.buildRequestUpdate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildRequestUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildRequestUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildRequestUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_BuildRequestUpdateParams)
            }
            public var body: Operations.buildRequestUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.buildRequestUpdate.Input.Path,
                headers: Operations.buildRequestUpdate.Input.Headers = .init(),
                body: Operations.buildRequestUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildRequestUpdateResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildRequestUpdateResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/{build-request-slug}/patch(buildRequestUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildRequestUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildRequestUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/{build-request-slug}/patch(buildRequestUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildRequestUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildRequestUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/{build-request-slug}/patch(buildRequestUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildRequestUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildRequestUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/{build-request-slug}/patch(buildRequestUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildRequestUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildRequestUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-requests/{build-request-slug}/PATCH/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildRequestUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildRequestUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-requests/{build-request-slug}/patch(buildRequestUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildRequestUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildRequestUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the workflows of an app
    ///
    /// List the workflows that were triggered at any time for a given Bitrise app. Note that it might list workflows that are currently not defined in the app's `bitrise.yml` configuration - and conversely, workflows that were never triggered will not be listed even if they are defined in the `bitrise.yml` file.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/build-workflows`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/build-workflows/get(buildWorkflowList)`.
    public enum buildWorkflowList {
        public static let id: Swift.String = "buildWorkflowList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.buildWorkflowList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildWorkflowList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildWorkflowList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildWorkflowList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.buildWorkflowList.Input.Path,
                headers: Operations.buildWorkflowList.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildWorkflowListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildWorkflowListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildWorkflowList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildWorkflowList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-workflows/get(buildWorkflowList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildWorkflowList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildWorkflowList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildWorkflowList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildWorkflowList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-workflows/get(buildWorkflowList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildWorkflowList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildWorkflowList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildWorkflowList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildWorkflowList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-workflows/get(buildWorkflowList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildWorkflowList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildWorkflowList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildWorkflowList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildWorkflowList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-workflows/get(buildWorkflowList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildWorkflowList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildWorkflowList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/build-workflows/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildWorkflowList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildWorkflowList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/build-workflows/get(buildWorkflowList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildWorkflowList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildWorkflowList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all builds of an app
    ///
    /// List all the builds of a specified Bitrise app. Set parameters to filter builds: for example, you can search for builds run with a given workflow or all builds that were triggered by Pull Requests. It returns all the relevant data of the build.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/get(buildList)`.
    public enum buildList {
        public static let id: Swift.String = "buildList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.buildList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/sort_by`.
                @frozen public enum sort_byPayload: String, Codable, Hashable, Sendable {
                    case running_first = "running_first"
                    case created_at = "created_at"
                }
                /// Order of builds: sort them based on when they were created or the time when they were triggered
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/sort_by`.
                public var sort_by: Operations.buildList.Input.Query.sort_byPayload?
                /// The branch which was built
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/branch`.
                public var branch: Swift.String?
                /// The name of the workflow used for the build
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/workflow`.
                public var workflow: Swift.String?
                /// The commit message of the build
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/commit_message`.
                public var commit_message: Swift.String?
                /// The event that triggered the build (push, pull-request, tag)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/trigger_event_type`.
                public var trigger_event_type: Swift.String?
                /// The id of the pull request that triggered the build
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/pull_request_id`.
                public var pull_request_id: Swift.Int?
                /// The build number
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/build_number`.
                public var build_number: Swift.Int?
                /// List builds run after a given date (Unix Timestamp)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/after`.
                public var after: Swift.Int?
                /// List builds run before a given date (Unix Timestamp)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/before`.
                public var before: Swift.Int?
                /// The status of the build: not finished (0), successful (1), failed (2), aborted with failure (3), aborted with success (4)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/status`.
                public var status: Swift.Int?
                /// Whether the builds are part of a pipeline or not
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/is_pipeline_build`.
                public var is_pipeline_build: Swift.Bool?
                /// Slug of the first build in the response
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 50)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - sort_by: Order of builds: sort them based on when they were created or the time when they were triggered
                ///   - branch: The branch which was built
                ///   - workflow: The name of the workflow used for the build
                ///   - commit_message: The commit message of the build
                ///   - trigger_event_type: The event that triggered the build (push, pull-request, tag)
                ///   - pull_request_id: The id of the pull request that triggered the build
                ///   - build_number: The build number
                ///   - after: List builds run after a given date (Unix Timestamp)
                ///   - before: List builds run before a given date (Unix Timestamp)
                ///   - status: The status of the build: not finished (0), successful (1), failed (2), aborted with failure (3), aborted with success (4)
                ///   - is_pipeline_build: Whether the builds are part of a pipeline or not
                ///   - next: Slug of the first build in the response
                ///   - limit: Max number of elements per page (default: 50)
                public init(
                    sort_by: Operations.buildList.Input.Query.sort_byPayload? = nil,
                    branch: Swift.String? = nil,
                    workflow: Swift.String? = nil,
                    commit_message: Swift.String? = nil,
                    trigger_event_type: Swift.String? = nil,
                    pull_request_id: Swift.Int? = nil,
                    build_number: Swift.Int? = nil,
                    after: Swift.Int? = nil,
                    before: Swift.Int? = nil,
                    status: Swift.Int? = nil,
                    is_pipeline_build: Swift.Bool? = nil,
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.sort_by = sort_by
                    self.branch = branch
                    self.workflow = workflow
                    self.commit_message = commit_message
                    self.trigger_event_type = trigger_event_type
                    self.pull_request_id = pull_request_id
                    self.build_number = build_number
                    self.after = after
                    self.before = before
                    self.status = status
                    self.is_pipeline_build = is_pipeline_build
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.buildList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.buildList.Input.Path,
                query: Operations.buildList.Input.Query = .init(),
                headers: Operations.buildList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/get(buildList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/get(buildList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/get(buildList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/get(buildList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/get(buildList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Trigger a new build/pipeline
    ///
    /// Trigger a new build/pipeline. Specify an app slug and at least one parameter out of three: a git tag or git commit hash, a branch, or a workflow/pipeline ID. You can also set specific parameters for Pull Request builds/pipelines and define additional environment variables for your build/pipeline. [Check out our detailed guide](https://devcenter.bitrise.io/api/build-trigger/).
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/builds`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/post(buildTrigger)`.
    public enum buildTrigger {
        public static let id: Swift.String = "buildTrigger"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.buildTrigger.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildTrigger.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildTrigger.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildTrigger.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_BuildTriggerParams)
            }
            public var body: Operations.buildTrigger.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.buildTrigger.Input.Path,
                headers: Operations.buildTrigger.Input.Headers = .init(),
                body: Operations.buildTrigger.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildTriggerRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildTriggerRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildTrigger.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildTrigger.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/post(buildTrigger)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.buildTrigger.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.buildTrigger.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildTrigger.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildTrigger.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/post(buildTrigger)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildTrigger.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildTrigger.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildTrigger.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildTrigger.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/post(buildTrigger)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildTrigger.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildTrigger.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildTrigger.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildTrigger.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/post(buildTrigger)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildTrigger.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildTrigger.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildTrigger.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildTrigger.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/post(buildTrigger)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildTrigger.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildTrigger.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a build of a given app
    ///
    /// Get the specified build of a given Bitrise app. You need to provide both an app slug and a build slug. You can get the build slug either by calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list) endpoint or by clicking on the build on bitrise.io and copying the slug from the URL. The endpoint returns all the relevant data of the build.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/get(buildShow)`.
    public enum buildShow {
        public static let id: Swift.String = "buildShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/path/build-slug`.
                public var build_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_slug: Build slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_slug = build_hyphen_slug
                }
            }
            public var path: Operations.buildShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.buildShow.Input.Path,
                headers: Operations.buildShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildShowResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildShowResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/get(buildShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/get(buildShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/get(buildShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/get(buildShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/get(buildShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Abort a specific build
    ///
    /// Abort a specific build. Set an abort reason with the `abort_reason` parameter. Use the `abort_with_success` parameter to abort a build but still count it as a successful one.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/builds/{build-slug}/abort`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/abort/post(buildAbort)`.
    public enum buildAbort {
        public static let id: Swift.String = "buildAbort"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/path/build-slug`.
                public var build_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_slug: Build slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_slug = build_hyphen_slug
                }
            }
            public var path: Operations.buildAbort.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildAbort.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildAbort.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildAbort.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_BuildAbortParams)
            }
            public var body: Operations.buildAbort.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.buildAbort.Input.Path,
                headers: Operations.buildAbort.Input.Headers = .init(),
                body: Operations.buildAbort.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildAbortResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildAbortResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildAbort.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildAbort.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/abort/post(buildAbort)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildAbort.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildAbort.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildAbort.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildAbort.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/abort/post(buildAbort)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildAbort.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildAbort.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildAbort.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildAbort.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/abort/post(buildAbort)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildAbort.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildAbort.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildAbort.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildAbort.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/abort/post(buildAbort)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildAbort.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildAbort.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/429/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildAbort.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildAbort.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Too Many Requests
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/abort/post(buildAbort)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.buildAbort.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            public var tooManyRequests: Operations.buildAbort.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/abort/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildAbort.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildAbort.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/abort/post(buildAbort)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildAbort.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildAbort.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a list of all build artifacts
    ///
    /// List all build artifacts that have been generated for an app's build. This endpoint can retrieve artifacts from the archive as well. You can use the created build artifact slugs from the response output to retrieve data of a specific build artifact with the [GET/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-show) endpoint or update a build artifact with the [PATCH/apps](https://api-docs.bitrise.io/#/build-artifact/artifact-update) endpoint.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/artifacts`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/get(artifactList)`.
    public enum artifactList {
        public static let id: Swift.String = "artifactList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/path/build-slug`.
                public var build_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_slug: Build slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_slug = build_hyphen_slug
                }
            }
            public var path: Operations.artifactList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Slug of the first build artifact in the response
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/query/next`.
                public var next: Swift.String?
                /// Max number of build artifacts per page is 50.
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - next: Slug of the first build artifact in the response
                ///   - limit: Max number of build artifacts per page is 50.
                public init(
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.artifactList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.artifactList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.artifactList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.artifactList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.artifactList.Input.Path,
                query: Operations.artifactList.Input.Query = .init(),
                headers: Operations.artifactList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ArtifactListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ArtifactListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/get(artifactList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.artifactList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.artifactList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/get(artifactList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.artifactList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.artifactList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/get(artifactList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.artifactList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.artifactList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/get(artifactList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.artifactList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.artifactList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/get(artifactList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.artifactList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.artifactList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a specific build artifact
    ///
    /// Retrieve data of a specific build artifact. The endpoint can retrieve archived artifacts as well. The response output contains a time-limited download url (expires in 10 minutes) and a public install-page URL. You can view the build artifact with both URLs, but the public install-page url will not work unless you [enable it](https://devcenter.bitrise.io/tutorials/deploy/bitrise-app-deployment/#enabling-public-page-for-the-app).
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/get(artifactShow)`.
    public enum artifactShow {
        public static let id: Swift.String = "artifactShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/path/build-slug`.
                public var build_hyphen_slug: Swift.String
                /// Artifact slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/path/artifact-slug`.
                public var artifact_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_slug: Build slug
                ///   - artifact_hyphen_slug: Artifact slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_slug: Swift.String,
                    artifact_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_slug = build_hyphen_slug
                    self.artifact_hyphen_slug = artifact_hyphen_slug
                }
            }
            public var path: Operations.artifactShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Setting this will result in a redirect to the artifact download location
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/query/download`.
                public var download: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - download: Setting this will result in a redirect to the artifact download location
                public init(download: Swift.Int? = nil) {
                    self.download = download
                }
            }
            public var query: Operations.artifactShow.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.artifactShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.artifactShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.artifactShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.artifactShow.Input.Path,
                query: Operations.artifactShow.Input.Query = .init(),
                headers: Operations.artifactShow.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ArtifactShowResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ArtifactShowResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/get(artifactShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.artifactShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.artifactShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/get(artifactShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.artifactShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.artifactShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/get(artifactShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.artifactShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.artifactShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/get(artifactShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.artifactShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.artifactShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/get(artifactShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.artifactShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.artifactShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a build artifact
    ///
    /// Update the `is_public_page_enabled` attribute of your app's build. The required parameters are app slug, build slug and artifact slug. You can fetch the build artifact slug if you first list all build artifacts of an app with the [GET /apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list) endpoint.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/patch(artifactUpdate)`.
    public enum artifactUpdate {
        public static let id: Swift.String = "artifactUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/path/build-slug`.
                public var build_hyphen_slug: Swift.String
                /// Artifact slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/path/artifact-slug`.
                public var artifact_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_slug: Build slug
                ///   - artifact_hyphen_slug: Artifact slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_slug: Swift.String,
                    artifact_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_slug = build_hyphen_slug
                    self.artifact_hyphen_slug = artifact_hyphen_slug
                }
            }
            public var path: Operations.artifactUpdate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.artifactUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.artifactUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.artifactUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_ArtifactUpdateParams)
            }
            public var body: Operations.artifactUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.artifactUpdate.Input.Path,
                headers: Operations.artifactUpdate.Input.Headers = .init(),
                body: Operations.artifactUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ArtifactShowResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ArtifactShowResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/patch(artifactUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.artifactUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.artifactUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/patch(artifactUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.artifactUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.artifactUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/patch(artifactUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.artifactUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.artifactUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/patch(artifactUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.artifactUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.artifactUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/PATCH/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/patch(artifactUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.artifactUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.artifactUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a build artifact
    ///
    /// Delete a build artifact of an app's build. The required parameters are app slug, build slug and artifact slug. You can fetch the build artifact slug if you first list all build artifacts of an app with the [/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list) endpoint.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/delete(artifactDelete)`.
    public enum artifactDelete {
        public static let id: Swift.String = "artifactDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/path/build-slug`.
                public var build_hyphen_slug: Swift.String
                /// Artifact slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/path/artifact-slug`.
                public var artifact_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_slug: Build slug
                ///   - artifact_hyphen_slug: Artifact slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_slug: Swift.String,
                    artifact_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_slug = build_hyphen_slug
                    self.artifact_hyphen_slug = artifact_hyphen_slug
                }
            }
            public var path: Operations.artifactDelete.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.artifactDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.artifactDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.artifactDelete.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.artifactDelete.Input.Path,
                headers: Operations.artifactDelete.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ArtifactDeleteResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ArtifactDeleteResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactDelete.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactDelete.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/delete(artifactDelete)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.artifactDelete.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.artifactDelete.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactDelete.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactDelete.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/delete(artifactDelete)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.artifactDelete.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.artifactDelete.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactDelete.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactDelete.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/delete(artifactDelete)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.artifactDelete.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.artifactDelete.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactDelete.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactDelete.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/delete(artifactDelete)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.artifactDelete.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.artifactDelete.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.artifactDelete.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.artifactDelete.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}/delete(artifactDelete)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.artifactDelete.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.artifactDelete.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get the bitrise.yml of a build
    ///
    /// Get the bitrise.yml file of one of the builds of a given app. This will return the `bitrise.yml` configuration with which the build ran. You can compare it to [the current bitrise.yml configuration](https://api-docs.bitrise.io/#/application/app-config-datastore-show) of the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/bitrise.yml`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/bitrise.yml/get(buildBitriseYmlShow)`.
    public enum buildBitriseYmlShow {
        public static let id: Swift.String = "buildBitriseYmlShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/path/build-slug`.
                public var build_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_slug: Build slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_slug = build_hyphen_slug
                }
            }
            public var path: Operations.buildBitriseYmlShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildBitriseYmlShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildBitriseYmlShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildBitriseYmlShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.buildBitriseYmlShow.Input.Path,
                headers: Operations.buildBitriseYmlShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/200/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildBitriseYmlShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildBitriseYmlShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// {the bitrise.yml in yml format}
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/bitrise.yml/get(buildBitriseYmlShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildBitriseYmlShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildBitriseYmlShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/400/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildBitriseYmlShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildBitriseYmlShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/bitrise.yml/get(buildBitriseYmlShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildBitriseYmlShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildBitriseYmlShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/401/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildBitriseYmlShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildBitriseYmlShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/bitrise.yml/get(buildBitriseYmlShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildBitriseYmlShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildBitriseYmlShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/404/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildBitriseYmlShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildBitriseYmlShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/bitrise.yml/get(buildBitriseYmlShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildBitriseYmlShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildBitriseYmlShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/bitrise.yml/GET/responses/500/content/text\/plain`.
                    case plainText(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.plainText`.
                    ///
                    /// - Throws: An error if `self` is not `.plainText`.
                    /// - SeeAlso: `.plainText`.
                    public var plainText: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .plainText(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildBitriseYmlShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildBitriseYmlShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/bitrise.yml/get(buildBitriseYmlShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildBitriseYmlShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildBitriseYmlShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case plainText
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "text/plain":
                    self = .plainText
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .plainText:
                    return "text/plain"
                }
            }
            public static var allCases: [Self] {
                [
                    .plainText
                ]
            }
        }
    }
    /// Get the build log of a build
    ///
    /// Get the build log of a specified build of a Bitrise app. You can get the build slug either by calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list) endpoint or by clicking on the build on bitrise.io and copying the slug from the URL. Preview of the log is returned in `log_chunks` field in JSON format. You can download the full raw log in txt by using the signed url returned in `expiring_raw_log_url`. Be aware that this url is expiring in 10 minutes!
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/builds/{build-slug}/log`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/log/get(buildLog)`.
    public enum buildLog {
        public static let id: Swift.String = "buildLog"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Build slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/path/build-slug`.
                public var build_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - build_hyphen_slug: Build slug
                public init(
                    app_hyphen_slug: Swift.String,
                    build_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.build_hyphen_slug = build_hyphen_slug
                }
            }
            public var path: Operations.buildLog.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildLog.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildLog.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildLog.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.buildLog.Input.Path,
                headers: Operations.buildLog.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildLog.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildLog.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/log/get(buildLog)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildLog.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildLog.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildLog.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildLog.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/log/get(buildLog)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildLog.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildLog.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildLog.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildLog.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/log/get(buildLog)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildLog.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildLog.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/builds/{build-slug}/log/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildLog.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildLog.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/builds/{build-slug}/log/get(buildLog)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildLog.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildLog.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the key-value cache items belonging to an app
    ///
    /// List all the available cache items that the builds of the app created via the save-cache step.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/cache-items`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/get(cacheList)`.
    public enum cacheList {
        public static let id: Swift.String = "cacheList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.cacheList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Getting cache items created before the given parameter (RFC3339 time format, default: now)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 100)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - next: Getting cache items created before the given parameter (RFC3339 time format, default: now)
                ///   - limit: Max number of elements per page (default: 100)
                public init(
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.cacheList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.cacheList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.cacheList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.cacheList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.cacheList.Input.Path,
                query: Operations.cacheList.Input.Query = .init(),
                headers: Operations.cacheList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_CacheItemListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_CacheItemListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/get(cacheList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.cacheList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.cacheList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/get(cacheList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.cacheList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.cacheList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/get(cacheList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.cacheList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.cacheList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/get(cacheList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.cacheList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.cacheList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/get(cacheList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.cacheList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.cacheList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Deletes all key-value cache items belonging to an app
    ///
    /// Deletes all key-value cache items created by the builds of an app. Deleted cache items are no longer accessible and cannot be restored.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/cache-items`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/delete(cacheItemDeleteAll)`.
    public enum cacheItemDeleteAll {
        public static let id: Swift.String = "cacheItemDeleteAll"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.cacheItemDeleteAll.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.cacheItemDeleteAll.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.cacheItemDeleteAll.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.cacheItemDeleteAll.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.cacheItemDeleteAll.Input.Path,
                headers: Operations.cacheItemDeleteAll.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                public init() {}
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/delete(cacheItemDeleteAll)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.cacheItemDeleteAll.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.cacheItemDeleteAll.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDeleteAll.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDeleteAll.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/delete(cacheItemDeleteAll)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.cacheItemDeleteAll.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.cacheItemDeleteAll.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDeleteAll.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDeleteAll.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/delete(cacheItemDeleteAll)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.cacheItemDeleteAll.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.cacheItemDeleteAll.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDeleteAll.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDeleteAll.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/delete(cacheItemDeleteAll)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.cacheItemDeleteAll.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.cacheItemDeleteAll.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDeleteAll.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDeleteAll.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/delete(cacheItemDeleteAll)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.cacheItemDeleteAll.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.cacheItemDeleteAll.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Deletes a key-value cache item
    ///
    /// Deletes a key-value cache item. Deleted cache items are no longer accessible and cannot be restored.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/cache-items/{cache-item-id}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/delete(cacheItemDelete)`.
    public enum cacheItemDelete {
        public static let id: Swift.String = "cacheItemDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// The ID of the cache item to be deleted
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/path/cache-item-id`.
                public var cache_hyphen_item_hyphen_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - cache_hyphen_item_hyphen_id: The ID of the cache item to be deleted
                public init(
                    app_hyphen_slug: Swift.String,
                    cache_hyphen_item_hyphen_id: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.cache_hyphen_item_hyphen_id = cache_hyphen_item_hyphen_id
                }
            }
            public var path: Operations.cacheItemDelete.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.cacheItemDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.cacheItemDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.cacheItemDelete.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.cacheItemDelete.Input.Path,
                headers: Operations.cacheItemDelete.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                public init() {}
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/delete(cacheItemDelete)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.cacheItemDelete.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.cacheItemDelete.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDelete.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDelete.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/delete(cacheItemDelete)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.cacheItemDelete.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.cacheItemDelete.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDelete.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDelete.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/delete(cacheItemDelete)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.cacheItemDelete.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.cacheItemDelete.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDelete.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDelete.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/delete(cacheItemDelete)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.cacheItemDelete.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.cacheItemDelete.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDelete.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDelete.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/delete(cacheItemDelete)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.cacheItemDelete.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.cacheItemDelete.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Gets the download URL of a key-value cache item
    ///
    /// Gets a download URL of a cache item.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/cache-items/{cache-item-id}/download`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/download/get(cacheItemDownload)`.
    public enum cacheItemDownload {
        public static let id: Swift.String = "cacheItemDownload"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// The ID of the cache item to be downloaded
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/path/cache-item-id`.
                public var cache_hyphen_item_hyphen_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - cache_hyphen_item_hyphen_id: The ID of the cache item to be downloaded
                public init(
                    app_hyphen_slug: Swift.String,
                    cache_hyphen_item_hyphen_id: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.cache_hyphen_item_hyphen_id = cache_hyphen_item_hyphen_id
                }
            }
            public var path: Operations.cacheItemDownload.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.cacheItemDownload.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.cacheItemDownload.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.cacheItemDownload.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.cacheItemDownload.Input.Path,
                headers: Operations.cacheItemDownload.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_CacheItemDownloadResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_CacheItemDownloadResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDownload.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDownload.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/download/get(cacheItemDownload)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.cacheItemDownload.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.cacheItemDownload.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDownload.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDownload.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/download/get(cacheItemDownload)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.cacheItemDownload.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.cacheItemDownload.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDownload.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDownload.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/download/get(cacheItemDownload)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.cacheItemDownload.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.cacheItemDownload.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDownload.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDownload.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/download/get(cacheItemDownload)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.cacheItemDownload.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.cacheItemDownload.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/cache-items/{cache-item-id}/download/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.cacheItemDownload.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.cacheItemDownload.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/cache-items/{cache-item-id}/download/get(cacheItemDownload)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.cacheItemDownload.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.cacheItemDownload.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Save the application at the end of the app registration process
    ///
    /// Save the application after registering it on Bitrise and registering an SSH key (and, optionally, adding a webhook). With this endpoint you can define the initial configuration, define application-level environment variables, determine the project type, and set an Organization to be the owner of the app. Read more about the app registration process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app).
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/finish`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/finish/post(appFinish)`.
    public enum appFinish {
        public static let id: Swift.String = "appFinish"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appFinish.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appFinish.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appFinish.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appFinish.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_AppFinishParams)
            }
            public var body: Operations.appFinish.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.appFinish.Input.Path,
                headers: Operations.appFinish.Input.Headers = .init(),
                body: Operations.appFinish.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppFinishRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppFinishRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appFinish.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appFinish.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/finish/post(appFinish)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appFinish.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appFinish.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appFinish.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appFinish.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/finish/post(appFinish)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appFinish.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appFinish.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appFinish.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appFinish.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/finish/post(appFinish)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appFinish.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appFinish.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appFinish.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appFinish.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/finish/post(appFinish)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appFinish.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appFinish.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/finish/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appFinish.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appFinish.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/finish/post(appFinish)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appFinish.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appFinish.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a list of the generic project files
    ///
    /// List all the generic project files that have been uploaded to a specific app. Read more in our [Listing the uploaded files of an app](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#listing-the-uploaded-files-of-an-app) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/generic-project-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/get(genericProjectFileList)`.
    public enum genericProjectFileList {
        public static let id: Swift.String = "genericProjectFileList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.genericProjectFileList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Slug of the first generic project file in the response
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/query/next`.
                public var next: Swift.String?
                /// Max number of build certificates per page is 50.
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - next: Slug of the first generic project file in the response
                ///   - limit: Max number of build certificates per page is 50.
                public init(
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.genericProjectFileList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.genericProjectFileList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.genericProjectFileList.Input.Path,
                query: Operations.genericProjectFileList.Input.Query = .init(),
                headers: Operations.genericProjectFileList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/get(genericProjectFileList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.genericProjectFileList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.genericProjectFileList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/get(genericProjectFileList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.genericProjectFileList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.genericProjectFileList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/get(genericProjectFileList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.genericProjectFileList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.genericProjectFileList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/get(genericProjectFileList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.genericProjectFileList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.genericProjectFileList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/get(genericProjectFileList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.genericProjectFileList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.genericProjectFileList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a generic project file
    ///
    /// Create a temporary pre-signed upload URL (expires in 10 minutes) for the generic project file and upload it to AWS with a simple `curl` request. To complete the uploading process and view your files on the Code Signing tab of your app, continue with the [POST /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-confirm) endpoint. Read more in our [Creating and uploading files to Generic File Storage](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#creating-and-uploading-files-to-generic-file-storage) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/generic-project-files`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/post(genericProjectFilesCreate)`.
    public enum genericProjectFilesCreate {
        public static let id: Swift.String = "genericProjectFilesCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.genericProjectFilesCreate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFilesCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFilesCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.genericProjectFilesCreate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_ProjectFileStorageUploadParams)
            }
            public var body: Operations.genericProjectFilesCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.genericProjectFilesCreate.Input.Path,
                headers: Operations.genericProjectFilesCreate.Input.Headers = .init(),
                body: Operations.genericProjectFilesCreate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageUploadResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageUploadResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFilesCreate.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFilesCreate.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/post(genericProjectFilesCreate)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.genericProjectFilesCreate.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.genericProjectFilesCreate.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFilesCreate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFilesCreate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/post(genericProjectFilesCreate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.genericProjectFilesCreate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.genericProjectFilesCreate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFilesCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFilesCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/post(genericProjectFilesCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.genericProjectFilesCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.genericProjectFilesCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFilesCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFilesCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/post(genericProjectFilesCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.genericProjectFilesCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.genericProjectFilesCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFilesCreate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFilesCreate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/post(genericProjectFilesCreate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.genericProjectFilesCreate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.genericProjectFilesCreate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a specific generic project file
    ///
    /// Retrieve data of a specific generic project file to check its attributes and optionally modify them with the [PATCH /apps/](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-update) endpoint. Read more in our [Retrieving a specific file's data](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#retrieving-a-specific-files-data) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/get(genericProjectFileShow)`.
    public enum genericProjectFileShow {
        public static let id: Swift.String = "genericProjectFileShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Generic project file slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/path/generic-project-file-slug`.
                public var generic_hyphen_project_hyphen_file_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - generic_hyphen_project_hyphen_file_hyphen_slug: Generic project file slug
                public init(
                    app_hyphen_slug: Swift.String,
                    generic_hyphen_project_hyphen_file_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.generic_hyphen_project_hyphen_file_hyphen_slug = generic_hyphen_project_hyphen_file_hyphen_slug
                }
            }
            public var path: Operations.genericProjectFileShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.genericProjectFileShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.genericProjectFileShow.Input.Path,
                headers: Operations.genericProjectFileShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageDownloadResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageDownloadResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/get(genericProjectFileShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.genericProjectFileShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.genericProjectFileShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/get(genericProjectFileShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.genericProjectFileShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.genericProjectFileShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/get(genericProjectFileShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.genericProjectFileShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.genericProjectFileShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/get(genericProjectFileShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.genericProjectFileShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.genericProjectFileShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/get(genericProjectFileShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.genericProjectFileShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.genericProjectFileShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a generic project file
    ///
    /// Update a generic project file's attributes. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Updating an uploaded file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#updating-an-uploaded-file) guide.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/generic-project-files/{generic-project-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/patch(genericProjectFileUpdate)`.
    public enum genericProjectFileUpdate {
        public static let id: Swift.String = "genericProjectFileUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Generic project file slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/path/generic-project-file-slug`.
                public var generic_hyphen_project_hyphen_file_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - generic_hyphen_project_hyphen_file_hyphen_slug: Generic project file slug
                public init(
                    app_hyphen_slug: Swift.String,
                    generic_hyphen_project_hyphen_file_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.generic_hyphen_project_hyphen_file_hyphen_slug = generic_hyphen_project_hyphen_file_hyphen_slug
                }
            }
            public var path: Operations.genericProjectFileUpdate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.genericProjectFileUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_ProjectFileStorageDocumentUpdateParams)
            }
            public var body: Operations.genericProjectFileUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.genericProjectFileUpdate.Input.Path,
                headers: Operations.genericProjectFileUpdate.Input.Headers = .init(),
                body: Operations.genericProjectFileUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/patch(genericProjectFileUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.genericProjectFileUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.genericProjectFileUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/patch(genericProjectFileUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.genericProjectFileUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.genericProjectFileUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/patch(genericProjectFileUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.genericProjectFileUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.genericProjectFileUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/patch(genericProjectFileUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.genericProjectFileUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.genericProjectFileUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/PATCH/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/patch(genericProjectFileUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.genericProjectFileUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.genericProjectFileUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a generic project file
    ///
    /// Delete an app's generic project file. You can fetch an app's generic project file slug if you first list all the uploaded files with the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list) endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#deleting-a-file) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/generic-project-files/{generic-project-file-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/delete(genericProjectFileDelete)`.
    public enum genericProjectFileDelete {
        public static let id: Swift.String = "genericProjectFileDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Generic project file slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/path/generic-project-file-slug`.
                public var generic_hyphen_project_hyphen_file_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - generic_hyphen_project_hyphen_file_hyphen_slug: Generic project file slug
                public init(
                    app_hyphen_slug: Swift.String,
                    generic_hyphen_project_hyphen_file_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.generic_hyphen_project_hyphen_file_hyphen_slug = generic_hyphen_project_hyphen_file_hyphen_slug
                }
            }
            public var path: Operations.genericProjectFileDelete.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.genericProjectFileDelete.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.genericProjectFileDelete.Input.Path,
                headers: Operations.genericProjectFileDelete.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileDelete.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileDelete.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/delete(genericProjectFileDelete)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.genericProjectFileDelete.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.genericProjectFileDelete.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileDelete.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileDelete.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/delete(genericProjectFileDelete)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.genericProjectFileDelete.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.genericProjectFileDelete.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileDelete.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileDelete.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/delete(genericProjectFileDelete)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.genericProjectFileDelete.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.genericProjectFileDelete.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileDelete.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileDelete.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/delete(genericProjectFileDelete)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.genericProjectFileDelete.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.genericProjectFileDelete.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileDelete.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileDelete.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/delete(genericProjectFileDelete)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.genericProjectFileDelete.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.genericProjectFileDelete.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Confirm a generic project file upload
    ///
    /// This is the last step of uploading a generic project file to Bitrise. Confirm the generic project file upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/post(genericProjectFileConfirm)`.
    public enum genericProjectFileConfirm {
        public static let id: Swift.String = "genericProjectFileConfirm"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Generic project file slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/path/generic-project-file-slug`.
                public var generic_hyphen_project_hyphen_file_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - generic_hyphen_project_hyphen_file_hyphen_slug: Generic project file slug
                public init(
                    app_hyphen_slug: Swift.String,
                    generic_hyphen_project_hyphen_file_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.generic_hyphen_project_hyphen_file_hyphen_slug = generic_hyphen_project_hyphen_file_hyphen_slug
                }
            }
            public var path: Operations.genericProjectFileConfirm.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileConfirm.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.genericProjectFileConfirm.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.genericProjectFileConfirm.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.genericProjectFileConfirm.Input.Path,
                headers: Operations.genericProjectFileConfirm.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProjectFileStorageResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProjectFileStorageResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileConfirm.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileConfirm.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/post(genericProjectFileConfirm)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.genericProjectFileConfirm.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.genericProjectFileConfirm.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileConfirm.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileConfirm.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/post(genericProjectFileConfirm)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.genericProjectFileConfirm.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.genericProjectFileConfirm.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileConfirm.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileConfirm.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/post(genericProjectFileConfirm)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.genericProjectFileConfirm.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.genericProjectFileConfirm.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileConfirm.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileConfirm.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/post(genericProjectFileConfirm)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.genericProjectFileConfirm.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.genericProjectFileConfirm.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.genericProjectFileConfirm.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.genericProjectFileConfirm.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded/post(genericProjectFileConfirm)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.genericProjectFileConfirm.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.genericProjectFileConfirm.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the outgoing webhooks of an app
    ///
    /// List all the outgoing webhooks registered for a specified Bitrise app. This returns all the relevant data of the webhook, including the slug of the webhook and its URL.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/outgoing-webhooks`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/get(outgoingWebhookList)`.
    public enum outgoingWebhookList {
        public static let id: Swift.String = "outgoingWebhookList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.outgoingWebhookList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Slug of the first webhook in the response
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 50)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - next: Slug of the first webhook in the response
                ///   - limit: Max number of elements per page (default: 50)
                public init(
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.outgoingWebhookList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.outgoingWebhookList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.outgoingWebhookList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.outgoingWebhookList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.outgoingWebhookList.Input.Path,
                query: Operations.outgoingWebhookList.Input.Query = .init(),
                headers: Operations.outgoingWebhookList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppWebhookListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppWebhookListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/get(outgoingWebhookList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.outgoingWebhookList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.outgoingWebhookList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/get(outgoingWebhookList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.outgoingWebhookList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.outgoingWebhookList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/get(outgoingWebhookList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.outgoingWebhookList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.outgoingWebhookList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/get(outgoingWebhookList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.outgoingWebhookList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.outgoingWebhookList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create an outgoing webhook for an app
    ///
    /// Create an outgoing webhook for a specified Bitrise app: this can be used to send build events to a specified URL with custom headers. Currently, only build events can trigger outgoing webhooks.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/outgoing-webhooks`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/post(outgoingWebhookCreate)`.
    public enum outgoingWebhookCreate {
        public static let id: Swift.String = "outgoingWebhookCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.outgoingWebhookCreate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.outgoingWebhookCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.outgoingWebhookCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.outgoingWebhookCreate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/requestBody/content/*\/*`.
                case any(OpenAPIRuntime.HTTPBody)
            }
            public var body: Operations.outgoingWebhookCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.outgoingWebhookCreate.Input.Path,
                headers: Operations.outgoingWebhookCreate.Input.Headers = .init(),
                body: Operations.outgoingWebhookCreate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppWebhookCreatedResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppWebhookCreatedResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookCreate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookCreate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/post(outgoingWebhookCreate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.outgoingWebhookCreate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.outgoingWebhookCreate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookCreate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookCreate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/post(outgoingWebhookCreate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.outgoingWebhookCreate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.outgoingWebhookCreate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/post(outgoingWebhookCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.outgoingWebhookCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.outgoingWebhookCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/post(outgoingWebhookCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.outgoingWebhookCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.outgoingWebhookCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookCreate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookCreate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/post(outgoingWebhookCreate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.outgoingWebhookCreate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.outgoingWebhookCreate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update an outgoing webhook of an app
    ///
    /// Update an existing outgoing webhook (URL, events, secrets and headers) for a specified Bitrise app. Even if you do not want to change one of the parameters, you still have to provide that parameter as well: simply use its existing value.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/put(outgoingWebhookUpdate)`.
    public enum outgoingWebhookUpdate {
        public static let id: Swift.String = "outgoingWebhookUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// App webhook slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/path/app-webhook-slug`.
                public var app_hyphen_webhook_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - app_hyphen_webhook_hyphen_slug: App webhook slug
                public init(
                    app_hyphen_slug: Swift.String,
                    app_hyphen_webhook_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.app_hyphen_webhook_hyphen_slug = app_hyphen_webhook_hyphen_slug
                }
            }
            public var path: Operations.outgoingWebhookUpdate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.outgoingWebhookUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.outgoingWebhookUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.outgoingWebhookUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/requestBody/content/*\/*`.
                case any(OpenAPIRuntime.HTTPBody)
            }
            public var body: Operations.outgoingWebhookUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.outgoingWebhookUpdate.Input.Path,
                headers: Operations.outgoingWebhookUpdate.Input.Headers = .init(),
                body: Operations.outgoingWebhookUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppWebhookResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppWebhookResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/put(outgoingWebhookUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.outgoingWebhookUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.outgoingWebhookUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/put(outgoingWebhookUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.outgoingWebhookUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.outgoingWebhookUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/put(outgoingWebhookUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.outgoingWebhookUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.outgoingWebhookUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/put(outgoingWebhookUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.outgoingWebhookUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.outgoingWebhookUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/PUT/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/put(outgoingWebhookUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.outgoingWebhookUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.outgoingWebhookUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete an outgoing webhook of an app
    ///
    /// Delete an existing outgoing webhook for a specified Bitrise app.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delete(outgoingWebhookDelete)`.
    public enum outgoingWebhookDelete {
        public static let id: Swift.String = "outgoingWebhookDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// App webhook slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/path/app-webhook-slug`.
                public var app_hyphen_webhook_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - app_hyphen_webhook_hyphen_slug: App webhook slug
                public init(
                    app_hyphen_slug: Swift.String,
                    app_hyphen_webhook_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.app_hyphen_webhook_hyphen_slug = app_hyphen_webhook_hyphen_slug
                }
            }
            public var path: Operations.outgoingWebhookDelete.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.outgoingWebhookDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.outgoingWebhookDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.outgoingWebhookDelete.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.outgoingWebhookDelete.Input.Path,
                headers: Operations.outgoingWebhookDelete.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppWebhookDeletedResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppWebhookDeletedResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookDelete.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookDelete.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delete(outgoingWebhookDelete)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.outgoingWebhookDelete.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.outgoingWebhookDelete.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookDelete.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookDelete.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delete(outgoingWebhookDelete)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.outgoingWebhookDelete.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.outgoingWebhookDelete.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookDelete.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookDelete.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delete(outgoingWebhookDelete)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.outgoingWebhookDelete.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.outgoingWebhookDelete.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookDelete.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookDelete.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delete(outgoingWebhookDelete)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.outgoingWebhookDelete.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.outgoingWebhookDelete.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.outgoingWebhookDelete.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.outgoingWebhookDelete.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delete(outgoingWebhookDelete)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.outgoingWebhookDelete.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.outgoingWebhookDelete.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the webhook delivery items of an app
    ///
    /// List all the delivery items of an outgoing webhook of a Bitrise application
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/get(webhookDeliveryItemList)`.
    public enum webhookDeliveryItemList {
        public static let id: Swift.String = "webhookDeliveryItemList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// App webhook slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/path/app-webhook-slug`.
                public var app_hyphen_webhook_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - app_hyphen_webhook_hyphen_slug: App webhook slug
                public init(
                    app_hyphen_slug: Swift.String,
                    app_hyphen_webhook_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.app_hyphen_webhook_hyphen_slug = app_hyphen_webhook_hyphen_slug
                }
            }
            public var path: Operations.webhookDeliveryItemList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Slug of the first delivery item in the response
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 50)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - next: Slug of the first delivery item in the response
                ///   - limit: Max number of elements per page (default: 50)
                public init(
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.webhookDeliveryItemList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.webhookDeliveryItemList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.webhookDeliveryItemList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.webhookDeliveryItemList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.webhookDeliveryItemList.Input.Path,
                query: Operations.webhookDeliveryItemList.Input.Query = .init(),
                headers: Operations.webhookDeliveryItemList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_WebhookDeliveryItemShowResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_WebhookDeliveryItemShowResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/get(webhookDeliveryItemList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.webhookDeliveryItemList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.webhookDeliveryItemList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/get(webhookDeliveryItemList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.webhookDeliveryItemList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.webhookDeliveryItemList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/get(webhookDeliveryItemList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.webhookDeliveryItemList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.webhookDeliveryItemList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/get(webhookDeliveryItemList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.webhookDeliveryItemList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.webhookDeliveryItemList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a specific delivery item of a webhook
    ///
    /// Get the specified delivery item of an outgoing webhook of a Bitrise application
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/get(webhookDeliveryItemShow)`.
    public enum webhookDeliveryItemShow {
        public static let id: Swift.String = "webhookDeliveryItemShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// App webhook slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/path/app-webhook-slug`.
                public var app_hyphen_webhook_hyphen_slug: Swift.String
                /// Webhook delivery item slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/path/webhook-delivery-item-slug`.
                public var webhook_hyphen_delivery_hyphen_item_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - app_hyphen_webhook_hyphen_slug: App webhook slug
                ///   - webhook_hyphen_delivery_hyphen_item_hyphen_slug: Webhook delivery item slug
                public init(
                    app_hyphen_slug: Swift.String,
                    app_hyphen_webhook_hyphen_slug: Swift.String,
                    webhook_hyphen_delivery_hyphen_item_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.app_hyphen_webhook_hyphen_slug = app_hyphen_webhook_hyphen_slug
                    self.webhook_hyphen_delivery_hyphen_item_hyphen_slug = webhook_hyphen_delivery_hyphen_item_hyphen_slug
                }
            }
            public var path: Operations.webhookDeliveryItemShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.webhookDeliveryItemShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.webhookDeliveryItemShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.webhookDeliveryItemShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.webhookDeliveryItemShow.Input.Path,
                headers: Operations.webhookDeliveryItemShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_WebhookDeliveryItemResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_WebhookDeliveryItemResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/get(webhookDeliveryItemShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.webhookDeliveryItemShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.webhookDeliveryItemShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/get(webhookDeliveryItemShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.webhookDeliveryItemShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.webhookDeliveryItemShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/get(webhookDeliveryItemShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.webhookDeliveryItemShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.webhookDeliveryItemShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/get(webhookDeliveryItemShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.webhookDeliveryItemShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.webhookDeliveryItemShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Re-deliver the webhook delivery items of an app
    ///
    /// Re-deliver the delivery item of a specified webhook of a Bitrise application
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/post(webhookDeliveryItemRedeliver)`.
    public enum webhookDeliveryItemRedeliver {
        public static let id: Swift.String = "webhookDeliveryItemRedeliver"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// App webhook slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/path/app-webhook-slug`.
                public var app_hyphen_webhook_hyphen_slug: Swift.String
                /// Webhook delivery item slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/path/webhook-delivery-item-slug`.
                public var webhook_hyphen_delivery_hyphen_item_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - app_hyphen_webhook_hyphen_slug: App webhook slug
                ///   - webhook_hyphen_delivery_hyphen_item_hyphen_slug: Webhook delivery item slug
                public init(
                    app_hyphen_slug: Swift.String,
                    app_hyphen_webhook_hyphen_slug: Swift.String,
                    webhook_hyphen_delivery_hyphen_item_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.app_hyphen_webhook_hyphen_slug = app_hyphen_webhook_hyphen_slug
                    self.webhook_hyphen_delivery_hyphen_item_hyphen_slug = webhook_hyphen_delivery_hyphen_item_hyphen_slug
                }
            }
            public var path: Operations.webhookDeliveryItemRedeliver.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.webhookDeliveryItemRedeliver.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.webhookDeliveryItemRedeliver.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.webhookDeliveryItemRedeliver.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.webhookDeliveryItemRedeliver.Input.Path,
                headers: Operations.webhookDeliveryItemRedeliver.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemRedeliver.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemRedeliver.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/post(webhookDeliveryItemRedeliver)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.webhookDeliveryItemRedeliver.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.webhookDeliveryItemRedeliver.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemRedeliver.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemRedeliver.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/post(webhookDeliveryItemRedeliver)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.webhookDeliveryItemRedeliver.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.webhookDeliveryItemRedeliver.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemRedeliver.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemRedeliver.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/post(webhookDeliveryItemRedeliver)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.webhookDeliveryItemRedeliver.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.webhookDeliveryItemRedeliver.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.webhookDeliveryItemRedeliver.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.webhookDeliveryItemRedeliver.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver/post(webhookDeliveryItemRedeliver)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.webhookDeliveryItemRedeliver.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.webhookDeliveryItemRedeliver.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all pipelines and standalone builds of an app
    ///
    /// List all the pipelines and standalone builds of a specified Bitrise app. Set parameters to filter pipelines: for example, you can search for pipelines/standalone builds run with a given workflow name or all pipelines/standalone builds that were triggered by Pull Requests. It returns all the relevant data of the pipelines/standalone builds.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/pipelines`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/get(pipelineList)`.
    public enum pipelineList {
        public static let id: Swift.String = "pipelineList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.pipelineList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query`.
            public struct Query: Sendable, Hashable {
                /// List pipelines/standalone builds run after a given date (RFC3339 time format)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/after`.
                public var after: Swift.String?
                /// List pipelines/standalone builds run before a given date (RFC3339 time format) - was called 'next' earlier
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/before`.
                public var before: Swift.String?
                /// The branch which was built
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/branch`.
                public var branch: Swift.String?
                /// The pipeline/standalone build number
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/build_number`.
                public var build_number: Swift.Int?
                /// The commit message of the pipeline/standalone build
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/commit_message`.
                public var commit_message: Swift.String?
                /// Max number of elements per page - default: 10
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/limit`.
                public var limit: Swift.Int?
                /// List pipelines/standalone builds run before a given date (RFC3339 time format) - deprecated
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/next`.
                public var next: Swift.String?
                /// Name of the pipeline
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/pipeline`.
                public var pipeline: Swift.String?
                /// The status of the pipeline/standalone build: on_hold, running, succeeded, failed, aborted, succeeded_with_abort
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/status`.
                public var status: Swift.String?
                /// The event that triggered the pipeline/standalone build (push, pull-request, tag)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/trigger_event_type`.
                public var trigger_event_type: Swift.String?
                /// The name of the workflow used for the pipeline/standalone build
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/query/workflow`.
                public var workflow: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - after: List pipelines/standalone builds run after a given date (RFC3339 time format)
                ///   - before: List pipelines/standalone builds run before a given date (RFC3339 time format) - was called 'next' earlier
                ///   - branch: The branch which was built
                ///   - build_number: The pipeline/standalone build number
                ///   - commit_message: The commit message of the pipeline/standalone build
                ///   - limit: Max number of elements per page - default: 10
                ///   - next: List pipelines/standalone builds run before a given date (RFC3339 time format) - deprecated
                ///   - pipeline: Name of the pipeline
                ///   - status: The status of the pipeline/standalone build: on_hold, running, succeeded, failed, aborted, succeeded_with_abort
                ///   - trigger_event_type: The event that triggered the pipeline/standalone build (push, pull-request, tag)
                ///   - workflow: The name of the workflow used for the pipeline/standalone build
                public init(
                    after: Swift.String? = nil,
                    before: Swift.String? = nil,
                    branch: Swift.String? = nil,
                    build_number: Swift.Int? = nil,
                    commit_message: Swift.String? = nil,
                    limit: Swift.Int? = nil,
                    next: Swift.String? = nil,
                    pipeline: Swift.String? = nil,
                    status: Swift.String? = nil,
                    trigger_event_type: Swift.String? = nil,
                    workflow: Swift.String? = nil
                ) {
                    self.after = after
                    self.before = before
                    self.branch = branch
                    self.build_number = build_number
                    self.commit_message = commit_message
                    self.limit = limit
                    self.next = next
                    self.pipeline = pipeline
                    self.status = status
                    self.trigger_event_type = trigger_event_type
                    self.workflow = workflow
                }
            }
            public var query: Operations.pipelineList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.pipelineList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.pipelineList.Input.Path,
                query: Operations.pipelineList.Input.Query = .init(),
                headers: Operations.pipelineList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_PipelineListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_PipelineListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/get(pipelineList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.pipelineList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.pipelineList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/get(pipelineList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.pipelineList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.pipelineList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/get(pipelineList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.pipelineList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.pipelineList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/get(pipelineList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.pipelineList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.pipelineList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/get(pipelineList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.pipelineList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.pipelineList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a pipeline of a given app
    ///
    /// Get the specified pipeline of a given Bitrise app. You need to provide both an app slug and a pipeline id. You can get the pipeline id either by calling the [/pipelines](https://api-docs.bitrise.io/#/pipelines/pipeline-list) endpoint or by clicking on the pipeline on bitrise.io and copying the id from the URL. The endpoint returns all the relevant data of the pipeline.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/pipelines/{pipeline-id}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/get(pipelineShow)`.
    public enum pipelineShow {
        public static let id: Swift.String = "pipelineShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Pipeline id
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/path/pipeline-id`.
                public var pipeline_hyphen_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - pipeline_hyphen_id: Pipeline id
                public init(
                    app_hyphen_slug: Swift.String,
                    pipeline_hyphen_id: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.pipeline_hyphen_id = pipeline_hyphen_id
                }
            }
            public var path: Operations.pipelineShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.pipelineShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.pipelineShow.Input.Path,
                headers: Operations.pipelineShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_PipelineShowResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_PipelineShowResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/get(pipelineShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.pipelineShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.pipelineShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/get(pipelineShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.pipelineShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.pipelineShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/get(pipelineShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.pipelineShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.pipelineShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/get(pipelineShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.pipelineShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.pipelineShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/get(pipelineShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.pipelineShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.pipelineShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Aborts a pipeline
    ///
    /// Aborts a pipeline. You need to provide the app slug and the id of the pipeline. You can add an abort reason, choose to skip notifications and make the abort with success state.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/pipelines/{pipeline-id}/abort`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/abort/post(pipelineAbort)`.
    public enum pipelineAbort {
        public static let id: Swift.String = "pipelineAbort"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Pipeline id
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/path/pipeline-id`.
                public var pipeline_hyphen_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - pipeline_hyphen_id: Pipeline id
                public init(
                    app_hyphen_slug: Swift.String,
                    pipeline_hyphen_id: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.pipeline_hyphen_id = pipeline_hyphen_id
                }
            }
            public var path: Operations.pipelineAbort.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineAbort.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineAbort.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.pipelineAbort.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/requestBody/content/*\/*`.
                case any(OpenAPIRuntime.HTTPBody)
            }
            public var body: Operations.pipelineAbort.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.pipelineAbort.Input.Path,
                headers: Operations.pipelineAbort.Input.Headers = .init(),
                body: Operations.pipelineAbort.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                public init() {}
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/abort/post(pipelineAbort)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.pipelineAbort.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.pipelineAbort.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineAbort.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineAbort.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/abort/post(pipelineAbort)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.pipelineAbort.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.pipelineAbort.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineAbort.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineAbort.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/abort/post(pipelineAbort)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.pipelineAbort.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.pipelineAbort.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineAbort.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineAbort.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/abort/post(pipelineAbort)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.pipelineAbort.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.pipelineAbort.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/abort/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineAbort.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineAbort.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/abort/post(pipelineAbort)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.pipelineAbort.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.pipelineAbort.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Rebuilds a pipeline
    ///
    /// Rebuilds a pipeline. You can rebuild the whole pipeline or only the unsuccessful and subsequent workflows by setting the partial flag to true.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/pipelines/{pipeline-id}/rebuild`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/rebuild/post(pipelineRebuild)`.
    public enum pipelineRebuild {
        public static let id: Swift.String = "pipelineRebuild"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Pipeline id
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/path/pipeline-id`.
                public var pipeline_hyphen_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - pipeline_hyphen_id: Pipeline id
                public init(
                    app_hyphen_slug: Swift.String,
                    pipeline_hyphen_id: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.pipeline_hyphen_id = pipeline_hyphen_id
                }
            }
            public var path: Operations.pipelineRebuild.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineRebuild.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineRebuild.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.pipelineRebuild.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/requestBody/content/*\/*`.
                case any(OpenAPIRuntime.HTTPBody)
            }
            public var body: Operations.pipelineRebuild.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.pipelineRebuild.Input.Path,
                headers: Operations.pipelineRebuild.Input.Headers = .init(),
                body: Operations.pipelineRebuild.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// Creates a new `Created`.
                public init() {}
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/rebuild/post(pipelineRebuild)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.pipelineRebuild.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.pipelineRebuild.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineRebuild.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineRebuild.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/rebuild/post(pipelineRebuild)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.pipelineRebuild.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.pipelineRebuild.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineRebuild.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineRebuild.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/rebuild/post(pipelineRebuild)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.pipelineRebuild.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.pipelineRebuild.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineRebuild.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineRebuild.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/rebuild/post(pipelineRebuild)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.pipelineRebuild.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.pipelineRebuild.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct PreconditionFailed: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/412/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/412/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineRebuild.Output.PreconditionFailed.Body
                /// Creates a new `PreconditionFailed`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineRebuild.Output.PreconditionFailed.Body) {
                    self.body = body
                }
            }
            /// Precondition Failed
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/rebuild/post(pipelineRebuild)/responses/412`.
            ///
            /// HTTP response code: `412 preconditionFailed`.
            case preconditionFailed(Operations.pipelineRebuild.Output.PreconditionFailed)
            /// The associated value of the enum case if `self` is `.preconditionFailed`.
            ///
            /// - Throws: An error if `self` is not `.preconditionFailed`.
            /// - SeeAlso: `.preconditionFailed`.
            public var preconditionFailed: Operations.pipelineRebuild.Output.PreconditionFailed {
                get throws {
                    switch self {
                    case let .preconditionFailed(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "preconditionFailed",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/pipelines/{pipeline-id}/rebuild/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineRebuild.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineRebuild.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/pipelines/{pipeline-id}/rebuild/post(pipelineRebuild)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.pipelineRebuild.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.pipelineRebuild.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a list of the provisioning profiles
    ///
    /// List all the provisioning profiles that have been uploaded to a specific app. Read more in our [Listing the uploaded iOS code signing files of an app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/provisioning-profiles`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/get(provisioningProfileList)`.
    public enum provisioningProfileList {
        public static let id: Swift.String = "provisioningProfileList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.provisioningProfileList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Slug of the first provisioning profile in the response
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 50)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - next: Slug of the first provisioning profile in the response
                ///   - limit: Max number of elements per page (default: 50)
                public init(
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.provisioningProfileList.Input.Query
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.provisioningProfileList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.provisioningProfileList.Input.Path,
                query: Operations.provisioningProfileList.Input.Query = .init(),
                headers: Operations.provisioningProfileList.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProvisionProfileListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProvisionProfileListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/get(provisioningProfileList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.provisioningProfileList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.provisioningProfileList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/get(provisioningProfileList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.provisioningProfileList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.provisioningProfileList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/get(provisioningProfileList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.provisioningProfileList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.provisioningProfileList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/get(provisioningProfileList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.provisioningProfileList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.provisioningProfileList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/get(provisioningProfileList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.provisioningProfileList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.provisioningProfileList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a provisioning profile
    ///
    /// Create a temporary pre-signed upload URL (expires in 10 minutes) for the provisioning profile and upload it to AWS with a simple `curl` request. To complete the upload process, continue with the [POST /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-confirm) endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/provisioning-profiles`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/post(provisioningProfileCreate)`.
    public enum provisioningProfileCreate {
        public static let id: Swift.String = "provisioningProfileCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.provisioningProfileCreate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.provisioningProfileCreate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_ProvisionProfileUploadParams)
            }
            public var body: Operations.provisioningProfileCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.provisioningProfileCreate.Input.Path,
                headers: Operations.provisioningProfileCreate.Input.Headers = .init(),
                body: Operations.provisioningProfileCreate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProvisionProfileResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProvisionProfileResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileCreate.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileCreate.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/post(provisioningProfileCreate)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.provisioningProfileCreate.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.provisioningProfileCreate.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileCreate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileCreate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/post(provisioningProfileCreate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.provisioningProfileCreate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.provisioningProfileCreate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/post(provisioningProfileCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.provisioningProfileCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.provisioningProfileCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/post(provisioningProfileCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.provisioningProfileCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.provisioningProfileCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileCreate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileCreate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/post(provisioningProfileCreate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.provisioningProfileCreate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.provisioningProfileCreate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a specific provisioning profile
    ///
    /// Retrieve data of a specific provisioning profile. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data) guide.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/get(provisioningProfileShow)`.
    public enum provisioningProfileShow {
        public static let id: Swift.String = "provisioningProfileShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Provisioning profile slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/path/provisioning-profile-slug`.
                public var provisioning_hyphen_profile_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - provisioning_hyphen_profile_hyphen_slug: Provisioning profile slug
                public init(
                    app_hyphen_slug: Swift.String,
                    provisioning_hyphen_profile_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.provisioning_hyphen_profile_hyphen_slug = provisioning_hyphen_profile_hyphen_slug
                }
            }
            public var path: Operations.provisioningProfileShow.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.provisioningProfileShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.provisioningProfileShow.Input.Path,
                headers: Operations.provisioningProfileShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProvisionProfileResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProvisionProfileResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/get(provisioningProfileShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.provisioningProfileShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.provisioningProfileShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/get(provisioningProfileShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.provisioningProfileShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.provisioningProfileShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/get(provisioningProfileShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.provisioningProfileShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.provisioningProfileShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/get(provisioningProfileShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.provisioningProfileShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.provisioningProfileShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/get(provisioningProfileShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.provisioningProfileShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.provisioningProfileShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a provisioning profile
    ///
    /// Update an uploaded provisioning profile's attributes. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/patch(provisioningProfileUpdate)`.
    public enum provisioningProfileUpdate {
        public static let id: Swift.String = "provisioningProfileUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Provisioning profile slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/path/provisioning-profile-slug`.
                public var provisioning_hyphen_profile_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - provisioning_hyphen_profile_hyphen_slug: Provisioning profile slug
                public init(
                    app_hyphen_slug: Swift.String,
                    provisioning_hyphen_profile_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.provisioning_hyphen_profile_hyphen_slug = provisioning_hyphen_profile_hyphen_slug
                }
            }
            public var path: Operations.provisioningProfileUpdate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.provisioningProfileUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_ProvProfileDocumentUpdateParams)
            }
            public var body: Operations.provisioningProfileUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.provisioningProfileUpdate.Input.Path,
                headers: Operations.provisioningProfileUpdate.Input.Headers = .init(),
                body: Operations.provisioningProfileUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProvisionProfileResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProvisionProfileResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/patch(provisioningProfileUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.provisioningProfileUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.provisioningProfileUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/patch(provisioningProfileUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.provisioningProfileUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.provisioningProfileUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/patch(provisioningProfileUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.provisioningProfileUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.provisioningProfileUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/patch(provisioningProfileUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.provisioningProfileUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.provisioningProfileUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/PATCH/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/patch(provisioningProfileUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.provisioningProfileUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.provisioningProfileUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a provisioning profile
    ///
    /// Delete an app's provisioning profile. You can fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list) endpoint. Read more in our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file) guide.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/delete(provisioningProfileDelete)`.
    public enum provisioningProfileDelete {
        public static let id: Swift.String = "provisioningProfileDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Provisioning profile slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/path/provisioning-profile-slug`.
                public var provisioning_hyphen_profile_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - provisioning_hyphen_profile_hyphen_slug: Provisioning profile slug
                public init(
                    app_hyphen_slug: Swift.String,
                    provisioning_hyphen_profile_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.provisioning_hyphen_profile_hyphen_slug = provisioning_hyphen_profile_hyphen_slug
                }
            }
            public var path: Operations.provisioningProfileDelete.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.provisioningProfileDelete.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.provisioningProfileDelete.Input.Path,
                headers: Operations.provisioningProfileDelete.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProvisionProfileResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProvisionProfileResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileDelete.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileDelete.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/delete(provisioningProfileDelete)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.provisioningProfileDelete.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.provisioningProfileDelete.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileDelete.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileDelete.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/delete(provisioningProfileDelete)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.provisioningProfileDelete.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.provisioningProfileDelete.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileDelete.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileDelete.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/delete(provisioningProfileDelete)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.provisioningProfileDelete.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.provisioningProfileDelete.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileDelete.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileDelete.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/delete(provisioningProfileDelete)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.provisioningProfileDelete.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.provisioningProfileDelete.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileDelete.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileDelete.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/delete(provisioningProfileDelete)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.provisioningProfileDelete.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.provisioningProfileDelete.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Confirm a provisioning profile upload
    ///
    /// This is the last step of the upload process. Confirm the provisioning profile upload and view the file on the Code Signing tab of a specific app. Read more in our [Confirming the iOS code signing file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload) guide.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/post(provisioningProfileConfirm)`.
    public enum provisioningProfileConfirm {
        public static let id: Swift.String = "provisioningProfileConfirm"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Provisioning profile slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/path/provisioning-profile-slug`.
                public var provisioning_hyphen_profile_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - provisioning_hyphen_profile_hyphen_slug: Provisioning profile slug
                public init(
                    app_hyphen_slug: Swift.String,
                    provisioning_hyphen_profile_hyphen_slug: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.provisioning_hyphen_profile_hyphen_slug = provisioning_hyphen_profile_hyphen_slug
                }
            }
            public var path: Operations.provisioningProfileConfirm.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileConfirm.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.provisioningProfileConfirm.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.provisioningProfileConfirm.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.provisioningProfileConfirm.Input.Path,
                headers: Operations.provisioningProfileConfirm.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ProvisionProfileResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ProvisionProfileResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileConfirm.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileConfirm.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/post(provisioningProfileConfirm)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.provisioningProfileConfirm.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.provisioningProfileConfirm.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileConfirm.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileConfirm.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/post(provisioningProfileConfirm)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.provisioningProfileConfirm.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.provisioningProfileConfirm.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileConfirm.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileConfirm.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/post(provisioningProfileConfirm)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.provisioningProfileConfirm.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.provisioningProfileConfirm.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileConfirm.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileConfirm.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/post(provisioningProfileConfirm)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.provisioningProfileConfirm.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.provisioningProfileConfirm.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.provisioningProfileConfirm.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.provisioningProfileConfirm.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded/post(provisioningProfileConfirm)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.provisioningProfileConfirm.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.provisioningProfileConfirm.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Add an SSH-key to a specific app
    ///
    /// Add an SSH-key to a specific app. After creating an app, you need to register the SSH key so that Bitrise will be able to access and clone your repository during the build process. This requires the app slug of your newly created app.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/register-ssh-key`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/register-ssh-key/post(sshKeyCreate)`.
    public enum sshKeyCreate {
        public static let id: Swift.String = "sshKeyCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.sshKeyCreate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.sshKeyCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.sshKeyCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.sshKeyCreate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_SSHKeyUploadParams)
            }
            public var body: Operations.sshKeyCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.sshKeyCreate.Input.Path,
                headers: Operations.sshKeyCreate.Input.Headers = .init(),
                body: Operations.sshKeyCreate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_SSHKeyRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_SSHKeyRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.sshKeyCreate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.sshKeyCreate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-ssh-key/post(sshKeyCreate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.sshKeyCreate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.sshKeyCreate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.sshKeyCreate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.sshKeyCreate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-ssh-key/post(sshKeyCreate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.sshKeyCreate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.sshKeyCreate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.sshKeyCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.sshKeyCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-ssh-key/post(sshKeyCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.sshKeyCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.sshKeyCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.sshKeyCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.sshKeyCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-ssh-key/post(sshKeyCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.sshKeyCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.sshKeyCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-ssh-key/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.sshKeyCreate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.sshKeyCreate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-ssh-key/post(sshKeyCreate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.sshKeyCreate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.sshKeyCreate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Register an incoming webhook for a specific application
    ///
    /// [Register an incoming webhook](https://devcenter.bitrise.io/api/incoming-and-outgoing-webhooks/#incoming-webhooks) for a specific application. You can do this during the app registration process or at any other time in an app's life. When calling this endpoint, a webhook is registered at your git provider: this is necessary to automatically trigger builds on Bitrise.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/register-webhook`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/register-webhook/post(appWebhookCreate)`.
    public enum appWebhookCreate {
        public static let id: Swift.String = "appWebhookCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appWebhookCreate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appWebhookCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appWebhookCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appWebhookCreate.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.appWebhookCreate.Input.Path,
                headers: Operations.appWebhookCreate.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_WebhookRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_WebhookRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appWebhookCreate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appWebhookCreate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-webhook/post(appWebhookCreate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appWebhookCreate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appWebhookCreate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appWebhookCreate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appWebhookCreate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-webhook/post(appWebhookCreate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appWebhookCreate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appWebhookCreate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appWebhookCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appWebhookCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-webhook/post(appWebhookCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appWebhookCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appWebhookCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appWebhookCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appWebhookCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-webhook/post(appWebhookCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appWebhookCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appWebhookCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/register-webhook/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appWebhookCreate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appWebhookCreate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/register-webhook/post(appWebhookCreate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appWebhookCreate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appWebhookCreate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a new Apple App Store release for the app.
    ///
    /// Create a new iOS release for the specified app. If the release candidate parameters (`release_branch` and `workflow`) are specified then the latest successful build is automatically picked up as release candidate and if `automatic_testflight_upload` is also turned on, then an upload to TestFlight is started immediately. You can use this endpoint to set up a fully automated release flow.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/releases/app-store`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/app-store/post(releaseCreateAppStore)`.
    public enum releaseCreateAppStore {
        public static let id: Swift.String = "releaseCreateAppStore"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.releaseCreateAppStore.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.releaseCreateAppStore.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.releaseCreateAppStore.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.releaseCreateAppStore.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_ReleaseCreateAppStoreParams)
            }
            public var body: Operations.releaseCreateAppStore.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.releaseCreateAppStore.Input.Path,
                headers: Operations.releaseCreateAppStore.Input.Headers = .init(),
                body: Operations.releaseCreateAppStore.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.v0_period_ReleaseCreateAppStoreRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ReleaseCreateAppStoreRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateAppStore.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateAppStore.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/app-store/post(releaseCreateAppStore)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.releaseCreateAppStore.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.releaseCreateAppStore.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateAppStore.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateAppStore.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/app-store/post(releaseCreateAppStore)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.releaseCreateAppStore.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.releaseCreateAppStore.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateAppStore.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateAppStore.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/app-store/post(releaseCreateAppStore)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.releaseCreateAppStore.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.releaseCreateAppStore.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateAppStore.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateAppStore.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/app-store/post(releaseCreateAppStore)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.releaseCreateAppStore.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.releaseCreateAppStore.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/422/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateAppStore.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateAppStore.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable Entity
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/app-store/post(releaseCreateAppStore)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.releaseCreateAppStore.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            public var unprocessableContent: Operations.releaseCreateAppStore.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/app-store/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateAppStore.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateAppStore.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/app-store/post(releaseCreateAppStore)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.releaseCreateAppStore.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.releaseCreateAppStore.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a new Google Play Store release for the app.
    ///
    /// Create a new android release for the specified app. If the release candidate parameters (`release_branch` and `workflow`) are specified then the latest successful build is automatically picked up as release candidate and if `automatic_play_console_upload` is also turned on, then an upload to Google Play Console is started immediately. You can use this endpoint to set up a fully automated release flow.
    ///
    /// - Remark: HTTP `POST /apps/{app-slug}/releases/google-play`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/google-play/post(releaseCreateGooglePlay)`.
    public enum releaseCreateGooglePlay {
        public static let id: Swift.String = "releaseCreateGooglePlay"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.releaseCreateGooglePlay.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.releaseCreateGooglePlay.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.releaseCreateGooglePlay.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.releaseCreateGooglePlay.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_ReleaseCreateGooglePlayParams)
            }
            public var body: Operations.releaseCreateGooglePlay.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.releaseCreateGooglePlay.Input.Path,
                headers: Operations.releaseCreateGooglePlay.Input.Headers = .init(),
                body: Operations.releaseCreateGooglePlay.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.v0_period_ReleaseCreateGooglePlayRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ReleaseCreateGooglePlayRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateGooglePlay.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateGooglePlay.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/google-play/post(releaseCreateGooglePlay)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.releaseCreateGooglePlay.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.releaseCreateGooglePlay.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateGooglePlay.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateGooglePlay.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/google-play/post(releaseCreateGooglePlay)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.releaseCreateGooglePlay.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.releaseCreateGooglePlay.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateGooglePlay.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateGooglePlay.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/google-play/post(releaseCreateGooglePlay)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.releaseCreateGooglePlay.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.releaseCreateGooglePlay.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateGooglePlay.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateGooglePlay.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/google-play/post(releaseCreateGooglePlay)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.releaseCreateGooglePlay.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.releaseCreateGooglePlay.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/422/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateGooglePlay.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateGooglePlay.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable Entity
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/google-play/post(releaseCreateGooglePlay)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.releaseCreateGooglePlay.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            public var unprocessableContent: Operations.releaseCreateGooglePlay.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/releases/google-play/POST/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.releaseCreateGooglePlay.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.releaseCreateGooglePlay.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/releases/google-play/post(releaseCreateGooglePlay)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.releaseCreateGooglePlay.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.releaseCreateGooglePlay.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Lists group roles for an app
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/roles/{role-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/get(appRolesQuery)`.
    public enum appRolesQuery {
        public static let id: Swift.String = "appRolesQuery"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// Slug of the app
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/path/role-name`.
                @frozen public enum role_hyphen_namePayload: String, Codable, Hashable, Sendable {
                    case admin = "admin"
                    case manager = "manager"
                    case member = "member"
                }
                /// Name of the role being queried, supported values are: admin, manager (equals developer), and member (equals tester/qa)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/path/role-name`.
                public var role_hyphen_name: Operations.appRolesQuery.Input.Path.role_hyphen_namePayload
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: Slug of the app
                ///   - role_hyphen_name: Name of the role being queried, supported values are: admin, manager (equals developer), and member (equals tester/qa)
                public init(
                    app_hyphen_slug: Swift.String,
                    role_hyphen_name: Operations.appRolesQuery.Input.Path.role_hyphen_namePayload
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.role_hyphen_name = role_hyphen_name
                }
            }
            public var path: Operations.appRolesQuery.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appRolesQuery.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appRolesQuery.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appRolesQuery.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.appRolesQuery.Input.Path,
                headers: Operations.appRolesQuery.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/responses/200/content/json/value1`.
                        public var value1: OpenAPIRuntime.OpenAPIObjectContainer
                        /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/responses/200/content/json/value2`.
                        public struct Value2Payload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/responses/200/content/json/value2/groups`.
                            public var groups: [Swift.String]?
                            /// Creates a new `Value2Payload`.
                            ///
                            /// - Parameters:
                            ///   - groups:
                            public init(groups: [Swift.String]? = nil) {
                                self.groups = groups
                            }
                            public enum CodingKeys: String, CodingKey {
                                case groups
                            }
                        }
                        /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/responses/200/content/json/value2`.
                        public var value2: Operations.appRolesQuery.Output.Ok.Body.jsonPayload.Value2Payload
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - value1:
                        ///   - value2:
                        public init(
                            value1: OpenAPIRuntime.OpenAPIObjectContainer,
                            value2: Operations.appRolesQuery.Output.Ok.Body.jsonPayload.Value2Payload
                        ) {
                            self.value1 = value1
                            self.value2 = value2
                        }
                        public init(from decoder: any Decoder) throws {
                            value1 = try .init(from: decoder)
                            value2 = try .init(from: decoder)
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try value1.encode(to: encoder)
                            try value2.encode(to: encoder)
                        }
                    }
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/responses/200/content/application\/json`.
                    case json(Operations.appRolesQuery.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.appRolesQuery.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appRolesQuery.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appRolesQuery.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of group slugs
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/get(appRolesQuery)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appRolesQuery.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appRolesQuery.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appRolesQuery.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appRolesQuery.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/get(appRolesQuery)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appRolesQuery.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appRolesQuery.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Replaces group roles for an app
    ///
    /// Replaces the groups for a given role on an app. Only the given groups will be present for a role on the app after this call.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/roles/{role-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/put(appRolesUpdate)`.
    public enum appRolesUpdate {
        public static let id: Swift.String = "appRolesUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// Slug of the app
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/path/role-name`.
                @frozen public enum role_hyphen_namePayload: String, Codable, Hashable, Sendable {
                    case admin = "admin"
                    case manager = "manager"
                    case member = "member"
                }
                /// Name of the role being modified, supported values are: admin, manager (equals developer), and member (equals tester/qa)
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/path/role-name`.
                public var role_hyphen_name: Operations.appRolesUpdate.Input.Path.role_hyphen_namePayload
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: Slug of the app
                ///   - role_hyphen_name: Name of the role being modified, supported values are: admin, manager (equals developer), and member (equals tester/qa)
                public init(
                    app_hyphen_slug: Swift.String,
                    role_hyphen_name: Operations.appRolesUpdate.Input.Path.role_hyphen_namePayload
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.role_hyphen_name = role_hyphen_name
                }
            }
            public var path: Operations.appRolesUpdate.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appRolesUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appRolesUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appRolesUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/requestBody/content/*\/*`.
                case any(OpenAPIRuntime.HTTPBody)
            }
            public var body: Operations.appRolesUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.appRolesUpdate.Input.Path,
                headers: Operations.appRolesUpdate.Input.Headers = .init(),
                body: Operations.appRolesUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/responses/200/content/json/value1`.
                        public var value1: OpenAPIRuntime.OpenAPIObjectContainer
                        /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/responses/200/content/json/value2`.
                        public struct Value2Payload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/responses/200/content/json/value2/groups`.
                            public var groups: [Swift.String]?
                            /// Creates a new `Value2Payload`.
                            ///
                            /// - Parameters:
                            ///   - groups:
                            public init(groups: [Swift.String]? = nil) {
                                self.groups = groups
                            }
                            public enum CodingKeys: String, CodingKey {
                                case groups
                            }
                        }
                        /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/responses/200/content/json/value2`.
                        public var value2: Operations.appRolesUpdate.Output.Ok.Body.jsonPayload.Value2Payload
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - value1:
                        ///   - value2:
                        public init(
                            value1: OpenAPIRuntime.OpenAPIObjectContainer,
                            value2: Operations.appRolesUpdate.Output.Ok.Body.jsonPayload.Value2Payload
                        ) {
                            self.value1 = value1
                            self.value2 = value2
                        }
                        public init(from decoder: any Decoder) throws {
                            value1 = try .init(from: decoder)
                            value2 = try .init(from: decoder)
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try value1.encode(to: encoder)
                            try value2.encode(to: encoder)
                        }
                    }
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/responses/200/content/application\/json`.
                    case json(Operations.appRolesUpdate.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.appRolesUpdate.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appRolesUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appRolesUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of group slugs
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/put(appRolesUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appRolesUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appRolesUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/responses/422/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/roles/{role-name}/PUT/responses/422/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appRolesUpdate.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appRolesUpdate.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable Entity
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/roles/{role-name}/put(appRolesUpdate)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.appRolesUpdate.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            public var unprocessableContent: Operations.appRolesUpdate.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the application secrets (with no values)
    ///
    /// List the application secrets (with no values). Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/secrets`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/get(secretList)`.
    public enum secretList {
        public static let id: Swift.String = "secretList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.secretList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.secretList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.secretList.Input.Path,
                headers: Operations.secretList.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppSecretListResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppSecretListResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/get(secretList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.secretList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.secretList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/get(secretList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.secretList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.secretList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/get(secretList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.secretList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.secretList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/get(secretList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.secretList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.secretList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/get(secretList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.secretList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.secretList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Upsert an application secret
    ///
    /// Upsert an application secret. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `PUT /apps/{app-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/put(secretUpsert)`.
    public enum secretUpsert {
        public static let id: Swift.String = "secretUpsert"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Secret name
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/path/secret-name`.
                public var secret_hyphen_name: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - secret_hyphen_name: Secret name
                public init(
                    app_hyphen_slug: Swift.String,
                    secret_hyphen_name: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.secret_hyphen_name = secret_hyphen_name
                }
            }
            public var path: Operations.secretUpsert.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretUpsert.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretUpsert.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.secretUpsert.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_AppSecretUpsertParams)
            }
            public var body: Operations.secretUpsert.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.secretUpsert.Input.Path,
                headers: Operations.secretUpsert.Input.Headers = .init(),
                body: Operations.secretUpsert.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// Creates a new `Created`.
                public init() {}
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/put(secretUpsert)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.secretUpsert.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.secretUpsert.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                public init() {}
            }
            /// No Content
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/put(secretUpsert)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.secretUpsert.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            public var noContent: Operations.secretUpsert.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretUpsert.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretUpsert.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/put(secretUpsert)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.secretUpsert.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.secretUpsert.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretUpsert.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretUpsert.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/put(secretUpsert)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.secretUpsert.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.secretUpsert.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretUpsert.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretUpsert.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/put(secretUpsert)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.secretUpsert.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.secretUpsert.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/PUT/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretUpsert.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretUpsert.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/put(secretUpsert)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.secretUpsert.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.secretUpsert.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete an application secret
    ///
    /// Delete an application secret. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `DELETE /apps/{app-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/delete(secretDelete)`.
    public enum secretDelete {
        public static let id: Swift.String = "secretDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Secret name
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/path/secret-name`.
                public var secret_hyphen_name: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - secret_hyphen_name: Secret name
                public init(
                    app_hyphen_slug: Swift.String,
                    secret_hyphen_name: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.secret_hyphen_name = secret_hyphen_name
                }
            }
            public var path: Operations.secretDelete.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.secretDelete.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.secretDelete.Input.Path,
                headers: Operations.secretDelete.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                public init() {}
            }
            /// No Content
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/delete(secretDelete)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.secretDelete.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            public var noContent: Operations.secretDelete.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretDelete.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretDelete.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/delete(secretDelete)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.secretDelete.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.secretDelete.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretDelete.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretDelete.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/delete(secretDelete)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.secretDelete.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.secretDelete.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretDelete.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretDelete.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/delete(secretDelete)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.secretDelete.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.secretDelete.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/DELETE/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretDelete.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretDelete.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/delete(secretDelete)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.secretDelete.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.secretDelete.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get the value of an (unprotected) application secrets
    ///
    /// Get the value of an (unprotected) application secrets. Requires administrator level privileges to the app.
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/secrets/{secret-name}/value`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/value/get(secretValueGet)`.
    public enum secretValueGet {
        public static let id: Swift.String = "secretValueGet"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Secret name
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/path/secret-name`.
                public var secret_hyphen_name: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                ///   - secret_hyphen_name: Secret name
                public init(
                    app_hyphen_slug: Swift.String,
                    secret_hyphen_name: Swift.String
                ) {
                    self.app_hyphen_slug = app_hyphen_slug
                    self.secret_hyphen_name = secret_hyphen_name
                }
            }
            public var path: Operations.secretValueGet.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretValueGet.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretValueGet.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.secretValueGet.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.secretValueGet.Input.Path,
                headers: Operations.secretValueGet.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppSecretGetValueResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppSecretGetValueResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretValueGet.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretValueGet.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/value/get(secretValueGet)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.secretValueGet.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.secretValueGet.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretValueGet.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretValueGet.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/value/get(secretValueGet)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.secretValueGet.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.secretValueGet.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretValueGet.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretValueGet.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/value/get(secretValueGet)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.secretValueGet.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.secretValueGet.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretValueGet.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretValueGet.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/value/get(secretValueGet)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.secretValueGet.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.secretValueGet.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/secrets/{secret-name}/value/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretValueGet.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretValueGet.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/secrets/{secret-name}/value/get(secretValueGet)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.secretValueGet.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.secretValueGet.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the test devices for an app
    ///
    /// List registered test devices of all members of a specified Bitrise app
    ///
    /// - Remark: HTTP `GET /apps/{app-slug}/test-devices`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/test-devices/get(testDeviceList)`.
    public enum testDeviceList {
        public static let id: Swift.String = "testDeviceList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.testDeviceList.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.testDeviceList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.testDeviceList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.testDeviceList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.testDeviceList.Input.Path,
                headers: Operations.testDeviceList.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_TestDeviceListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_TestDeviceListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.testDeviceList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.testDeviceList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/test-devices/get(testDeviceList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.testDeviceList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.testDeviceList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.testDeviceList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.testDeviceList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/test-devices/get(testDeviceList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.testDeviceList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.testDeviceList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.testDeviceList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.testDeviceList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/test-devices/get(testDeviceList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.testDeviceList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.testDeviceList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.testDeviceList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.testDeviceList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/test-devices/get(testDeviceList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.testDeviceList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.testDeviceList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/test-devices/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.testDeviceList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.testDeviceList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/test-devices/get(testDeviceList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.testDeviceList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.testDeviceList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Updates the app's notification settings
    ///
    /// Updates the app's email notification settings with parameters
    ///
    /// - Remark: HTTP `PATCH /apps/{app-slug}/update-email-notifications`.
    /// - Remark: Generated from `#/paths//apps/{app-slug}/update-email-notifications/patch(appNotifications)`.
    public enum appNotifications {
        public static let id: Swift.String = "appNotifications"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// App slug
                ///
                /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/path/app-slug`.
                public var app_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - app_hyphen_slug: App slug
                public init(app_hyphen_slug: Swift.String) {
                    self.app_hyphen_slug = app_hyphen_slug
                }
            }
            public var path: Operations.appNotifications.Input.Path
            /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appNotifications.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appNotifications.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appNotifications.Input.Headers
            /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_AppNotificationSettingsParams)
            }
            public var body: Operations.appNotifications.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.appNotifications.Input.Path,
                headers: Operations.appNotifications.Input.Headers = .init(),
                body: Operations.appNotifications.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppNotificationSettingsUpdateResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppNotificationSettingsUpdateResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appNotifications.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appNotifications.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/update-email-notifications/patch(appNotifications)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appNotifications.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appNotifications.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appNotifications.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appNotifications.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/update-email-notifications/patch(appNotifications)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appNotifications.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appNotifications.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appNotifications.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appNotifications.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/update-email-notifications/patch(appNotifications)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appNotifications.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appNotifications.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appNotifications.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appNotifications.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/update-email-notifications/patch(appNotifications)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appNotifications.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appNotifications.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps/{app-slug}/update-email-notifications/PATCH/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appNotifications.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appNotifications.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//apps/{app-slug}/update-email-notifications/patch(appNotifications)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appNotifications.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appNotifications.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all builds
    ///
    /// List all the Bitrise builds that can be accessed with the authenticated account. Filter builds based on their owner, using the owner slug, or the status of the build.
    ///
    /// - Remark: HTTP `GET /builds`.
    /// - Remark: Generated from `#/paths//builds/get(buildListAll)`.
    public enum buildListAll {
        public static let id: Swift.String = "buildListAll"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/builds/GET/query`.
            public struct Query: Sendable, Hashable {
                /// The slug of the owner of the app or apps
                ///
                /// - Remark: Generated from `#/paths/builds/GET/query/owner_slug`.
                public var owner_slug: Swift.String?
                /// Indicates whether the build has started yet (true: the build hasn't started)
                ///
                /// - Remark: Generated from `#/paths/builds/GET/query/is_on_hold`.
                public var is_on_hold: Swift.Bool?
                /// The status of the build: not finished (0), successful (1), failed (2), aborted with failure (3), aborted with success (4)
                ///
                /// - Remark: Generated from `#/paths/builds/GET/query/status`.
                public var status: Swift.Int?
                /// Slug of the first build in the response
                ///
                /// - Remark: Generated from `#/paths/builds/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 50)
                ///
                /// - Remark: Generated from `#/paths/builds/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - owner_slug: The slug of the owner of the app or apps
                ///   - is_on_hold: Indicates whether the build has started yet (true: the build hasn't started)
                ///   - status: The status of the build: not finished (0), successful (1), failed (2), aborted with failure (3), aborted with success (4)
                ///   - next: Slug of the first build in the response
                ///   - limit: Max number of elements per page (default: 50)
                public init(
                    owner_slug: Swift.String? = nil,
                    is_on_hold: Swift.Bool? = nil,
                    status: Swift.Int? = nil,
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.owner_slug = owner_slug
                    self.is_on_hold = is_on_hold
                    self.status = status
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.buildListAll.Input.Query
            /// - Remark: Generated from `#/paths/builds/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildListAll.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildListAll.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.buildListAll.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.buildListAll.Input.Query = .init(),
                headers: Operations.buildListAll.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/builds/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/builds/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_BuildListAllResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_BuildListAllResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildListAll.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildListAll.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//builds/get(buildListAll)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildListAll.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.buildListAll.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/builds/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/builds/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildListAll.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildListAll.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//builds/get(buildListAll)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildListAll.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.buildListAll.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/builds/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/builds/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildListAll.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildListAll.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//builds/get(buildListAll)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildListAll.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.buildListAll.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/builds/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/builds/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildListAll.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildListAll.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//builds/get(buildListAll)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildListAll.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.buildListAll.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/builds/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/builds/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.buildListAll.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.buildListAll.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//builds/get(buildListAll)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.buildListAll.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.buildListAll.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Add a member to a group
    ///
    /// Add a member to a group
    ///
    /// - Remark: HTTP `POST /groups/{group-slug}/add_member`.
    /// - Remark: Generated from `#/paths//groups/{group-slug}/add_member/post(groupMemberAdd)`.
    public enum groupMemberAdd {
        public static let id: Swift.String = "groupMemberAdd"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/groups/{group-slug}/add_member/POST/path`.
            public struct Path: Sendable, Hashable {
                /// group slug
                ///
                /// - Remark: Generated from `#/paths/groups/{group-slug}/add_member/POST/path/group-slug`.
                public var group_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - group_hyphen_slug: group slug
                public init(group_hyphen_slug: Swift.String) {
                    self.group_hyphen_slug = group_hyphen_slug
                }
            }
            public var path: Operations.groupMemberAdd.Input.Path
            /// - Remark: Generated from `#/paths/groups/{group-slug}/add_member/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/groups/{group-slug}/add_member/POST/requestBody/json`.
                public struct jsonPayload: Codable, Hashable, Sendable {
                    /// user slug
                    ///
                    /// - Remark: Generated from `#/paths/groups/{group-slug}/add_member/POST/requestBody/json/user_id`.
                    public var user_id: Swift.String?
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - user_id: user slug
                    public init(user_id: Swift.String? = nil) {
                        self.user_id = user_id
                    }
                    public enum CodingKeys: String, CodingKey {
                        case user_id
                    }
                }
                /// - Remark: Generated from `#/paths/groups/{group-slug}/add_member/POST/requestBody/content/application\/json`.
                case json(Operations.groupMemberAdd.Input.Body.jsonPayload)
            }
            public var body: Operations.groupMemberAdd.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - body:
            public init(
                path: Operations.groupMemberAdd.Input.Path,
                body: Operations.groupMemberAdd.Input.Body
            ) {
                self.path = path
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// Creates a new `Created`.
                public init() {}
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//groups/{group-slug}/add_member/post(groupMemberAdd)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.groupMemberAdd.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.groupMemberAdd.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// Get your profile info
    ///
    /// Shows the authenticated users profile info
    ///
    /// - Remark: HTTP `GET /me`.
    /// - Remark: Generated from `#/paths//me/get(userProfile)`.
    public enum userProfile {
        public static let id: Swift.String = "userProfile"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/me/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userProfile.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userProfile.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.userProfile.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.userProfile.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_UserProfileRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_UserProfileRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userProfile.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userProfile.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//me/get(userProfile)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.userProfile.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.userProfile.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userProfile.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userProfile.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//me/get(userProfile)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.userProfile.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.userProfile.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userProfile.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userProfile.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//me/get(userProfile)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.userProfile.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.userProfile.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userProfile.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userProfile.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//me/get(userProfile)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.userProfile.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.userProfile.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get list of Bitrise activity events
    ///
    /// List all the Bitrise activity events
    ///
    /// - Remark: HTTP `GET /me/activities`.
    /// - Remark: Generated from `#/paths//me/activities/get(activityList)`.
    public enum activityList {
        public static let id: Swift.String = "activityList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/me/activities/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Slug of the first activity event in the response
                ///
                /// - Remark: Generated from `#/paths/me/activities/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 50)
                ///
                /// - Remark: Generated from `#/paths/me/activities/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - next: Slug of the first activity event in the response
                ///   - limit: Max number of elements per page (default: 50)
                public init(
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.activityList.Input.Query
            /// - Remark: Generated from `#/paths/me/activities/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.activityList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.activityList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.activityList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.activityList.Input.Query = .init(),
                headers: Operations.activityList.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/activities/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/activities/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_ActivityEventListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_ActivityEventListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.activityList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.activityList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//me/activities/get(activityList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.activityList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.activityList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/activities/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/activities/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.activityList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.activityList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//me/activities/get(activityList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.activityList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.activityList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/activities/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/activities/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.activityList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.activityList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//me/activities/get(activityList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.activityList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.activityList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/activities/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/activities/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.activityList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.activityList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//me/activities/get(activityList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.activityList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.activityList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/activities/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/activities/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.activityList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.activityList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//me/activities/get(activityList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.activityList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.activityList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// The subscription plan of the user
    ///
    /// Get the subscription of the user: the current plan, any pending plans, and the duration of a trial period if applicable
    ///
    /// - Remark: HTTP `GET /me/plan`.
    /// - Remark: Generated from `#/paths//me/plan/get(userPlan)`.
    public enum userPlan {
        public static let id: Swift.String = "userPlan"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/me/plan/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userPlan.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userPlan.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.userPlan.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.userPlan.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/plan/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/plan/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_UserPlanRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_UserPlanRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userPlan.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userPlan.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//me/plan/get(userPlan)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.userPlan.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.userPlan.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/plan/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/plan/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userPlan.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userPlan.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//me/plan/get(userPlan)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.userPlan.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.userPlan.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/plan/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/plan/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userPlan.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userPlan.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//me/plan/get(userPlan)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.userPlan.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.userPlan.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/plan/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/plan/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userPlan.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userPlan.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//me/plan/get(userPlan)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.userPlan.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.userPlan.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/me/plan/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/me/plan/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userPlan.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userPlan.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//me/plan/get(userPlan)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.userPlan.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.userPlan.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the organizations that the user is part of
    ///
    /// List all Bitrise organizations that the user is part of
    ///
    /// - Remark: HTTP `GET /organizations`.
    /// - Remark: Generated from `#/paths//organizations/get(orgList)`.
    public enum orgList {
        public static let id: Swift.String = "orgList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.orgList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.orgList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.orgList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.orgList.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_OrganizationListRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_OrganizationListRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//organizations/get(orgList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.orgList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.orgList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//organizations/get(orgList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.orgList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.orgList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/get(orgList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.orgList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.orgList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//organizations/get(orgList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.orgList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.orgList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//organizations/get(orgList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.orgList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.orgList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a specified organization.
    ///
    /// Get a specified Bitrise organization that the user is part of.
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/get(orgShow)`.
    public enum orgShow {
        public static let id: Swift.String = "orgShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: The organization slug
                public init(org_hyphen_slug: Swift.String) {
                    self.org_hyphen_slug = org_hyphen_slug
                }
            }
            public var path: Operations.orgShow.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.orgShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.orgShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.orgShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.orgShow.Input.Path,
                headers: Operations.orgShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_OrganizationRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_OrganizationRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/get(orgShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.orgShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.orgShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/get(orgShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.orgShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.orgShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/get(orgShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.orgShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.orgShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/get(orgShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.orgShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.orgShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.orgShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.orgShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/get(orgShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.orgShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.orgShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get list of the apps for an organization
    ///
    /// List all the available apps owned by a given organization. [Find the organization URL](https://devcenter.bitrise.io/team-management/organizations/org-url/) of the organisations you are part of; be aware that the endpoint will not return any apps if the authenticated account is not a member of the given organisation.
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/apps`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/get(appListByOrganization)`.
    public enum appListByOrganization {
        public static let id: Swift.String = "appListByOrganization"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/path`.
            public struct Path: Sendable, Hashable {
                /// Organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: Organization slug
                public init(org_hyphen_slug: Swift.String) {
                    self.org_hyphen_slug = org_hyphen_slug
                }
            }
            public var path: Operations.appListByOrganization.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/query/sort_by`.
                @frozen public enum sort_byPayload: String, Codable, Hashable, Sendable {
                    case last_build_at = "last_build_at"
                    case created_at = "created_at"
                }
                /// Order of applications: sort them based on when they were created or the time of their last build
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/query/sort_by`.
                public var sort_by: Operations.appListByOrganization.Input.Query.sort_byPayload?
                /// Slug of the first app in the response
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 50)
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/query/limit`.
                public var limit: Swift.Int?
                /// The title of the app
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/query/title`.
                public var title: Swift.String?
                /// The project type of the app (eg. 'ios', 'android')
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/query/project_type`.
                public var project_type: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - sort_by: Order of applications: sort them based on when they were created or the time of their last build
                ///   - next: Slug of the first app in the response
                ///   - limit: Max number of elements per page (default: 50)
                ///   - title: The title of the app
                ///   - project_type: The project type of the app (eg. 'ios', 'android')
                public init(
                    sort_by: Operations.appListByOrganization.Input.Query.sort_byPayload? = nil,
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil,
                    title: Swift.String? = nil,
                    project_type: Swift.String? = nil
                ) {
                    self.sort_by = sort_by
                    self.next = next
                    self.limit = limit
                    self.title = title
                    self.project_type = project_type
                }
            }
            public var query: Operations.appListByOrganization.Input.Query
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appListByOrganization.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appListByOrganization.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appListByOrganization.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.appListByOrganization.Input.Path,
                query: Operations.appListByOrganization.Input.Query = .init(),
                headers: Operations.appListByOrganization.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByOrganization.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByOrganization.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/get(appListByOrganization)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appListByOrganization.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appListByOrganization.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByOrganization.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByOrganization.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/get(appListByOrganization)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appListByOrganization.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appListByOrganization.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByOrganization.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByOrganization.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/get(appListByOrganization)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appListByOrganization.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appListByOrganization.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByOrganization.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByOrganization.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/get(appListByOrganization)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appListByOrganization.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appListByOrganization.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByOrganization.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByOrganization.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/get(appListByOrganization)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appListByOrganization.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appListByOrganization.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Migrate machine types
    ///
    /// Migrates all apps' machine types of an organization from one machine type to another
    ///
    /// - Remark: HTTP `PATCH /organizations/{org-slug}/apps/machine_types`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/machine_types/patch(organizationMachineTypeUpdate)`.
    public enum organizationMachineTypeUpdate {
        public static let id: Swift.String = "organizationMachineTypeUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// Organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: Organization slug
                public init(org_hyphen_slug: Swift.String) {
                    self.org_hyphen_slug = org_hyphen_slug
                }
            }
            public var path: Operations.organizationMachineTypeUpdate.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.organizationMachineTypeUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.organizationMachineTypeUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.organizationMachineTypeUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_OrganizationUpdateMachineTypeParams)
            }
            public var body: Operations.organizationMachineTypeUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.organizationMachineTypeUpdate.Input.Path,
                headers: Operations.organizationMachineTypeUpdate.Input.Headers = .init(),
                body: Operations.organizationMachineTypeUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_OrganizationUpdateMachineTypeResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_OrganizationUpdateMachineTypeResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationMachineTypeUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationMachineTypeUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/machine_types/patch(organizationMachineTypeUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.organizationMachineTypeUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.organizationMachineTypeUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationMachineTypeUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationMachineTypeUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/machine_types/patch(organizationMachineTypeUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.organizationMachineTypeUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.organizationMachineTypeUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationMachineTypeUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationMachineTypeUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/machine_types/patch(organizationMachineTypeUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.organizationMachineTypeUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.organizationMachineTypeUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationMachineTypeUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationMachineTypeUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/machine_types/patch(organizationMachineTypeUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.organizationMachineTypeUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.organizationMachineTypeUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/apps/machine_types/PATCH/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationMachineTypeUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationMachineTypeUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/apps/machine_types/patch(organizationMachineTypeUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.organizationMachineTypeUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.organizationMachineTypeUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List organizations groups
    ///
    /// Lists the groups of an organization
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/groups`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/get(organizationGroupList)`.
    public enum organizationGroupList {
        public static let id: Swift.String = "organizationGroupList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/path`.
            public struct Path: Sendable, Hashable {
                /// organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: organization slug
                public init(org_hyphen_slug: Swift.String) {
                    self.org_hyphen_slug = org_hyphen_slug
                }
            }
            public var path: Operations.organizationGroupList.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.organizationGroupList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.organizationGroupList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.organizationGroupList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.organizationGroupList.Input.Path,
                headers: Operations.organizationGroupList.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/responses/201/content/application\/json`.
                    case json([Components.Schemas.service_period_dto_period_Group])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.service_period_dto_period_Group] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationGroupList.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationGroupList.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/get(organizationGroupList)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.organizationGroupList.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.organizationGroupList.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationGroupList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationGroupList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/get(organizationGroupList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.organizationGroupList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.organizationGroupList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationGroupList.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationGroupList.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/get(organizationGroupList)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.organizationGroupList.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.organizationGroupList.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationGroupList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationGroupList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/get(organizationGroupList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.organizationGroupList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.organizationGroupList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Adds a group to the organization
    ///
    /// Adds a group to the organization
    ///
    /// - Remark: HTTP `POST /organizations/{org-slug}/groups`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/post(organizationGroupAdd)`.
    public enum organizationGroupAdd {
        public static let id: Swift.String = "organizationGroupAdd"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/path`.
            public struct Path: Sendable, Hashable {
                /// organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: organization slug
                public init(org_hyphen_slug: Swift.String) {
                    self.org_hyphen_slug = org_hyphen_slug
                }
            }
            public var path: Operations.organizationGroupAdd.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.organizationGroupAdd.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.organizationGroupAdd.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.organizationGroupAdd.Input.Headers
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/requestBody/json`.
                public struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/requestBody/json/name`.
                    public var name: Swift.String?
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - name:
                    public init(name: Swift.String? = nil) {
                        self.name = name
                    }
                    public enum CodingKeys: String, CodingKey {
                        case name
                    }
                }
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/requestBody/content/application\/json`.
                case json(Operations.organizationGroupAdd.Input.Body.jsonPayload)
            }
            public var body: Operations.organizationGroupAdd.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.organizationGroupAdd.Input.Path,
                headers: Operations.organizationGroupAdd.Input.Headers = .init(),
                body: Operations.organizationGroupAdd.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.service_period_dto_period_Group)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_dto_period_Group {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationGroupAdd.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationGroupAdd.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/post(organizationGroupAdd)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.organizationGroupAdd.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.organizationGroupAdd.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationGroupAdd.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationGroupAdd.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/post(organizationGroupAdd)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.organizationGroupAdd.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.organizationGroupAdd.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationGroupAdd.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationGroupAdd.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/post(organizationGroupAdd)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.organizationGroupAdd.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.organizationGroupAdd.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/groups/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.organizationGroupAdd.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.organizationGroupAdd.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/groups/post(organizationGroupAdd)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.organizationGroupAdd.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.organizationGroupAdd.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List the members of the organization
    ///
    /// List the members of the organization
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/members`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/get(memberList)`.
    public enum memberList {
        public static let id: Swift.String = "memberList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/GET/path`.
            public struct Path: Sendable, Hashable {
                /// organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/GET/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: organization slug
                public init(org_hyphen_slug: Swift.String) {
                    self.org_hyphen_slug = org_hyphen_slug
                }
            }
            public var path: Operations.memberList.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.memberList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.memberList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.memberList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.memberList.Input.Path,
                headers: Operations.memberList.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.service_period_dto_period_Member])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.service_period_dto_period_Member] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.memberList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.memberList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/get(memberList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.memberList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.memberList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.memberList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.memberList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/get(memberList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.memberList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.memberList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.memberList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.memberList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/get(memberList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.memberList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.memberList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Adds a member to the organization
    ///
    /// Adds a member to the organization
    ///
    /// - Remark: HTTP `POST /organizations/{org-slug}/members`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/post(memberAdd)`.
    public enum memberAdd {
        public static let id: Swift.String = "memberAdd"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/path`.
            public struct Path: Sendable, Hashable {
                /// organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: organization slug
                public init(org_hyphen_slug: Swift.String) {
                    self.org_hyphen_slug = org_hyphen_slug
                }
            }
            public var path: Operations.memberAdd.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.memberAdd.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.memberAdd.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.memberAdd.Input.Headers
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/requestBody/json`.
                public struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/requestBody/json/email`.
                    public var email: Swift.String?
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - email:
                    public init(email: Swift.String? = nil) {
                        self.email = email
                    }
                    public enum CodingKeys: String, CodingKey {
                        case email
                    }
                }
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/requestBody/content/application\/json`.
                case json(Operations.memberAdd.Input.Body.jsonPayload)
            }
            public var body: Operations.memberAdd.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.memberAdd.Input.Path,
                headers: Operations.memberAdd.Input.Headers = .init(),
                body: Operations.memberAdd.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.service_period_dto_period_Member)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_dto_period_Member {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.memberAdd.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.memberAdd.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/post(memberAdd)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.memberAdd.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.memberAdd.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.memberAdd.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.memberAdd.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/post(memberAdd)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.memberAdd.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.memberAdd.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.memberAdd.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.memberAdd.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/post(memberAdd)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.memberAdd.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.memberAdd.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/members/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.memberAdd.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.memberAdd.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/members/post(memberAdd)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.memberAdd.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.memberAdd.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get the secrets of an organization
    ///
    /// Get the secrets of an organization
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/secrets`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/get(secretsList)`.
    public enum secretsList {
        public static let id: Swift.String = "secretsList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/path`.
            public struct Path: Sendable, Hashable {
                /// organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: organization slug
                public init(org_hyphen_slug: Swift.String) {
                    self.org_hyphen_slug = org_hyphen_slug
                }
            }
            public var path: Operations.secretsList.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretsList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretsList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.secretsList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.secretsList.Input.Path,
                headers: Operations.secretsList.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.service_period_dto_period_CreatedSecretNoValue])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.service_period_dto_period_CreatedSecretNoValue] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretsList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretsList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Ok
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/get(secretsList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.secretsList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.secretsList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretsList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretsList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/get(secretsList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.secretsList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.secretsList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretsList.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretsList.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/get(secretsList)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.secretsList.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.secretsList.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretsList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretsList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/get(secretsList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.secretsList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.secretsList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a new secret
    ///
    /// Create a new secret
    ///
    /// - Remark: HTTP `POST /organizations/{org-slug}/secrets`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/post(secretCreate)`.
    public enum secretCreate {
        public static let id: Swift.String = "secretCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/path`.
            public struct Path: Sendable, Hashable {
                /// organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: organization slug
                public init(org_hyphen_slug: Swift.String) {
                    self.org_hyphen_slug = org_hyphen_slug
                }
            }
            public var path: Operations.secretCreate.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.secretCreate.Input.Headers
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/requestBody/json`.
                public struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/requestBody/json/expand_in_step_inputs`.
                    public var expand_in_step_inputs: Swift.Bool?
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/requestBody/json/exposed_for_pull_requests`.
                    public var exposed_for_pull_requests: Swift.Bool?
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/requestBody/json/is_protected`.
                    public var is_protected: Swift.Bool?
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/requestBody/json/name`.
                    public var name: Swift.String
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/requestBody/json/scope`.
                    public var scope: Swift.String?
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/requestBody/json/value`.
                    public var value: Swift.String
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - expand_in_step_inputs:
                    ///   - exposed_for_pull_requests:
                    ///   - is_protected:
                    ///   - name:
                    ///   - scope:
                    ///   - value:
                    public init(
                        expand_in_step_inputs: Swift.Bool? = nil,
                        exposed_for_pull_requests: Swift.Bool? = nil,
                        is_protected: Swift.Bool? = nil,
                        name: Swift.String,
                        scope: Swift.String? = nil,
                        value: Swift.String
                    ) {
                        self.expand_in_step_inputs = expand_in_step_inputs
                        self.exposed_for_pull_requests = exposed_for_pull_requests
                        self.is_protected = is_protected
                        self.name = name
                        self.scope = scope
                        self.value = value
                    }
                    public enum CodingKeys: String, CodingKey {
                        case expand_in_step_inputs
                        case exposed_for_pull_requests
                        case is_protected
                        case name
                        case scope
                        case value
                    }
                }
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/requestBody/content/application\/json`.
                case json(Operations.secretCreate.Input.Body.jsonPayload)
            }
            public var body: Operations.secretCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.secretCreate.Input.Path,
                headers: Operations.secretCreate.Input.Headers = .init(),
                body: Operations.secretCreate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.service_period_dto_period_CreatedSecretNoValue)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_dto_period_CreatedSecretNoValue {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretCreate.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretCreate.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Created
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/post(secretCreate)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.secretCreate.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.secretCreate.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretCreate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretCreate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/post(secretCreate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.secretCreate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.secretCreate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretCreate.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretCreate.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/post(secretCreate)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.secretCreate.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.secretCreate.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretCreate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretCreate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/post(secretCreate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.secretCreate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.secretCreate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a single secret by name
    ///
    /// Get a single secret by name, including the value if not protected
    ///
    /// - Remark: HTTP `GET /organizations/{org-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/get(secretsShow)`.
    public enum secretsShow {
        public static let id: Swift.String = "secretsShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// secret name
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/path/secret-name`.
                public var secret_hyphen_name: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: organization slug
                ///   - secret_hyphen_name: secret name
                public init(
                    org_hyphen_slug: Swift.String,
                    secret_hyphen_name: Swift.String
                ) {
                    self.org_hyphen_slug = org_hyphen_slug
                    self.secret_hyphen_name = secret_hyphen_name
                }
            }
            public var path: Operations.secretsShow.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretsShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretsShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.secretsShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.secretsShow.Input.Path,
                headers: Operations.secretsShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/200/content/json/value1`.
                        public var value1: Components.Schemas.service_period_dto_period_CreatedSecretNoValue
                        /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/200/content/json/value2`.
                        public struct Value2Payload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/200/content/json/value2/value`.
                            public var value: Swift.String?
                            /// Creates a new `Value2Payload`.
                            ///
                            /// - Parameters:
                            ///   - value:
                            public init(value: Swift.String? = nil) {
                                self.value = value
                            }
                            public enum CodingKeys: String, CodingKey {
                                case value
                            }
                        }
                        /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/200/content/json/value2`.
                        public var value2: Operations.secretsShow.Output.Ok.Body.jsonPayload.Value2Payload
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - value1:
                        ///   - value2:
                        public init(
                            value1: Components.Schemas.service_period_dto_period_CreatedSecretNoValue,
                            value2: Operations.secretsShow.Output.Ok.Body.jsonPayload.Value2Payload
                        ) {
                            self.value1 = value1
                            self.value2 = value2
                        }
                        public init(from decoder: any Decoder) throws {
                            value1 = try .init(from: decoder)
                            value2 = try .init(from: decoder)
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try value1.encode(to: encoder)
                            try value2.encode(to: encoder)
                        }
                    }
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/200/content/application\/json`.
                    case json(Operations.secretsShow.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.secretsShow.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretsShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretsShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Ok
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/get(secretsShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.secretsShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.secretsShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretsShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretsShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/get(secretsShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.secretsShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.secretsShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretsShow.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretsShow.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/get(secretsShow)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.secretsShow.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.secretsShow.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretsShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretsShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/get(secretsShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.secretsShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.secretsShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update an existing secret
    ///
    /// Update an existing secret. If the secret is protected, only its value can be overridden.
    ///
    /// - Remark: HTTP `PATCH /organizations/{org-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/patch(secretUpdate)`.
    public enum secretUpdate {
        public static let id: Swift.String = "secretUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// secret name
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/path/secret-name`.
                public var secret_hyphen_name: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: organization slug
                ///   - secret_hyphen_name: secret name
                public init(
                    org_hyphen_slug: Swift.String,
                    secret_hyphen_name: Swift.String
                ) {
                    self.org_hyphen_slug = org_hyphen_slug
                    self.secret_hyphen_name = secret_hyphen_name
                }
            }
            public var path: Operations.secretUpdate.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.secretUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/requestBody/json`.
                public struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/requestBody/json/expand_in_step_inputs`.
                    public var expand_in_step_inputs: Swift.Bool?
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/requestBody/json/exposed_for_pull_requests`.
                    public var exposed_for_pull_requests: Swift.Bool?
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/requestBody/json/is_protected`.
                    public var is_protected: Swift.Bool?
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/requestBody/json/value`.
                    public var value: Swift.String?
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - expand_in_step_inputs:
                    ///   - exposed_for_pull_requests:
                    ///   - is_protected:
                    ///   - value:
                    public init(
                        expand_in_step_inputs: Swift.Bool? = nil,
                        exposed_for_pull_requests: Swift.Bool? = nil,
                        is_protected: Swift.Bool? = nil,
                        value: Swift.String? = nil
                    ) {
                        self.expand_in_step_inputs = expand_in_step_inputs
                        self.exposed_for_pull_requests = exposed_for_pull_requests
                        self.is_protected = is_protected
                        self.value = value
                    }
                    public enum CodingKeys: String, CodingKey {
                        case expand_in_step_inputs
                        case exposed_for_pull_requests
                        case is_protected
                        case value
                    }
                }
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/requestBody/content/application\/json`.
                case json(Operations.secretUpdate.Input.Body.jsonPayload)
            }
            public var body: Operations.secretUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.secretUpdate.Input.Path,
                headers: Operations.secretUpdate.Input.Headers = .init(),
                body: Operations.secretUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/200/content/json/value1`.
                        public var value1: Components.Schemas.service_period_dto_period_CreatedSecretNoValue
                        /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/200/content/json/value2`.
                        public struct Value2Payload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/200/content/json/value2/value`.
                            public var value: Swift.String?
                            /// Creates a new `Value2Payload`.
                            ///
                            /// - Parameters:
                            ///   - value:
                            public init(value: Swift.String? = nil) {
                                self.value = value
                            }
                            public enum CodingKeys: String, CodingKey {
                                case value
                            }
                        }
                        /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/200/content/json/value2`.
                        public var value2: Operations.secretUpdate.Output.Ok.Body.jsonPayload.Value2Payload
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - value1:
                        ///   - value2:
                        public init(
                            value1: Components.Schemas.service_period_dto_period_CreatedSecretNoValue,
                            value2: Operations.secretUpdate.Output.Ok.Body.jsonPayload.Value2Payload
                        ) {
                            self.value1 = value1
                            self.value2 = value2
                        }
                        public init(from decoder: any Decoder) throws {
                            value1 = try .init(from: decoder)
                            value2 = try .init(from: decoder)
                        }
                        public func encode(to encoder: any Encoder) throws {
                            try value1.encode(to: encoder)
                            try value2.encode(to: encoder)
                        }
                    }
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/200/content/application\/json`.
                    case json(Operations.secretUpdate.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.secretUpdate.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Ok
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/patch(secretUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.secretUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.secretUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/patch(secretUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.secretUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.secretUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretUpdate.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretUpdate.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/patch(secretUpdate)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.secretUpdate.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.secretUpdate.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/patch(secretUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.secretUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.secretUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a secret by name
    ///
    /// Delete a secret by name
    ///
    /// - Remark: HTTP `DELETE /organizations/{org-slug}/secrets/{secret-name}`.
    /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/delete(secretDeletemixin0)`.
    public enum secretDeletemixin0 {
        public static let id: Swift.String = "secretDeletemixin0"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/path/org-slug`.
                public var org_hyphen_slug: Swift.String
                /// secret name
                ///
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/path/secret-name`.
                public var secret_hyphen_name: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org_hyphen_slug: organization slug
                ///   - secret_hyphen_name: secret name
                public init(
                    org_hyphen_slug: Swift.String,
                    secret_hyphen_name: Swift.String
                ) {
                    self.org_hyphen_slug = org_hyphen_slug
                    self.secret_hyphen_name = secret_hyphen_name
                }
            }
            public var path: Operations.secretDeletemixin0.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretDeletemixin0.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.secretDeletemixin0.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.secretDeletemixin0.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.secretDeletemixin0.Input.Path,
                headers: Operations.secretDeletemixin0.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                public init() {}
            }
            /// No Content
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/delete(secretDeletemixin0)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.secretDeletemixin0.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            public var noContent: Operations.secretDeletemixin0.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretDeletemixin0.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretDeletemixin0.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/delete(secretDeletemixin0)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.secretDeletemixin0.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.secretDeletemixin0.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/responses/403/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/responses/403/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretDeletemixin0.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretDeletemixin0.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/delete(secretDeletemixin0)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.secretDeletemixin0.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Operations.secretDeletemixin0.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{org-slug}/secrets/{secret-name}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_ProxyErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_ProxyErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.secretDeletemixin0.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.secretDeletemixin0.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found
            ///
            /// - Remark: Generated from `#/paths//organizations/{org-slug}/secrets/{secret-name}/delete(secretDeletemixin0)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.secretDeletemixin0.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.secretDeletemixin0.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get list of the addons for organization
    ///
    /// List all the provisioned addons for organization
    ///
    /// - Remark: HTTP `GET /organizations/{organization-slug}/addons`.
    /// - Remark: Generated from `#/paths//organizations/{organization-slug}/addons/get(addonListByOrganization)`.
    public enum addonListByOrganization {
        public static let id: Swift.String = "addonListByOrganization"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/path`.
            public struct Path: Sendable, Hashable {
                /// Organization slug
                ///
                /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/path/organization-slug`.
                public var organization_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - organization_hyphen_slug: Organization slug
                public init(organization_hyphen_slug: Swift.String) {
                    self.organization_hyphen_slug = organization_hyphen_slug
                }
            }
            public var path: Operations.addonListByOrganization.Input.Path
            /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonListByOrganization.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonListByOrganization.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.addonListByOrganization.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.addonListByOrganization.Input.Path,
                headers: Operations.addonListByOrganization.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_OwnerAddOnsListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_OwnerAddOnsListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByOrganization.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByOrganization.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//organizations/{organization-slug}/addons/get(addonListByOrganization)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.addonListByOrganization.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.addonListByOrganization.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByOrganization.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByOrganization.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//organizations/{organization-slug}/addons/get(addonListByOrganization)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.addonListByOrganization.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.addonListByOrganization.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByOrganization.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByOrganization.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//organizations/{organization-slug}/addons/get(addonListByOrganization)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.addonListByOrganization.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.addonListByOrganization.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByOrganization.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByOrganization.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//organizations/{organization-slug}/addons/get(addonListByOrganization)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.addonListByOrganization.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.addonListByOrganization.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/organizations/{organization-slug}/addons/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByOrganization.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByOrganization.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//organizations/{organization-slug}/addons/get(addonListByOrganization)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.addonListByOrganization.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.addonListByOrganization.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List all pipelines/standalone builds
    ///
    /// List all the Bitrise pipelines/standalone builds that can be accessed with the authenticated account. Filter pipelines/standalone builds based on their owner, using the owner slug, or the status of the pipeline/standalone build.
    ///
    /// - Remark: HTTP `GET /pipelines`.
    /// - Remark: Generated from `#/paths//pipelines/get(pipelineListAll)`.
    public enum pipelineListAll {
        public static let id: Swift.String = "pipelineListAll"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/pipelines/GET/query`.
            public struct Query: Sendable, Hashable {
                /// The slug of the owner of the app or apps
                ///
                /// - Remark: Generated from `#/paths/pipelines/GET/query/owner_slug`.
                public var owner_slug: Swift.String?
                /// The status of the pipelines/standalone build: on_hold, running, succeeded, failed, aborted, succeeded_with_abort
                ///
                /// - Remark: Generated from `#/paths/pipelines/GET/query/status`.
                public var status: Swift.String?
                /// Getting pipelines/standalone builds before the given parameter (RFC3339 time format)
                ///
                /// - Remark: Generated from `#/paths/pipelines/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 10)
                ///
                /// - Remark: Generated from `#/paths/pipelines/GET/query/limit`.
                public var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - owner_slug: The slug of the owner of the app or apps
                ///   - status: The status of the pipelines/standalone build: on_hold, running, succeeded, failed, aborted, succeeded_with_abort
                ///   - next: Getting pipelines/standalone builds before the given parameter (RFC3339 time format)
                ///   - limit: Max number of elements per page (default: 10)
                public init(
                    owner_slug: Swift.String? = nil,
                    status: Swift.String? = nil,
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.owner_slug = owner_slug
                    self.status = status
                    self.next = next
                    self.limit = limit
                }
            }
            public var query: Operations.pipelineListAll.Input.Query
            /// - Remark: Generated from `#/paths/pipelines/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineListAll.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pipelineListAll.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.pipelineListAll.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.pipelineListAll.Input.Query = .init(),
                headers: Operations.pipelineListAll.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/pipelines/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/pipelines/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_PipelineListAllResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_PipelineListAllResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineListAll.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineListAll.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//pipelines/get(pipelineListAll)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.pipelineListAll.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.pipelineListAll.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/pipelines/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/pipelines/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineListAll.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineListAll.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//pipelines/get(pipelineListAll)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.pipelineListAll.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.pipelineListAll.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/pipelines/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/pipelines/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineListAll.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineListAll.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//pipelines/get(pipelineListAll)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.pipelineListAll.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.pipelineListAll.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/pipelines/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/pipelines/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineListAll.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineListAll.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//pipelines/get(pipelineListAll)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.pipelineListAll.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.pipelineListAll.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/pipelines/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/pipelines/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.pipelineListAll.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.pipelineListAll.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//pipelines/get(pipelineListAll)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.pipelineListAll.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.pipelineListAll.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Migrate machine types
    ///
    /// Migrates all apps' machine types of a user from one machine type to another
    ///
    /// - Remark: HTTP `PATCH /user/{user-slug}/apps/machine_types`.
    /// - Remark: Generated from `#/paths//user/{user-slug}/apps/machine_types/patch(userMachineTypeUpdate)`.
    public enum userMachineTypeUpdate {
        public static let id: Swift.String = "userMachineTypeUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// User slug
                ///
                /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/path/user-slug`.
                public var user_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - user_hyphen_slug: User slug
                public init(user_hyphen_slug: Swift.String) {
                    self.user_hyphen_slug = user_hyphen_slug
                }
            }
            public var path: Operations.userMachineTypeUpdate.Input.Path
            /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userMachineTypeUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userMachineTypeUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.userMachineTypeUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.v0_period_OrganizationUpdateMachineTypeParams)
            }
            public var body: Operations.userMachineTypeUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.userMachineTypeUpdate.Input.Path,
                headers: Operations.userMachineTypeUpdate.Input.Headers = .init(),
                body: Operations.userMachineTypeUpdate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_OrganizationUpdateMachineTypeResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_OrganizationUpdateMachineTypeResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userMachineTypeUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userMachineTypeUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//user/{user-slug}/apps/machine_types/patch(userMachineTypeUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.userMachineTypeUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.userMachineTypeUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userMachineTypeUpdate.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userMachineTypeUpdate.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//user/{user-slug}/apps/machine_types/patch(userMachineTypeUpdate)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.userMachineTypeUpdate.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.userMachineTypeUpdate.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userMachineTypeUpdate.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userMachineTypeUpdate.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//user/{user-slug}/apps/machine_types/patch(userMachineTypeUpdate)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.userMachineTypeUpdate.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.userMachineTypeUpdate.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userMachineTypeUpdate.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userMachineTypeUpdate.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//user/{user-slug}/apps/machine_types/patch(userMachineTypeUpdate)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.userMachineTypeUpdate.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.userMachineTypeUpdate.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/user/{user-slug}/apps/machine_types/PATCH/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userMachineTypeUpdate.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userMachineTypeUpdate.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//user/{user-slug}/apps/machine_types/patch(userMachineTypeUpdate)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.userMachineTypeUpdate.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.userMachineTypeUpdate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a specific user
    ///
    /// Show information about a specific user
    ///
    /// - Remark: HTTP `GET /users/{user-slug}`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/get(userShow)`.
    public enum userShow {
        public static let id: Swift.String = "userShow"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/{user-slug}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// User slug
                ///
                /// - Remark: Generated from `#/paths/users/{user-slug}/GET/path/user-slug`.
                public var user_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - user_hyphen_slug: User slug
                public init(user_hyphen_slug: Swift.String) {
                    self.user_hyphen_slug = user_hyphen_slug
                }
            }
            public var path: Operations.userShow.Input.Path
            /// - Remark: Generated from `#/paths/users/{user-slug}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userShow.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userShow.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.userShow.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.userShow.Input.Path,
                headers: Operations.userShow.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_UserProfileRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_UserProfileRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userShow.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userShow.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/get(userShow)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.userShow.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.userShow.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userShow.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userShow.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/get(userShow)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.userShow.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.userShow.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userShow.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userShow.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/get(userShow)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.userShow.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.userShow.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userShow.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userShow.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/get(userShow)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.userShow.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.userShow.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.userShow.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.userShow.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/get(userShow)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.userShow.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.userShow.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get list of the addons for user
    ///
    /// List all the provisioned addons for the authenticated user
    ///
    /// - Remark: HTTP `GET /users/{user-slug}/addons`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/addons/get(addonListByUser)`.
    public enum addonListByUser {
        public static let id: Swift.String = "addonListByUser"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/path`.
            public struct Path: Sendable, Hashable {
                /// User slug
                ///
                /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/path/user-slug`.
                public var user_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - user_hyphen_slug: User slug
                public init(user_hyphen_slug: Swift.String) {
                    self.user_hyphen_slug = user_hyphen_slug
                }
            }
            public var path: Operations.addonListByUser.Input.Path
            /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonListByUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addonListByUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.addonListByUser.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.addonListByUser.Input.Path,
                headers: Operations.addonListByUser.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_OwnerAddOnsListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_OwnerAddOnsListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/addons/get(addonListByUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.addonListByUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.addonListByUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByUser.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByUser.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/addons/get(addonListByUser)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.addonListByUser.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.addonListByUser.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByUser.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByUser.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/addons/get(addonListByUser)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.addonListByUser.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.addonListByUser.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByUser.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByUser.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/addons/get(addonListByUser)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.addonListByUser.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.addonListByUser.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/addons/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.addonListByUser.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.addonListByUser.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/addons/get(addonListByUser)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.addonListByUser.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.addonListByUser.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List Apple API credentials for a specific user
    ///
    /// List Apple API credentials for a specific Bitrise user
    ///
    /// - Remark: HTTP `GET /users/{user-slug}/apple-api-credentials`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/apple-api-credentials/get(appleApiCredentialList)`.
    public enum appleApiCredentialList {
        public static let id: Swift.String = "appleApiCredentialList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/path`.
            public struct Path: Sendable, Hashable {
                /// User slug
                ///
                /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/path/user-slug`.
                public var user_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - user_hyphen_slug: User slug
                public init(user_hyphen_slug: Swift.String) {
                    self.user_hyphen_slug = user_hyphen_slug
                }
            }
            public var path: Operations.appleApiCredentialList.Input.Path
            /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appleApiCredentialList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appleApiCredentialList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appleApiCredentialList.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.appleApiCredentialList.Input.Path,
                headers: Operations.appleApiCredentialList.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppleAPICredentialsListResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppleAPICredentialsListResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appleApiCredentialList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appleApiCredentialList.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apple-api-credentials/get(appleApiCredentialList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appleApiCredentialList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appleApiCredentialList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appleApiCredentialList.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appleApiCredentialList.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apple-api-credentials/get(appleApiCredentialList)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appleApiCredentialList.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appleApiCredentialList.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appleApiCredentialList.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appleApiCredentialList.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apple-api-credentials/get(appleApiCredentialList)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appleApiCredentialList.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appleApiCredentialList.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appleApiCredentialList.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appleApiCredentialList.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apple-api-credentials/get(appleApiCredentialList)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appleApiCredentialList.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appleApiCredentialList.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apple-api-credentials/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appleApiCredentialList.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appleApiCredentialList.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apple-api-credentials/get(appleApiCredentialList)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appleApiCredentialList.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appleApiCredentialList.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get list of the apps for a user
    ///
    /// List all the available apps for the given user.  It needs the user slug that you can get from the [GET /me](https://api-docs.bitrise.io/#/user/user-profile) endpoint.
    ///
    /// - Remark: HTTP `GET /users/{user-slug}/apps`.
    /// - Remark: Generated from `#/paths//users/{user-slug}/apps/get(appListByUser)`.
    public enum appListByUser {
        public static let id: Swift.String = "appListByUser"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/path`.
            public struct Path: Sendable, Hashable {
                /// User slug
                ///
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/path/user-slug`.
                public var user_hyphen_slug: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - user_hyphen_slug: User slug
                public init(user_hyphen_slug: Swift.String) {
                    self.user_hyphen_slug = user_hyphen_slug
                }
            }
            public var path: Operations.appListByUser.Input.Path
            /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/query`.
            public struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/query/sort_by`.
                @frozen public enum sort_byPayload: String, Codable, Hashable, Sendable {
                    case last_build_at = "last_build_at"
                    case created_at = "created_at"
                }
                /// Order of applications
                ///
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/query/sort_by`.
                public var sort_by: Operations.appListByUser.Input.Query.sort_byPayload?
                /// Slug of the first app in the response
                ///
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/query/next`.
                public var next: Swift.String?
                /// Max number of elements per page (default: 50)
                ///
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/query/limit`.
                public var limit: Swift.Int?
                /// The title of the app
                ///
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/query/title`.
                public var title: Swift.String?
                /// The project type of the app (eg. 'ios', 'android')
                ///
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/query/project_type`.
                public var project_type: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - sort_by: Order of applications
                ///   - next: Slug of the first app in the response
                ///   - limit: Max number of elements per page (default: 50)
                ///   - title: The title of the app
                ///   - project_type: The project type of the app (eg. 'ios', 'android')
                public init(
                    sort_by: Operations.appListByUser.Input.Query.sort_byPayload? = nil,
                    next: Swift.String? = nil,
                    limit: Swift.Int? = nil,
                    title: Swift.String? = nil,
                    project_type: Swift.String? = nil
                ) {
                    self.sort_by = sort_by
                    self.next = next
                    self.limit = limit
                    self.title = title
                    self.project_type = project_type
                }
            }
            public var query: Operations.appListByUser.Input.Query
            /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appListByUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.appListByUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.appListByUser.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.appListByUser.Input.Path,
                query: Operations.appListByUser.Input.Query = .init(),
                headers: Operations.appListByUser.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.v0_period_AppListResponseModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.v0_period_AppListResponseModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// OK
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apps/get(appListByUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.appListByUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.appListByUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/400/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByUser.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByUser.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apps/get(appListByUser)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.appListByUser.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.appListByUser.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/401/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByUser.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByUser.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apps/get(appListByUser)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.appListByUser.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            public var unauthorized: Operations.appListByUser.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/404/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByUser.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByUser.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not Found
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apps/get(appListByUser)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.appListByUser.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.appListByUser.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/500/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{user-slug}/apps/GET/responses/500/content/application\/json`.
                    case json(Components.Schemas.service_period_StandardErrorRespModel)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.service_period_StandardErrorRespModel {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.appListByUser.Output.InternalServerError.Body
                /// Creates a new `InternalServerError`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.appListByUser.Output.InternalServerError.Body) {
                    self.body = body
                }
            }
            /// Internal Server Error
            ///
            /// - Remark: Generated from `#/paths//users/{user-slug}/apps/get(appListByUser)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.appListByUser.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.appListByUser.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
